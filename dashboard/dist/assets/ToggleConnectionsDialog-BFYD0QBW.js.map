{"version":3,"file":"ToggleConnectionsDialog-BFYD0QBW.js","sources":["../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/dialogs/ToggleConnectionsDialog.js"],"sourcesContent":["import React from 'react';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nfunction ellipses(slug) {\n    return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug;\n}\nconst useStyles = makeStyles()(theme => ({\n    connectionContainer: {\n        width: 500,\n        margin: theme.spacing(4),\n    },\n}));\nconst ConnectionRow = observer(function ConnectionRow({ conf, session, breakConnection, }) {\n    const { connectionInstances: instances = [] } = session;\n    const name = readConfObject(conf, 'name');\n    const assemblyNames = readConfObject(conf, 'assemblyNames');\n    const found = instances.find(conn => name === conn.name);\n    return (React.createElement(FormControlLabel, { key: conf.connectionId, control: React.createElement(Checkbox, { checked: !!found, onChange: () => {\n                var _a;\n                if (found) {\n                    breakConnection(conf);\n                }\n                else {\n                    (_a = session.makeConnection) === null || _a === void 0 ? void 0 : _a.call(session, conf);\n                }\n            }, color: \"primary\" }), label: [\n            name,\n            assemblyNames.length ? `(${ellipses(assemblyNames.join(','))})` : '',\n        ]\n            .filter(f => !!f)\n            .join(' ') }));\n});\nconst ConnectionList = observer(function ConnectionsList({ session, breakConnection, }) {\n    const { classes } = useStyles();\n    return (React.createElement(\"div\", { className: classes.connectionContainer }, !session.connections.length ? (React.createElement(Typography, null, \"No connections found\")) : (session.connections.map((conf, idx) => (React.createElement(\"div\", { key: `${conf.name}_${idx}` },\n        React.createElement(ConnectionRow, { conf: conf, session: session, breakConnection: breakConnection })))))));\n});\nconst ToggleConnectionDialog = observer(function ({ session, handleClose, breakConnection, }) {\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\", title: \"Turn on/off connections\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Use the checkbox to turn on/off connections\"),\n            React.createElement(ConnectionList, { session: session, breakConnection: breakConnection })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    handleClose();\n                }, variant: \"contained\", color: \"primary\" }, \"Close\"))));\n});\nexport default ToggleConnectionDialog;\n"],"names":["ellipses","slug","useStyles","makeStyles","theme","ConnectionRow","observer","conf","session","breakConnection","instances","name","readConfObject","assemblyNames","found","conn","React","FormControlLabel","Checkbox","_a","f","ConnectionList","classes","idx","Typography","ToggleConnectionDialog","handleClose","Dialog","DialogContent","DialogActions","Button"],"mappings":"kHAMA,SAASA,EAASC,EAAM,CACpB,OAAOA,EAAK,OAAS,GAAK,GAAGA,EAAK,MAAM,EAAG,EAAE,CAAC,MAAQA,CAC1D,CACA,MAAMC,EAAYC,EAAY,EAACC,IAAU,CACrC,oBAAqB,CACjB,MAAO,IACP,OAAQA,EAAM,QAAQ,CAAC,CAC1B,CACL,EAAE,EACIC,EAAgBC,EAAS,SAAuB,CAAE,KAAAC,EAAM,QAAAC,EAAS,gBAAAC,GAAoB,CACvF,KAAM,CAAE,oBAAqBC,EAAY,CAAA,CAAI,EAAGF,EAC1CG,EAAOC,EAAAA,eAAeL,EAAM,MAAM,EAClCM,EAAgBD,EAAAA,eAAeL,EAAM,eAAe,EACpDO,EAAQJ,EAAU,KAAKK,GAAQJ,IAASI,EAAK,IAAI,EACvD,OAAQC,EAAM,cAAcC,EAAkB,CAAE,IAAKV,EAAK,aAAc,QAASS,EAAM,cAAcE,EAAU,CAAE,QAAS,CAAC,CAACJ,EAAO,SAAU,IAAM,CACvI,IAAIK,EACAL,EACAL,EAAgBF,CAAI,GAGnBY,EAAKX,EAAQ,kBAAoB,MAAQW,IAAO,QAAkBA,EAAG,KAAKX,EAASD,CAAI,CAE/F,EAAE,MAAO,UAAW,EAAG,MAAO,CAC/BI,EACAE,EAAc,OAAS,IAAIb,EAASa,EAAc,KAAK,GAAG,CAAC,CAAC,IAAM,EAC9E,EACa,OAAOO,GAAK,CAAC,CAACA,CAAC,EACf,KAAK,GAAG,EAAG,CACxB,CAAC,EACKC,EAAiBf,EAAS,SAAyB,CAAE,QAAAE,EAAS,gBAAAC,CAAe,EAAK,CACpF,KAAM,CAAE,QAAAa,CAAS,EAAGpB,EAAW,EAC/B,OAAQc,EAAM,cAAc,MAAO,CAAE,UAAWM,EAAQ,mBAAqB,EAAGd,EAAQ,YAAY,OAA4EA,EAAQ,YAAY,IAAI,CAACD,EAAMgB,IAASP,EAAM,cAAc,MAAO,CAAE,IAAK,GAAGT,EAAK,IAAI,IAAIgB,CAAG,EAAI,EAC7QP,EAAM,cAAcX,EAAe,CAAE,KAAME,EAAM,QAASC,EAAS,gBAAiBC,CAAe,CAAE,CAAC,CAAE,EADEO,EAAM,cAAcQ,EAAY,KAAM,sBAAsB,CAC5D,CAClH,CAAC,EACKC,EAAyBnB,EAAS,SAAU,CAAE,QAAAE,EAAS,YAAAkB,EAAa,gBAAAjB,CAAe,EAAK,CAC1F,OAAQO,EAAM,cAAcW,EAAM,OAAE,CAAE,KAAM,GAAM,QAASD,EAAa,SAAU,KAAM,MAAO,yBAA2B,EACtHV,EAAM,cAAcY,EAAe,KAC/BZ,EAAM,cAAcQ,EAAY,KAAM,6CAA6C,EACnFR,EAAM,cAAcK,EAAgB,CAAE,QAASb,EAAS,gBAAiBC,CAAe,CAAE,CAAC,EAC/FO,EAAM,cAAca,EAAe,KAC/Bb,EAAM,cAAcc,EAAQ,CAAE,QAAS,IAAM,CACrCJ,EAAa,CACjC,EAAmB,QAAS,YAAa,MAAO,SAAW,EAAE,OAAO,CAAC,CAAC,CACtE,CAAC","x_google_ignoreList":[0]}
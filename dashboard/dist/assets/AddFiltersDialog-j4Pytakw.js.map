{"version":3,"file":"AddFiltersDialog-j4Pytakw.js","sources":["../../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearBasicDisplay/components/AddFiltersDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings';\nimport { Button, DialogActions, DialogContent, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    dialogContent: {\n        width: '80em',\n    },\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n    error: {\n        color: 'red',\n        fontSize: '0.8em',\n    },\n});\nfunction checkJexl(code) {\n    stringToJexlExpression(code);\n}\nconst AddFiltersDialog = observer(function ({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { activeFilters } = model;\n    const [data, setData] = useState(activeFilters.join('\\n'));\n    const [error, setError] = useState();\n    useEffect(() => {\n        try {\n            data\n                .split('\\n')\n                .map(line => line.trim())\n                .filter(line => !!line)\n                .map(line => {\n                checkJexl(line.trim());\n            });\n            setError(undefined);\n        }\n        catch (e) {\n            console.error(e);\n            setError(e);\n        }\n    }, [data]);\n    return (React.createElement(Dialog, { maxWidth: \"xl\", open: true, onClose: handleClose, title: \"Add track filters\" },\n        React.createElement(DialogContent, null,\n            React.createElement(\"div\", null,\n                \"Add filters, in jexl format, one per line, starting with the string jexl:. Examples:\",\n                ' ',\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"jexl:get(feature,'name')=='BRCA1'\"),\n                        \" - show only feature where the name attribute is BRCA1\"),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"jexl:get(feature,'type')=='gene'\"),\n                        \" - show only gene type features in a GFF that has many other feature types\"),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"jexl:get(feature,'score') > 400\"),\n                        \" - show only features that have a score greater than 400\"))),\n            error ? React.createElement(\"p\", { className: classes.error }, `${error}`) : null,\n            React.createElement(TextField, { variant: \"outlined\", multiline: true, minRows: 5, maxRows: 10, className: classes.dialogContent, fullWidth: true, value: data, onChange: event => {\n                    setData(event.target.value);\n                }, slotProps: {\n                    input: {\n                        classes: {\n                            input: classes.textAreaFont,\n                        },\n                    },\n                } })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !!error, onClick: () => {\n                    model.setJexlFilters(data.split('\\n'));\n                    handleClose();\n                } }, \"Submit\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                } }, \"Cancel\"))));\n});\nexport default AddFiltersDialog;\n"],"names":["useStyles","makeStyles","checkJexl","code","stringToJexlExpression","AddFiltersDialog","observer","model","handleClose","classes","activeFilters","data","setData","useState","error","setError","useEffect","line","e","React","Dialog","DialogContent","TextField","event","DialogActions","Button"],"mappings":"8IAMA,MAAMA,EAAYC,EAAU,EAAG,CAC3B,cAAe,CACX,MAAO,MACV,EACD,aAAc,CACV,WAAY,aACf,EACD,MAAO,CACH,MAAO,MACP,SAAU,OACb,CACL,CAAC,EACD,SAASC,EAAUC,EAAM,CACrBC,EAAAA,uBAAuBD,CAAI,CAC/B,CACK,MAACE,EAAmBC,EAAS,SAAU,CAAE,MAAAC,EAAO,YAAAC,CAAW,EAAK,CACjE,KAAM,CAAE,QAAAC,CAAS,EAAGT,EAAW,EACzB,CAAE,cAAAU,CAAa,EAAKH,EACpB,CAACI,EAAMC,CAAO,EAAIC,EAAQ,SAACH,EAAc,KAAK;AAAA,CAAI,CAAC,EACnD,CAACI,EAAOC,CAAQ,EAAIF,WAAU,EACpCG,OAAAA,EAAAA,UAAU,IAAM,CACZ,GAAI,CACAL,EACK,MAAM;AAAA,CAAI,EACV,IAAIM,GAAQA,EAAK,KAAM,CAAA,EACvB,OAAOA,GAAQ,CAAC,CAACA,CAAI,EACrB,IAAIA,GAAQ,CACbf,EAAUe,EAAK,MAAM,CACrC,CAAa,EACDF,EAAS,MAAS,CAC9B,OACeG,EAAG,CACN,QAAQ,MAAMA,CAAC,EACfH,EAASG,CAAC,CACtB,CACA,EAAO,CAACP,CAAI,CAAC,EACDQ,EAAM,cAAcC,EAAM,OAAE,CAAE,SAAU,KAAM,KAAM,GAAM,QAASZ,EAAa,MAAO,mBAAqB,EAChHW,EAAM,cAAcE,EAAe,KAC/BF,EAAM,cAAc,MAAO,KACvB,uFACA,IACAA,EAAM,cAAc,KAAM,KACtBA,EAAM,cAAc,KAAM,KACtBA,EAAM,cAAc,OAAQ,KAAM,mCAAmC,EACrE,wDAAwD,EAC5DA,EAAM,cAAc,KAAM,KACtBA,EAAM,cAAc,OAAQ,KAAM,kCAAkC,EACpE,4EAA4E,EAChFA,EAAM,cAAc,KAAM,KACtBA,EAAM,cAAc,OAAQ,KAAM,iCAAiC,EACnE,0DAA0D,CAAC,CAAC,EACxEL,EAAQK,EAAM,cAAc,IAAK,CAAE,UAAWV,EAAQ,KAAO,EAAE,GAAGK,CAAK,EAAE,EAAI,KAC7EK,EAAM,cAAcG,EAAW,CAAE,QAAS,WAAY,UAAW,GAAM,QAAS,EAAG,QAAS,GAAI,UAAWb,EAAQ,cAAe,UAAW,GAAM,MAAOE,EAAM,SAAUY,GAAS,CAC3KX,EAAQW,EAAM,OAAO,KAAK,CAC7B,EAAE,UAAW,CACV,MAAO,CACH,QAAS,CACL,MAAOd,EAAQ,YAClB,CACJ,CACJ,CAAA,CAAE,CAAC,EACZU,EAAM,cAAcK,EAAe,KAC/BL,EAAM,cAAcM,EAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,KAAM,SAAU,UAAW,GAAM,SAAU,CAAC,CAACX,EAAO,QAAS,IAAM,CACjIP,EAAM,eAAeI,EAAK,MAAM;AAAA,CAAI,CAAC,EACrCH,EAAa,CAChB,CAAA,EAAI,QAAQ,EACjBW,EAAM,cAAcM,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CAC/EjB,EAAa,CACjC,CAAmB,EAAE,QAAQ,CAAC,CAAC,CAC/B,CAAC","x_google_ignoreList":[0]}
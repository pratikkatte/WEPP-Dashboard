{"version":3,"file":"ExportSvgDialog-vOQJUhIz.js","sources":["../node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/ExportSvgDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui';\nimport { getSession, useLocalStorage } from '@jbrowse/core/util';\nimport { Button, Checkbox, CircularProgress, DialogActions, DialogContent, FormControlLabel, MenuItem, TextField, Typography, } from '@mui/material';\nfunction LoadingMessage() {\n    return (React.createElement(\"div\", null,\n        React.createElement(CircularProgress, { size: 20, style: { marginRight: 20 } }),\n        React.createElement(Typography, { display: \"inline\" }, \"Creating SVG\")));\n}\nfunction TextField2({ children, ...rest }) {\n    return (React.createElement(\"div\", null,\n        React.createElement(TextField, { ...rest }, children)));\n}\nfunction useSvgLocal(key, val) {\n    return useLocalStorage(`svg-${key}`, val);\n}\nexport default function ExportSvgDialog({ model, handleClose, }) {\n    const session = getSession(model);\n    const offscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n    const [rasterizeLayers, setRasterizeLayers] = useState(offscreenCanvas);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const [filename, setFilename] = useSvgLocal('file', 'jbrowse.svg');\n    const [themeName, setThemeName] = useSvgLocal('theme', session.themeName || 'default');\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Export SVG\" },\n        React.createElement(DialogContent, null,\n            error ? (React.createElement(ErrorMessage, { error: error })) : loading ? (React.createElement(LoadingMessage, null)) : null,\n            React.createElement(TextField2, { helperText: \"filename\", value: filename, onChange: event => {\n                    setFilename(event.target.value);\n                } }),\n            session.allThemes ? (React.createElement(TextField2, { select: true, label: \"Theme\", value: themeName, onChange: event => {\n                    setThemeName(event.target.value);\n                } }, Object.entries(session.allThemes()).map(([key, val]) => (React.createElement(MenuItem, { key: key, value: key }, val.name || '(Unknown name)'))))) : null,\n            offscreenCanvas ? (React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: rasterizeLayers, onChange: () => {\n                        setRasterizeLayers(val => !val);\n                    } }), label: \"Rasterize canvas based tracks? File may be much larger if this is turned off\" })) : (React.createElement(Typography, null, \"Note: rasterizing layers not yet supported in this browser, so SVG size may be large\"))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                } }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: async () => {\n                    setLoading(true);\n                    setError(undefined);\n                    try {\n                        await model.exportSvg({\n                            rasterizeLayers,\n                            filename,\n                            themeName,\n                        });\n                        handleClose();\n                    }\n                    catch (e) {\n                        console.error(e);\n                        setError(e);\n                    }\n                    finally {\n                        setLoading(false);\n                    }\n                } }, \"Submit\"))));\n}\n"],"names":["LoadingMessage","React","CircularProgress","Typography","TextField2","children","rest","TextField","useSvgLocal","key","val","useLocalStorage","ExportSvgDialog","model","handleClose","session","getSession","offscreenCanvas","rasterizeLayers","setRasterizeLayers","useState","loading","setLoading","error","setError","filename","setFilename","themeName","setThemeName","Dialog","DialogContent","ErrorMessage","event","MenuItem","FormControlLabel","Checkbox","DialogActions","Button","e"],"mappings":"gIAIA,SAASA,GAAiB,CACtB,OAAQC,EAAM,cAAc,MAAO,KAC/BA,EAAM,cAAcC,EAAkB,CAAE,KAAM,GAAI,MAAO,CAAE,YAAa,EAAE,EAAI,EAC9ED,EAAM,cAAcE,EAAY,CAAE,QAAS,QAAQ,EAAI,cAAc,CAAC,CAC9E,CACA,SAASC,EAAW,CAAE,SAAAC,EAAU,GAAGC,GAAQ,CACvC,OAAQL,EAAM,cAAc,MAAO,KAC/BA,EAAM,cAAcM,EAAW,CAAE,GAAGD,CAAI,EAAID,CAAQ,CAAC,CAC7D,CACA,SAASG,EAAYC,EAAKC,EAAK,CAC3B,OAAOC,EAAe,gBAAC,OAAOF,CAAG,GAAIC,CAAG,CAC5C,CACe,SAASE,EAAgB,CAAE,MAAAC,EAAO,YAAAC,GAAgB,CAC7D,MAAMC,EAAUC,EAAU,WAACH,CAAK,EAC1BI,EAAkB,OAAO,gBAAoB,IAC7C,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAASH,CAAe,EAChE,CAACI,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAK,EACtC,CAACG,EAAOC,CAAQ,EAAIJ,WAAU,EAC9B,CAACK,EAAUC,CAAW,EAAIlB,EAAY,OAAQ,aAAa,EAC3D,CAACmB,EAAWC,CAAY,EAAIpB,EAAY,QAASO,EAAQ,WAAa,SAAS,EACrF,OAAQd,EAAM,cAAc4B,EAAAA,OAAQ,CAAE,KAAM,GAAM,QAASf,EAAa,MAAO,YAAc,EACzFb,EAAM,cAAc6B,EAAe,KAC/BP,EAAStB,EAAM,cAAc8B,EAAAA,aAAc,CAAE,MAAOR,CAAK,CAAE,EAAKF,EAAWpB,EAAM,cAAcD,EAAgB,IAAI,EAAK,KACxHC,EAAM,cAAcG,EAAY,CAAE,WAAY,WAAY,MAAOqB,EAAU,SAAUO,GAAS,CACtFN,EAAYM,EAAM,OAAO,KAAK,CAClD,EAAmB,EACPjB,EAAQ,UAAad,EAAM,cAAcG,EAAY,CAAE,OAAQ,GAAM,MAAO,QAAS,MAAOuB,EAAW,SAAUK,GAAS,CAClHJ,EAAaI,EAAM,OAAO,KAAK,CAClC,CAAA,EAAI,OAAO,QAAQjB,EAAQ,UAAS,CAAE,EAAE,IAAI,CAAC,CAACN,EAAKC,CAAG,IAAOT,EAAM,cAAcgC,EAAU,CAAE,IAAKxB,EAAK,MAAOA,CAAG,EAAIC,EAAI,MAAQ,gBAAgB,CAAE,CAAC,EAAK,KAC9JO,EAAmBhB,EAAM,cAAciC,EAAkB,CAAE,QAASjC,EAAM,cAAckC,EAAU,CAAE,QAASjB,EAAiB,SAAU,IAAM,CAClIC,EAAmBT,GAAO,CAACA,CAAG,CACjC,CAAA,CAAE,EAAG,MAAO,8EAA8E,CAAE,EAAMT,EAAM,cAAcE,EAAY,KAAM,sFAAsF,CAAE,EAC7OF,EAAM,cAAcmC,EAAe,KAC/BnC,EAAM,cAAcoC,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CAC/EvB,EAAa,CAChB,CAAA,EAAI,QAAQ,EACjBb,EAAM,cAAcoC,EAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,KAAM,SAAU,QAAS,SAAY,CACnGf,EAAW,EAAI,EACfE,EAAS,MAAS,EAClB,GAAI,CACA,MAAMX,EAAM,UAAU,CAClB,gBAAAK,EACA,SAAAO,EACA,UAAAE,CAC5B,CAAyB,EACDb,EAAa,CACrC,OAC2BwB,EAAG,CACN,QAAQ,MAAMA,CAAC,EACfd,EAASc,CAAC,CAClC,QAC4B,CACJhB,EAAW,EAAK,CACxC,CACA,CAAmB,EAAE,QAAQ,CAAC,CAAC,CAC/B","x_google_ignoreList":[0]}
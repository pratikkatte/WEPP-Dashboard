{"version":3,"file":"BedTabixAdapter-DECXpz9V.js","sources":["../../node_modules/@jbrowse/plugin-bed/esm/BedTabixAdapter/BedTabixAdapter.js"],"sourcesContent":["import BED from '@gmod/bed';\nimport { TabixIndexedFile } from '@gmod/tabix';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { SimpleFeature } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { checkStopToken } from '@jbrowse/core/util/stopToken';\nimport { featureData } from '../util';\nclass BedTabixAdapter extends BaseFeatureDataAdapter {\n    constructor(config, getSubAdapter, pluginManager) {\n        super(config, getSubAdapter, pluginManager);\n        const bedGzLoc = this.getConf('bedGzLocation');\n        const type = this.getConf(['index', 'indexType']);\n        const loc = this.getConf(['index', 'location']);\n        const autoSql = this.getConf('autoSql');\n        const pm = this.pluginManager;\n        this.bed = new TabixIndexedFile({\n            filehandle: openLocation(bedGzLoc, pm),\n            csiFilehandle: type === 'CSI' ? openLocation(loc, pm) : undefined,\n            tbiFilehandle: type !== 'CSI' ? openLocation(loc, pm) : undefined,\n            chunkCacheSize: 50 * 2 ** 20,\n        });\n        this.columnNames = this.getConf('columnNames');\n        this.scoreColumn = this.getConf('scoreColumn');\n        this.parser = new BED({ autoSql });\n    }\n    async getRefNames(opts = {}) {\n        return this.bed.getReferenceSequenceNames(opts);\n    }\n    async getHeader() {\n        return this.bed.getHeader();\n    }\n    async getNames() {\n        if (this.columnNames.length) {\n            return this.columnNames;\n        }\n        const header = await this.bed.getHeader();\n        const defs = header.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const defline = defs.at(-1);\n        return (defline === null || defline === void 0 ? void 0 : defline.includes('\\t'))\n            ? defline\n                .slice(1)\n                .split('\\t')\n                .map(f => f.trim())\n            : undefined;\n    }\n    getFeatures(query, opts = {}) {\n        const { stopToken } = opts;\n        return ObservableCreate(async (observer) => {\n            const meta = await this.bed.getMetadata();\n            const { columnNumbers } = meta;\n            const colRef = columnNumbers.ref - 1;\n            const colStart = columnNumbers.start - 1;\n            const colEnd = columnNumbers.end - 1;\n            const names = await this.getNames();\n            let start = performance.now();\n            checkStopToken(stopToken);\n            await this.bed.getLines(query.refName, query.start, query.end, {\n                lineCallback: (line, fileOffset) => {\n                    if (performance.now() - start > 200) {\n                        checkStopToken(stopToken);\n                        start = performance.now();\n                    }\n                    observer.next(new SimpleFeature(featureData({\n                        line,\n                        colRef,\n                        colStart,\n                        colEnd,\n                        scoreColumn: this.scoreColumn,\n                        parser: this.parser,\n                        uniqueId: `${this.id}-${fileOffset}`,\n                        names,\n                    })));\n                },\n                stopToken: opts.stopToken,\n            });\n            observer.complete();\n        }, opts.stopToken);\n    }\n    freeResources() { }\n}\nBedTabixAdapter.capabilities = ['getFeatures', 'getRefNames'];\nexport default BedTabixAdapter;\n"],"names":["BedTabixAdapter","BaseFeatureDataAdapter","config","getSubAdapter","pluginManager","bedGzLoc","type","loc","autoSql","pm","TabixIndexedFile","openLocation","BED","opts","defline","f","query","stopToken","ObservableCreate","observer","meta","columnNumbers","colRef","colStart","colEnd","names","start","checkStopToken","line","fileOffset","SimpleFeature","featureData"],"mappings":"uOAQA,MAAMA,UAAwBC,EAAAA,sBAAuB,CACjD,YAAYC,EAAQC,EAAeC,EAAe,CAC9C,MAAMF,EAAQC,EAAeC,CAAa,EAC1C,MAAMC,EAAW,KAAK,QAAQ,eAAe,EACvCC,EAAO,KAAK,QAAQ,CAAC,QAAS,WAAW,CAAC,EAC1CC,EAAM,KAAK,QAAQ,CAAC,QAAS,UAAU,CAAC,EACxCC,EAAU,KAAK,QAAQ,SAAS,EAChCC,EAAK,KAAK,cAChB,KAAK,IAAM,IAAIC,EAAiB,CAC5B,WAAYC,EAAAA,aAAaN,EAAUI,CAAE,EACrC,cAAeH,IAAS,MAAQK,EAAY,aAACJ,EAAKE,CAAE,EAAI,OACxD,cAAeH,IAAS,MAAQK,EAAY,aAACJ,EAAKE,CAAE,EAAI,OACxD,eAAgB,GAAK,GAAK,EACtC,CAAS,EACD,KAAK,YAAc,KAAK,QAAQ,aAAa,EAC7C,KAAK,YAAc,KAAK,QAAQ,aAAa,EAC7C,KAAK,OAAS,IAAIG,EAAI,CAAE,QAAAJ,CAAO,CAAE,CACzC,CACI,MAAM,YAAYK,EAAO,GAAI,CACzB,OAAO,KAAK,IAAI,0BAA0BA,CAAI,CACtD,CACI,MAAM,WAAY,CACd,OAAO,KAAK,IAAI,UAAW,CACnC,CACI,MAAM,UAAW,CACb,GAAI,KAAK,YAAY,OACjB,OAAO,KAAK,YAIhB,MAAMC,GAFS,MAAM,KAAK,IAAI,UAAW,GACrB,MAAM,YAAY,EAAE,OAAOC,GAAK,CAAC,CAACA,CAAC,EAClC,GAAG,EAAE,EAC1B,OAAQD,GAAY,MAAsCA,EAAQ,SAAS,GAAI,EACzEA,EACG,MAAM,CAAC,EACP,MAAM,GAAI,EACV,IAAIC,GAAKA,EAAE,KAAM,CAAA,EACpB,MACd,CACI,YAAYC,EAAOH,EAAO,GAAI,CAC1B,KAAM,CAAE,UAAAI,CAAS,EAAKJ,EACtB,OAAOK,EAAAA,iBAAiB,MAAOC,GAAa,CACxC,MAAMC,EAAO,MAAM,KAAK,IAAI,YAAa,EACnC,CAAE,cAAAC,CAAa,EAAKD,EACpBE,EAASD,EAAc,IAAM,EAC7BE,EAAWF,EAAc,MAAQ,EACjCG,EAASH,EAAc,IAAM,EAC7BI,EAAQ,MAAM,KAAK,SAAU,EACnC,IAAIC,EAAQ,YAAY,IAAK,EAC7BC,EAAAA,eAAeV,CAAS,EACxB,MAAM,KAAK,IAAI,SAASD,EAAM,QAASA,EAAM,MAAOA,EAAM,IAAK,CAC3D,aAAc,CAACY,EAAMC,IAAe,CAC5B,YAAY,MAAQH,EAAQ,MAC5BC,EAAAA,eAAeV,CAAS,EACxBS,EAAQ,YAAY,IAAK,GAE7BP,EAAS,KAAK,IAAIW,EAAa,cAACC,EAAY,CACxC,KAAAH,EACA,OAAAN,EACA,SAAAC,EACA,OAAAC,EACA,YAAa,KAAK,YAClB,OAAQ,KAAK,OACb,SAAU,GAAG,KAAK,EAAE,IAAIK,CAAU,GAClC,MAAAJ,CACH,CAAA,CAAC,CAAC,CACN,EACD,UAAWZ,EAAK,SAChC,CAAa,EACDM,EAAS,SAAU,CAC/B,EAAWN,EAAK,SAAS,CACzB,CACI,eAAgB,CAAA,CACpB,CACAb,EAAgB,aAAe,CAAC,cAAe,aAAa","x_google_ignoreList":[0]}
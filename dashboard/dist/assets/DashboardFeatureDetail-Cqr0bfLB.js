import{g as V,c3 as z,u as S,j as e,F as H,b8 as J,a4 as D,b6 as Z,a6 as ee,b7 as te,m as W,a as w,c as ne,T as se,K as ie,L as re,M as oe,ah as ae,o as le,P as ce}from"./rpcWorker-BQYX6MpU.js";import{S as de}from"./SimpleField-DzoUF9St.js";var E={exports:{}},U;function ue(){return U||(U=1,function(s){var t=function(){function n(r,d){return d!=null&&r instanceof d}var a;try{a=Map}catch{a=function(){}}var f;try{f=Set}catch{f=function(){}}var u;try{u=Promise}catch{u=function(){}}function l(r,d,m,v,_){typeof d=="object"&&(m=d.depth,v=d.prototype,_=d.includeNonEnumerable,d=d.circular);var B=[],k=[],Y=typeof Buffer<"u";typeof d>"u"&&(d=!0),typeof m>"u"&&(m=1/0);function b(o,j){if(o===null)return null;if(j===0)return o;var p,A;if(typeof o!="object")return o;if(n(o,a))p=new a;else if(n(o,f))p=new f;else if(n(o,u))p=new u(function(q,R){o.then(function(P){q(b(P,j-1))},function(P){R(b(P,j-1))})});else if(l.__isArray(o))p=[];else if(l.__isRegExp(o))p=new RegExp(o.source,g(o)),o.lastIndex&&(p.lastIndex=o.lastIndex);else if(l.__isDate(o))p=new Date(o.getTime());else{if(Y&&Buffer.isBuffer(o))return Buffer.allocUnsafe?p=Buffer.allocUnsafe(o.length):p=new Buffer(o.length),o.copy(p),p;n(o,Error)?p=Object.create(o):typeof v>"u"?(A=Object.getPrototypeOf(o),p=Object.create(A)):(p=Object.create(v),A=v)}if(d){var L=B.indexOf(o);if(L!=-1)return k[L];B.push(o),k.push(p)}n(o,a)&&o.forEach(function(q,R){var P=b(R,j-1),K=b(q,j-1);p.set(P,K)}),n(o,f)&&o.forEach(function(q){var R=b(q,j-1);p.add(R)});for(var y in o){var F;A&&(F=Object.getOwnPropertyDescriptor(A,y)),!(F&&F.set==null)&&(p[y]=b(o[y],j-1))}if(Object.getOwnPropertySymbols)for(var $=Object.getOwnPropertySymbols(o),y=0;y<$.length;y++){var M=$[y],C=Object.getOwnPropertyDescriptor(o,M);C&&!C.enumerable&&!_||(p[M]=b(o[M],j-1),C.enumerable||Object.defineProperty(p,M,{enumerable:!1}))}if(_)for(var I=Object.getOwnPropertyNames(o),y=0;y<I.length;y++){var T=I[y],C=Object.getOwnPropertyDescriptor(o,T);C&&C.enumerable||(p[T]=b(o[T],j-1),Object.defineProperty(p,T,{enumerable:!1}))}return p}return b(r,m)}l.clonePrototype=function(d){if(d===null)return null;var m=function(){};return m.prototype=d,new m};function i(r){return Object.prototype.toString.call(r)}l.__objToStr=i;function c(r){return typeof r=="object"&&i(r)==="[object Date]"}l.__isDate=c;function h(r){return typeof r=="object"&&i(r)==="[object Array]"}l.__isArray=h;function x(r){return typeof r=="object"&&i(r)==="[object RegExp]"}l.__isRegExp=x;function g(r){var d="";return r.global&&(d+="g"),r.ignoreCase&&(d+="i"),r.multiline&&(d+="m"),d}return l.__getRegExpFlags=g,l}();s.exports&&(s.exports=t)}(E)),E.exports}var fe=ue(),ge=V(fe),O=z();function N(s,t){var n;return((n=t.tags)==null?void 0:n[s])||t[s]}async function X(s,t){const n=S.getSession(t),{view:a}=t;try{if(a)await a.navToLocString(s);else throw new Error("No view associated with this view anymore")}catch(f){console.error(f),n.notify(`${f}`)}}const Q={AM:"The smallest template-independent mapping quality in the template",AS:"Alignment score generated by aligner",BC:"Barcode sequence identifying the sample",BQ:"Offset to base alignment quality (BAQ)",BZ:"Phred quality of the unique molecular barcode bases in the {OX} tag",CB:"Cell identifier",CC:"Reference name of the next hit",CM:"Edit distance between the color sequence and the color reference (see also {NM})",CO:"Free-text comments",CP:"Leftmost coordinate of the next hit",CQ:"Color read base qualities",CR:"Cellular barcode sequence bases (uncorrected)",CS:"Color read sequence",CT:"Complete read annotation tag, used for consensus annotation dummy features",CY:"Phred quality of the cellular barcode sequence in the {CR} tag",E2:"The 2nd most likely base calls",FI:"The index of segment in the template",FS:"Segment suffix",FZ:"Flow signal intensities",GC:"Reserved for backwards compatibility reasons",GQ:"Reserved for backwards compatibility reasons",GS:"Reserved for backwards compatibility reasons",H0:"Number of perfect hits",H1:"Number of 1-difference hits (see also {NM})",H2:"Number of 2-difference hits",HI:"Query hit index",IH:"Query hit total count",LB:"Library",MC:"CIGAR string for mate/next segment",MD:"String encoding mismatched and deleted reference bases",MF:"Reserved for backwards compatibility reasons",MI:"Molecular identifier; a string that uniquely identifies the molecule from which the record was derived",ML:"Base modification probabilities",MM:"Base modifications / methylation ",MQ:"Mapping quality of the mate/next segment",NH:"Number of reported alignments that contain the query in the current record",NM:"Edit distance to the reference",OA:"Original alignment",OC:"Original CIGAR (deprecated; use {OA} instead)",OP:"Original mapping position (deprecated; use {OA} instead)",OQ:"Original base quality",OX:"Original unique molecular barcode bases",PG:"Program",PQ:"Phred likelihood of the template",PT:"Read annotations for parts of the padded read sequence",PU:"Platform unit",Q2:"Phred quality of the mate/next segment sequence in the {R2} tag",QT:"Phred quality of the sample barcode sequence in the {BC} tag",QX:"Quality score of the unique molecular identifier in the {RX} tag",R2:"Sequence of the mate/next segment in the template",RG:"Read group",RT:"Reserved for backwards compatibility reasons",RX:"Sequence bases of the (possibly corrected) unique molecular identifier",S2:"Reserved for backwards compatibility reasons",SA:"Other canonical alignments in a chimeric alignment",SM:"Template-independent mapping quality",SQ:"Reserved for backwards compatibility reasons",TC:"The number of segments in the template",TS:"Transcript strand",U2:"Phred probability of the 2nd call being wrong conditional on the best being wrong",UQ:"Phred likelihood of the segment, conditional on the mapping being correct"};function pe({tag:s,model:t}){return e.jsxs("div",{children:[e.jsx(H,{children:"List of supplementary alignment locations"}),e.jsx("ul",{children:s.split(";").filter(n=>!!n).map((n,a)=>{const[f,u,l,i]=n.split(","),c=J(i),h=Math.floor(c/5),x=+u,g=+u+c,r=x-h,d=g+h,m=`${f}:${Math.max(1,r)}-${d}`,v=x.toLocaleString("en-US"),_=g.toLocaleString("en-US"),B=`${f}:${v}-${_} (${l}) [${c}bp]`;return e.jsx("li",{children:e.jsx(D,{onClick:async k=>{k.preventDefault(),X(m,t)},children:B})},`${m}-${a}`)})})]})}function he(s,t){const n=s.get("tags");return n!==void 0?n[t]:s.get(t)}async function me({view:s,feature:t}){const{assemblyManager:n}=S.getSession(s),a=t.get("CIGAR"),f=t.get("strand"),u=he(t,"SA")||"",l=t.get("name"),i=Z(a,1),c=await n.waitForAssembly(s.assemblyNames[0]);if(!c)throw new Error("assembly not found");const h=ee(u,t.id(),f,l,!0),x=t.toJSON();x.clipPos=i,x.strand=1,x.mate={refName:l,start:i,end:i+te(a)};const g=[x,...h];return g.forEach((r,d)=>{r.refName=(c==null?void 0:c.getCanonicalRefName(r.refName))||r.refName,r.syntenyId=d,r.mate.syntenyId=d,r.mate.uniqueId=`${r.uniqueId}_mate`}),g.sort((r,d)=>r.clipPos-d.clipPos),g}const xe=w.lazy(()=>import("./BreakendOptionDialog-OOfAPVgx.js")),ye=W()({cursor:{cursor:"pointer"}});function be({model:s,feature:t,viewType:n}){const{classes:a}=ye(),f=S.getSession(s),{view:u}=s,[l,i]=w.useState(),[c,h]=w.useState();w.useEffect(()=>{(async()=>{try{const g=await me({view:u,feature:new S.SimpleFeature(t)});i(g)}catch(g){h(g),console.error(g)}})()},[t,u]);const x=[];if(l)for(let g=0;g<l.length-1;g++)x.push([l[g],l[g+1]]);return x.length?e.jsxs("div",{children:[e.jsx(H,{children:"Launch split views with breakend source and target"}),c?e.jsx(ne.ErrorMessage,{error:c}):null,e.jsx("ul",{children:x.map((g,r)=>{const[d,m]=g;return e.jsx("li",{children:e.jsx(se,{title:"Top panel->Bottom panel",children:e.jsxs(D,{href:"#",className:a.cursor,onClick:v=>{v.preventDefault(),f.queueDialog(_=>[xe,{handleClose:_,f1:d,f2:m,model:s,viewType:n}])},children:[d.refName,":",S.toLocale(d.strand===1?d.end:d.start)," ","-> ",m.refName,":",S.toLocale(m.strand===1?m.start:m.end)]})})},`${JSON.stringify(g)}-${r}`)})})]}):null}function je(s){const{model:t,tag:n,feature:a}=s,f=S.getSession(t),{pluginManager:u}=S.getEnv(f);let l;try{l=u.getViewType("BreakpointSplitView")}catch{}return e.jsxs(O.BaseCard,{...s,title:"Supplementary alignments",children:[e.jsx(pe,{model:t,tag:n}),l?e.jsx(be,{viewType:l,model:t,feature:a}):null]})}function ve(s){const{UM_ID:t,unseen_mutations:n,is_sequence:a}=s||{},f=typeof t=="string"&&t.length>0?t.split(",").map(i=>i.trim()).filter(Boolean):[];let u={};try{u=Object.fromEntries((Array.isArray(Object.values(n||{}))?Object.values(n||{}).flat():[]).filter(i=>i&&typeof i.unseenKey=="string"&&typeof i.mutation=="string").map(i=>[i.unseenKey,i.mutation.split(":")]))}catch{u={}}function l(i,c){const h=i&&i.length>c&&i[c]!==void 0?Number(i[c]):"";return typeof h=="number"&&!isNaN(h)&&h!==""?h.toFixed(3):""}return e.jsx(O.BaseCard,{title:a?"Possible Unaccounted Alleles":"Unaccounted Alleles",children:e.jsx("div",{style:{maxHeight:"400px",overflowY:"auto"},children:f.length>0||a&&Object.keys(u).length>0?e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{style:{padding:"5px 10px",textAlign:"center",fontWeight:"bold"},children:"Allele"}),e.jsx("th",{style:{padding:"5px 10px",textAlign:"center",fontWeight:"bold"},children:"Residue"}),e.jsx("th",{style:{padding:"5px 10px",textAlign:"center",fontWeight:"bold"},children:"Allele Frequency"}),e.jsx("th",{style:{padding:"5px 10px",textAlign:"center",fontWeight:"bold"},children:"Depth"})]})}),e.jsx("tbody",{children:a?Object.entries(u).map(([i,c])=>e.jsxs("tr",{style:{backgroundColor:"#f9f9f9",borderBottom:"1px solid #ddd"},children:[e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:c&&c[0]||""}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:l(c,1)}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:l(c,2)}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:c&&c[3]||""})]},i)):f.map(i=>{const c=u[i];return c?e.jsxs("tr",{style:{backgroundColor:"#f9f9f9",borderBottom:"1px solid #ddd"},children:[e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:c&&c[0]||""}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:l(c,1)}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:l(c,2)}),e.jsx("td",{style:{padding:"8px",textAlign:"center",color:"#555"},children:c&&c[3]||""})]},i):null})})]}):e.jsx("div",{children:"No unaccounted alleles"})})})}function Se(s){const{haplotype_names:t,RG:n}=s;return e.jsx(O.BaseCard,{title:"Possible Haplotypes",children:e.jsx("div",{style:{maxHeight:"400px",overflowY:"auto"},children:e.jsx("ul",{style:{listStyleType:"none",padding:"0"},children:n&&n.length>0?n.map(a=>e.jsx("li",{style:{backgroundColor:"#f9f9f9",borderBottom:"1px solid #ddd",padding:"8px"},children:e.jsx("span",{style:{fontWeight:"bold"},children:t[a]})},a)):e.jsx("span",{style:{fontWeight:"bold"},children:"No Haplotypes"})})})})}function _e(s){const{uncertain_nodes_names:t}=s;return e.jsx(O.BaseCard,{title:"Uncertain Haplotypes",children:e.jsx("div",{style:{maxHeight:"400px",overflowY:"auto"},children:e.jsx("ul",{style:{listStyleType:"none",padding:"0"},children:t&&t.length>0?t.map((n,a)=>e.jsx("li",{style:{backgroundColor:"#f9f9f9",borderBottom:"1px solid #ddd",padding:"8px"},children:e.jsx("span",{style:{fontWeight:"bold"},children:n})},a)):e.jsx("span",{style:{fontWeight:"bold"},children:"No Uncertain Nodes"})})})})}const Ce=W()({compact:{paddingRight:0,paddingTop:0,paddingBottom:0}}),we=["read paired","read mapped in proper pair","read unmapped","mate unmapped","read reverse strand","mate reverse strand","first in pair","second in pair","not primary alignment","read fails platform/vendor quality checks","read is PCR or optical duplicate","supplementary alignment"];function Oe(s){const{classes:t}=Ce(),{feature:n}=s,{flags:a}=n;return e.jsxs(O.BaseCard,{...s,title:"Flags",children:[e.jsx(de,{name:"Flag",value:a}),e.jsx(ie,{children:we.map((f,u)=>{const l=a&1<<u,i=`${f}_${l}`;return e.jsx(re,{control:e.jsx(oe,{className:t.compact,checked:!!l,name:f,readOnly:!0}),label:f},i)})})]})}function Ae({locString:s,model:t}){return e.jsx(D,{onClick:n=>{n.preventDefault(),X(s,t)},href:"#",children:s})}function qe({value:s}){const[t,n]=w.useState(!1),[a,f]=w.useState(!1),u=String(s);return u.length>100?e.jsxs(e.Fragment,{children:[e.jsx("button",{type:"button",onClick:()=>{ae(u),f(!0),setTimeout(()=>f(!1),700)},children:a?"Copied to clipboard":"Copy"}),e.jsx("button",{type:"button",onClick:()=>n(l=>!l),children:t?"Show less":"Show more"}),e.jsx("div",{children:t?u:`${u.slice(0,100)}...`})]}):e.jsx("div",{children:u})}const G=["clipPos","flags","UM","RG"],Be=le(function(s){const{model:t}=s,n=ge(t.featureData),a=t.display_id,f=t.all_group_name,u=t.uncertain_nodes_names,l=t.unseen_mutations;a.includes("sequence")&&G.push("qual","template_length","Score","MQ","CIGAR","length_on_ref","seq_length","Type");const i=N("SA",n),c=N("UM",n);let h=N("RG",n);const x=h==null?void 0:h.split(",");return e.jsxs(ce,{"data-testid":"alignment-side-drawer",children:[e.jsx(O.FeatureDetails,{...s,omit:G,descriptions:{...Q,tags:Q},feature:n,formatter:(g,r)=>r==="next_segment_position"?e.jsx(Ae,{model:t,locString:g}):e.jsx(qe,{value:g})}),a.includes("sequence")?e.jsx(e.Fragment,{children:"/"}):e.jsx(Se,{haplotype_names:f,RG:x}),a.includes("sequence")?e.jsx(_e,{uncertain_nodes_names:u}):e.jsx(e.Fragment,{}),e.jsx(ve,{UM_ID:c,unseen_mutations:l,is_sequence:a.includes("sequence")}),i?e.jsx(je,{model:t,tag:i,feature:n}):null,n.flags!==void 0?e.jsx(Oe,{feature:n,...s}):null]})});export{Be as default};
//# sourceMappingURL=DashboardFeatureDetail-Cqr0bfLB.js.map

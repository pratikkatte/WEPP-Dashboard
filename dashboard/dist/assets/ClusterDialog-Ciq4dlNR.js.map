{"version":3,"file":"ClusterDialog-Ciq4dlNR.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/shared/ClusterDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getContainingView, getSession, isAbortException, } from '@jbrowse/core/util';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { saveAs } from 'file-saver';\nimport { isAlive } from 'mobx-state-tree';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n    mgap: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: theme.spacing(4),\n    },\n}));\nexport default function HierarchicalCluster({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const [results, setResults] = useState();\n    const [error, setError] = useState();\n    const [paste, setPaste] = useState('');\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                setError(undefined);\n                const view = getContainingView(model);\n                if (!view.initialized) {\n                    return;\n                }\n                const { rpcManager } = getSession(model);\n                const { sources, mafFilter, adapterConfig } = model;\n                const sessionId = getRpcSessionId(model);\n                const ret = (await rpcManager.call(sessionId, 'MultiVariantGetGenotypeMatrix', {\n                    regions: view.dynamicBlocks.contentBlocks,\n                    sources,\n                    mafFilter,\n                    sessionId,\n                    adapterConfig,\n                }));\n                const entries = Object.values(ret);\n                const keys = Object.keys(ret);\n                const text = `try(library(fastcluster), silent=TRUE)\ninputMatrix<-matrix(c(${entries.map(val => val.genotypes.join(',')).join(',\\n')}\n),nrow=${entries.length},byrow=TRUE)\nrownames(inputMatrix)<-c(${keys.map(key => `'${key}'`).join(',')})\nresultClusters<-hclust(dist(inputMatrix), method='single')\ncat(resultClusters$order,sep='\\\\n')`;\n                setResults(text);\n            }\n            catch (e) {\n                if (!isAbortException(e) && isAlive(model)) {\n                    console.error(e);\n                    setError(e);\n                }\n            }\n        })();\n    }, [model]);\n    return (React.createElement(Dialog, { open: true, title: \"Cluster by genotype\", onClose: handleClose },\n        React.createElement(DialogContent, null,\n            React.createElement(\"div\", { className: classes.mgap },\n                React.createElement(Typography, null, \"This page will produce an R script that will perform hierarchical clustering on the visible genotype data using `hclust`.\"),\n                React.createElement(Typography, null, \"You can then paste the results in this form to specify the row ordering.\"),\n                results ? (React.createElement(\"div\", null,\n                    React.createElement(\"div\", null,\n                        \"Step 1:\",\n                        ' ',\n                        React.createElement(Button, { variant: \"contained\", onClick: () => {\n                                saveAs(new Blob([results || ''], {\n                                    type: 'text/plain;charset=utf-8',\n                                }), 'cluster.R');\n                            } }, \"Download Rscript\"),\n                        ' ',\n                        \"or\",\n                        ' ',\n                        React.createElement(Button, { variant: \"contained\", onClick: () => {\n                                copy(results || '');\n                            } }, \"Copy Rscript to clipboard\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(TextField, { multiline: true, fullWidth: true, variant: \"outlined\", placeholder: \"Step 2. Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)\", rows: 10, value: paste, onChange: event => {\n                                    setPaste(event.target.value);\n                                }, slotProps: {\n                                    input: {\n                                        classes: {\n                                            input: classes.textAreaFont,\n                                        },\n                                    },\n                                } }))))) : (React.createElement(LoadingEllipses, { variant: \"h6\", title: \"Generating genotype matrix\" })),\n                error ? React.createElement(ErrorMessage, { error: error }) : null)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { disabled: !results, variant: \"contained\", onClick: () => {\n                    const { sources } = model;\n                    if (sources) {\n                        try {\n                            model.setLayout(paste\n                                .split('\\n')\n                                .map(t => t.trim())\n                                .filter(f => !!f)\n                                .map(r => +r)\n                                .map(idx => {\n                                const ret = sources[idx - 1];\n                                if (!ret) {\n                                    throw new Error(`out of bounds at ${idx}`);\n                                }\n                                return ret;\n                            }));\n                        }\n                        catch (e) {\n                            console.error(e);\n                            setError(e);\n                        }\n                    }\n                    handleClose();\n                } }, \"Apply clustering\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                } }, \"Cancel\"))));\n}\n"],"names":["useStyles","makeStyles","theme","HierarchicalCluster","model","handleClose","classes","results","setResults","useState","error","setError","paste","setPaste","useEffect","view","getContainingView","rpcManager","getSession","sources","mafFilter","adapterConfig","sessionId","getRpcSessionId","ret","entries","keys","text","val","key","e","isAbortException","isAlive","React","Dialog","DialogContent","Typography","Button","saveAs","copy","TextField","event","LoadingEllipses","ErrorMessage","DialogActions","f","r","idx"],"mappings":"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","x_google_ignoreList":[0]}
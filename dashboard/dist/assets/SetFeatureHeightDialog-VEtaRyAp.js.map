{"version":3,"file":"SetFeatureHeightDialog-VEtaRyAp.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetFeatureHeightDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst SetFeatureHeightDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const { featureHeightSetting, noSpacing: noSpacingSetting } = model;\n    const [height, setHeight] = useState(`${featureHeightSetting}`);\n    const [noSpacing, setNoSpacing] = useState(noSpacingSetting);\n    const ok = height !== '' && !Number.isNaN(+height);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set feature height\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Adjust the feature height and whether there is any spacing between features. Setting feature height to 1 and removing spacing makes the display very compact.\"),\n            React.createElement(TextField, { value: height, helperText: \"Feature height\", onChange: event => {\n                    setHeight(event.target.value);\n                } }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: !!noSpacing, onChange: () => {\n                        setNoSpacing(val => !val);\n                    } }), label: \"Remove spacing between features in y-direction?\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !ok, onClick: () => {\n                        model.setFeatureHeight(height !== '' && !Number.isNaN(+height) ? +height : undefined);\n                        model.setNoSpacing(noSpacing);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                        handleClose();\n                    } }, \"Cancel\")))));\n});\nexport default SetFeatureHeightDialog;\n"],"names":["SetFeatureHeightDialog","observer","props","model","handleClose","featureHeightSetting","noSpacingSetting","height","setHeight","useState","noSpacing","setNoSpacing","ok","React","Dialog","DialogContent","Typography","TextField","event","FormControlLabel","Checkbox","val","DialogActions","Button"],"mappings":"8GAIK,MAACA,EAAyBC,EAAS,SAAUC,EAAO,CACrD,KAAM,CAAE,MAAAC,EAAO,YAAAC,CAAW,EAAKF,EACzB,CAAE,qBAAAG,EAAsB,UAAWC,CAAkB,EAAGH,EACxD,CAACI,EAAQC,CAAS,EAAIC,EAAQ,SAAC,GAAGJ,CAAoB,EAAE,EACxD,CAACK,EAAWC,CAAY,EAAIF,EAAAA,SAASH,CAAgB,EACrDM,EAAKL,IAAW,IAAM,CAAC,OAAO,MAAM,CAACA,CAAM,EACjD,OAAQM,EAAM,cAAcC,EAAAA,OAAQ,CAAE,KAAM,GAAM,QAASV,EAAa,MAAO,oBAAsB,EACjGS,EAAM,cAAcE,EAAe,KAC/BF,EAAM,cAAcG,EAAY,KAAM,+JAA+J,EACrMH,EAAM,cAAcI,EAAW,CAAE,MAAOV,EAAQ,WAAY,iBAAkB,SAAUW,GAAS,CACzFV,EAAUU,EAAM,OAAO,KAAK,CAChD,EAAmB,EACPL,EAAM,cAAcM,EAAkB,CAAE,QAASN,EAAM,cAAcO,EAAU,CAAE,QAAS,CAAC,CAACV,EAAW,SAAU,IAAM,CAC3GC,EAAaU,GAAO,CAACA,CAAG,CAChD,EAAuB,EAAG,MAAO,kDAAmD,EACxER,EAAM,cAAcS,EAAe,KAC/BT,EAAM,cAAcU,EAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,KAAM,SAAU,UAAW,GAAM,SAAU,CAACX,EAAI,QAAS,IAAM,CAC7HT,EAAM,iBAAiBI,IAAW,IAAM,CAAC,OAAO,MAAM,CAACA,CAAM,EAAI,CAACA,EAAS,MAAS,EACpFJ,EAAM,aAAaO,CAAS,EAC5BN,EAAa,CAChB,CAAA,EAAI,QAAQ,EACjBS,EAAM,cAAcU,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CAC/EnB,EAAa,CACrC,GAAyB,QAAQ,CAAC,CAAC,CAAC,CACpC,CAAC","x_google_ignoreList":[0]}
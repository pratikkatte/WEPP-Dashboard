{"version":3,"mappings":"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","names":["VariantAnnotPanel","rows","columns","checked","setChecked","useState","widths","e","measureGridWidth","r","React","FormControlLabel","Checkbox","event","Typography","DataGrid","c","i","GridToolbar","VariantAnnotationTable","data","fields","title","BaseCard","AnnotGrid","elt","id","SampleFilters","filter","setFilter","field","TextField","VariantSamples","props","_a","feature","descriptions","samples","preFilteredRows","error","filters","row","key","currFilter","keys","index","_b","variantFieldDescriptions","LaunchBreakendPanel","lazy","__vitePreload","AnnPanel","_c","_d","_e","annDesc","annFields","ann","CsqPanel","csqDescription","csqFields","csq","VariantFeatureWidget","observer","model","featureData","feat","ALT","type","rest","Paper","FeatureDetails","Suspense","alt","parseBreakend","VariantSampleGrid"],"ignoreList":[0,1,2,3,4],"sources":["../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/AnnotGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantAnnotationTable.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/variantFieldDescriptions.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantFeatureWidget.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nexport default function VariantAnnotPanel({ rows, columns, }) {\n    const [checked, setChecked] = useState(false);\n    const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])));\n    return rows.length ? (React.createElement(\"div\", null,\n        React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: checked, onChange: event => {\n                    setChecked(event.target.checked);\n                } }), label: React.createElement(Typography, { variant: \"body2\" }, \"Show options\") }),\n        React.createElement(DataGrid, { rowHeight: 25, rows: rows, columns: columns.map((c, i) => ({ ...c, width: widths[i] })), slots: { toolbar: checked ? GridToolbar : null } }))) : null;\n}\n","import React from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport AnnotGrid from './AnnotGrid';\nexport default function VariantAnnotationTable({ data, fields, title, }) {\n    return data.length ? (React.createElement(BaseCard, { title: title },\n        React.createElement(AnnotGrid, { rows: data.map((elt, id) => ({\n                id,\n                ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n            })), columns: fields.map(c => ({ field: c })) }))) : null;\n}\n","import React, { useState } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, TextField, Typography, } from '@mui/material';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nfunction SampleFilters({ columns, filter, setFilter, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Typography, null, \"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\\\d* will find any non-zero allele e.g. 0|2 or 2/33\"),\n        columns.map(({ field }) => (React.createElement(TextField, { key: `filter-${field}`, placeholder: `Filter ${field}`, value: filter[field] || '', onChange: event => {\n                setFilter({ ...filter, [field]: event.target.value });\n            } })))));\n}\nexport default function VariantSamples(props) {\n    var _a;\n    const { feature, descriptions = {} } = props;\n    const [filter, setFilter] = useState({});\n    const samples = (feature.samples || {});\n    const preFilteredRows = Object.entries(samples);\n    let error;\n    let rows = [];\n    const filters = Object.keys(filter);\n    try {\n        rows = preFilteredRows\n            .map(row => {\n            return {\n                ...Object.fromEntries(Object.entries(row[1]).map(e => [e[0], `${e[1]}`])),\n                sample: row[0],\n                id: row[0],\n            };\n        })\n            .filter(row => filters.length\n            ? filters.every(key => {\n                const currFilter = filter[key];\n                return currFilter\n                    ? new RegExp(currFilter, 'i').exec(row[key])\n                    : true;\n            })\n            : true);\n    }\n    catch (e) {\n        error = e;\n    }\n    const [checked, setChecked] = useState(false);\n    const keys = ['sample', ...Object.keys(((_a = preFilteredRows[0]) === null || _a === void 0 ? void 0 : _a[1]) || {})];\n    const widths = keys.map(e => measureGridWidth(rows.map(r => r[e])));\n    const columns = keys.map((field, index) => {\n        var _a, _b;\n        return ({\n            field,\n            description: (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.FORMAT) === null || _a === void 0 ? void 0 : _a[field]) === null || _b === void 0 ? void 0 : _b.Description,\n            width: widths[index],\n        });\n    });\n    return !preFilteredRows.length ? null : (React.createElement(BaseCard, { ...props, title: \"Samples\" },\n        error ? React.createElement(Typography, { color: \"error\" }, `${error}`) : null,\n        React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: checked, onChange: event => {\n                    setChecked(event.target.checked);\n                } }), label: React.createElement(Typography, { variant: \"body2\" }, \"Show options\") }),\n        checked ? (React.createElement(SampleFilters, { setFilter: setFilter, columns: columns, filter: filter })) : null,\n        React.createElement(\"div\", { style: { display: 'flex', flexDirection: 'column' } },\n            React.createElement(DataGrid, { rows: rows, hideFooter: rows.length < 100, columns: columns, disableRowSelectionOnClick: true, rowHeight: 25, columnHeaderHeight: 35, disableColumnMenu: true, slots: { toolbar: checked ? GridToolbar : null }, slotProps: {\n                    toolbar: {\n                        printOptions: {\n                            disableToolbarButton: true,\n                        },\n                    },\n                } }))));\n}\n","export const variantFieldDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS: 'position: The reference position, with the 1st base having position 1',\n    ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n    REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER: 'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n};\n","import React, { Suspense, lazy } from 'react';\nimport { parseBreakend } from '@gmod/vcf';\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails';\nimport { Paper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport VariantAnnotationTable from './VariantAnnotationTable';\nimport VariantSampleGrid from './VariantSampleGrid';\nimport { variantFieldDescriptions } from './variantFieldDescriptions';\nconst LaunchBreakendPanel = lazy(() => import('./LaunchBreakendPanel'));\nfunction AnnPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const annDesc = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.ANN) === null || _b === void 0 ? void 0 : _b.Description;\n    const annFields = ((_d = (_c = annDesc === null || annDesc === void 0 ? void 0 : annDesc.match(/.*Functional annotations:'(.*)'$/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const ann = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.ANN) || [];\n    return (React.createElement(VariantAnnotationTable, { fields: annFields, data: ann, title: \"Variant ANN field\" }));\n}\nfunction CsqPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const csqDescription = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.CSQ) === null || _b === void 0 ? void 0 : _b.Description;\n    const csqFields = ((_d = (_c = csqDescription === null || csqDescription === void 0 ? void 0 : csqDescription.match(/.*Format: (.*)/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const csq = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.CSQ) || [];\n    return (React.createElement(VariantAnnotationTable, { fields: csqFields, data: csq, title: \"Variant CSQ field\" }));\n}\nconst VariantFeatureWidget = observer(function (props) {\n    const { model } = props;\n    const { featureData, descriptions } = model;\n    const feat = JSON.parse(JSON.stringify(featureData));\n    const { samples, ALT, type = '', ...rest } = feat;\n    return (React.createElement(Paper, { \"data-testid\": \"variant-side-drawer\" },\n        React.createElement(FeatureDetails, { feature: rest, descriptions: { ...variantFieldDescriptions, ...descriptions }, ...props }),\n        React.createElement(CsqPanel, { feature: rest, descriptions: descriptions }),\n        React.createElement(AnnPanel, { feature: rest, descriptions: descriptions }),\n        React.createElement(Suspense, { fallback: null },\n            type === 'breakend' ? (React.createElement(LaunchBreakendPanel, { feature: feat, locStrings: feat.ALT.map((alt) => { var _a; return ((_a = parseBreakend(alt)) === null || _a === void 0 ? void 0 : _a.MatePosition) || ''; }), model: model })) : null,\n            type === 'translocation' ? (React.createElement(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.INFO.CHR2[0]}:${feat.INFO.END}`] })) : null,\n            type === 'paired_feature' ? (React.createElement(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.mate.refName}:${feat.mate.start}`] })) : null,\n            type.includes('inversion') ||\n                type.includes('deletion') ||\n                type.includes('duplication') ||\n                type.includes('cnv') ||\n                type.includes('sv') ? (React.createElement(LaunchBreakendPanel, { feature: {\n                    uniqueId: 'random',\n                    refName: feat.refName,\n                    start: feat.start,\n                    end: feat.start + 1,\n                    mate: {\n                        refName: feat.refName,\n                        start: feat.end,\n                        end: feat.end + 1,\n                    },\n                }, model: model, locStrings: [`${feat.refName}:${feat.end}`] })) : null),\n        React.createElement(VariantSampleGrid, { feature: feat, ...props, descriptions: descriptions })));\n});\nexport default VariantFeatureWidget;\n"],"file":"assets/VariantFeatureWidget-otOz42Wn.js"}
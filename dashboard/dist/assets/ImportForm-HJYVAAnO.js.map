{"version":3,"file":"ImportForm-HJYVAAnO.js","sources":["../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/ImportFormRefNameAutocomplete.js","../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/ImportForm.js"],"sourcesContent":["import React from 'react';\nimport { getSession } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport RefNameAutocomplete from './RefNameAutocomplete';\nimport { fetchResults } from './util';\nconst ImportFormRefNameAutocomplete = observer(function ({ model, selectedAsm, value, setValue, setOption, }) {\n    const session = getSession(model);\n    const { assemblyManager, textSearchManager } = session;\n    const { rankSearchResults } = model;\n    const searchScope = model.searchScope(selectedAsm);\n    const assembly = assemblyManager.get(selectedAsm);\n    return (React.createElement(RefNameAutocomplete, { fetchResults: queryString => fetchResults({\n            queryString,\n            assembly,\n            textSearchManager,\n            rankSearchResults,\n            searchScope,\n        }), model: model, assemblyName: selectedAsm, value: value, minWidth: 270, onChange: str => {\n            setValue(str);\n        }, onSelect: val => {\n            setOption(val);\n        }, TextFieldProps: {\n            variant: 'outlined',\n            helperText: 'Enter sequence name, feature name, or location',\n        } }));\n});\nexport default ImportFormRefNameAutocomplete;\n","import React, { useEffect, useState } from 'react';\nimport { AssemblySelector, ErrorMessage } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, CircularProgress, Container, FormControl, Grid, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport ImportFormRefNameAutocomplete from './ImportFormRefNameAutocomplete';\nimport { handleSelectedRegion, navToOption } from '../../searchUtils';\nconst useStyles = makeStyles()(theme => ({\n    importFormContainer: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(2),\n    },\n    container: {\n        padding: theme.spacing(4),\n    },\n}));\nconst LinearGenomeViewImportForm = observer(function ({ model, }) {\n    var _a;\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const { assemblyNames, assemblyManager } = session;\n    const { error } = model;\n    const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0]);\n    const [option, setOption] = useState();\n    const assembly = assemblyManager.get(selectedAsm);\n    const assemblyError = assemblyNames.length\n        ? assembly === null || assembly === void 0 ? void 0 : assembly.error\n        : 'No configured assemblies';\n    const displayError = assemblyError || error;\n    const [value, setValue] = useState('');\n    const regions = assembly === null || assembly === void 0 ? void 0 : assembly.regions;\n    const assemblyLoaded = !!regions;\n    const r0 = regions ? ((_a = regions[0]) === null || _a === void 0 ? void 0 : _a.refName) || '' : '';\n    useEffect(() => {\n        setValue(r0);\n    }, [r0, selectedAsm]);\n    return (React.createElement(\"div\", { className: classes.container },\n        displayError ? React.createElement(ErrorMessage, { error: displayError }) : null,\n        React.createElement(Container, { className: classes.importFormContainer },\n            React.createElement(\"form\", { onSubmit: async (event) => {\n                    var _a;\n                    event.preventDefault();\n                    model.setError(undefined);\n                    if (value) {\n                        try {\n                            if ((option === null || option === void 0 ? void 0 : option.getDisplayString()) === value &&\n                                option.hasLocation()) {\n                                await navToOption({\n                                    option,\n                                    model,\n                                    assemblyName: selectedAsm,\n                                });\n                            }\n                            else if ((_a = option === null || option === void 0 ? void 0 : option.results) === null || _a === void 0 ? void 0 : _a.length) {\n                                model.setSearchResults(option.results, option.getLabel(), selectedAsm);\n                            }\n                            else if (assembly) {\n                                await handleSelectedRegion({ input: value, assembly, model });\n                            }\n                        }\n                        catch (e) {\n                            console.error(e);\n                            session.notify(`${e}`, 'warning');\n                        }\n                    }\n                } },\n                React.createElement(Grid, { container: true, spacing: 1, justifyContent: \"center\", alignItems: \"center\" },\n                    React.createElement(Grid, { item: true },\n                        React.createElement(FormControl, null,\n                            React.createElement(AssemblySelector, { onChange: val => {\n                                    setSelectedAsm(val);\n                                }, localStorageKey: \"lgv\", session: session, selected: selectedAsm }))),\n                    React.createElement(Grid, { item: true }, selectedAsm ? (assemblyError ? (React.createElement(CloseIcon, { style: { color: 'red' } })) : assemblyLoaded ? (React.createElement(FormControl, null,\n                        React.createElement(ImportFormRefNameAutocomplete, { value: value, setValue: setValue, selectedAsm: selectedAsm, setOption: setOption, model: model }))) : (React.createElement(CircularProgress, { size: 20, disableShrink: true }))) : null),\n                    React.createElement(Grid, { item: true },\n                        React.createElement(FormControl, null,\n                            React.createElement(Button, { type: \"submit\", disabled: !value, className: classes.button, variant: \"contained\", color: \"primary\" }, \"Open\")),\n                        React.createElement(FormControl, null,\n                            React.createElement(Button, { disabled: !value, className: classes.button, onClick: () => {\n                                    model.setError(undefined);\n                                    model.showAllRegionsInAssembly(selectedAsm);\n                                }, variant: \"contained\", color: \"secondary\" }, \"Show all regions in assembly\"))))))));\n});\nexport default LinearGenomeViewImportForm;\n"],"names":["ImportFormRefNameAutocomplete","observer","model","selectedAsm","value","setValue","setOption","session","getSession","assemblyManager","textSearchManager","rankSearchResults","searchScope","assembly","React","RefNameAutocomplete","queryString","fetchResults","str","val","useStyles","makeStyles","theme","LinearGenomeViewImportForm","_a","classes","assemblyNames","error","setSelectedAsm","useState","option","assemblyError","displayError","regions","assemblyLoaded","r0","useEffect","ErrorMessage","Container","event","navToOption","handleSelectedRegion","e","Grid","FormControl","AssemblySelector","CloseIcon","CircularProgress","Button"],"mappings":"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","x_google_ignoreList":[0,1]}
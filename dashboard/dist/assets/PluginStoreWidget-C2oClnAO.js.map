{"version":3,"mappings":";iUAIA,MAAAA,EAAeC,EAA2BC,EAAI,IAAC,OAAQ,CACrD,EAAG,oJACL,CAAC,EAAG,cAAc,ECFlBC,EAAeF,EAA2BC,EAAI,IAAC,OAAQ,CACrD,EAAG,wNACL,CAAC,EAAG,MAAM,ECEJE,EAAqBC,OAAK,IAAKC,EAAA,IAAC,OAAO,kCAAsB,2CAAC,EAC9DC,EAAYC,EAAU,EAAG,KAAO,CAClC,oBAAqB,CACjB,YAAa,QAChB,CACL,EAAE,EACF,SAASC,GAAe,CACpB,KAAM,CAAE,QAAAC,CAAS,EAAGH,EAAW,EAC/B,OAAQI,EAAM,cAAcC,EAAS,CAAE,UAAWF,EAAQ,oBAAqB,MAAO,sEAAwE,EAC1JC,EAAM,cAAcR,EAAU,IAAI,CAAC,CAC3C,CACA,MAAMU,EAAkBC,EAAS,SAAU,CAAE,OAAAC,EAAQ,MAAAC,CAAK,EAAK,CAC3D,KAAM,CAAE,cAAAC,CAAa,EAAKC,EAAM,OAACF,CAAK,EAChCG,EAAUC,EAAU,WAACJ,CAAK,EAC1B,CAAE,QAAAK,EAAS,UAAAC,CAAS,EAAKH,EACzBI,EAAkBC,8BAA4BL,CAAO,EACrDA,EAAQ,eAAe,KAAKM,GAAK,CAAE,IAAIC,EAAI,QAASA,EAAKT,EAAc,eAAeF,EAAO,IAAI,KAAO,MAAQW,IAAO,OAAS,OAASA,EAAG,OAASD,EAAE,GAAM,GAC7J,GACN,OAAQd,EAAM,cAAcgB,EAAU,CAAE,IAAKZ,EAAO,IAAM,EACtDO,GAAaC,EAAmBZ,EAAM,cAAciB,EAAY,CAAE,cAAe,gBAAgBb,EAAO,IAAI,GAAI,QAAS,IAAM,CACvHI,EAAQ,YAAYU,GAAW,CAC3BzB,EACA,CACI,OAAQW,EAAO,KACf,QAAUe,GAAS,CACf,GAAIA,EAAM,CACN,MAAMC,EAAiBd,EAAc,eAAeF,EAAO,IAAI,EAC3DO,EACAD,EAAQ,aAAaU,CAAc,EAE9BP,8BAA4BL,CAAO,GACxCA,EAAQ,oBAAoBY,CAAc,CAE9E,CAC4BF,EAAS,CACZ,CACJ,CACrB,CAAiB,CACjB,CAAe,EACHlB,EAAM,cAAcqB,EAAW,IAAI,CAAC,EAAMrB,EAAM,cAAcF,EAAc,IAAI,EACpFE,EAAM,cAAcsB,EAAY,KAAMlB,EAAO,IAAI,CAAC,CAC1D,CAAC,EC7CKmB,EAAuBpB,EAAS,SAA8B,CAAE,cAAAG,EAAe,MAAAD,CAAK,EAAK,CAC3F,KAAM,CAAE,QAAAmB,CAAO,EAAKlB,EACd,CAAE,WAAAmB,CAAU,EAAKpB,EACjBqB,EAAkBF,EAAQ,OAAOV,GAAK,CAAE,IAAIC,EAAI,MAAO,EAAG,GAAAA,EAAKT,EAAc,eAAeQ,EAAE,IAAI,KAAO,MAAQC,IAAO,SAAkBA,EAAG,QAAU,EAC7J,OAAQf,EAAM,cAAc2B,EAAM,KAAMD,EAAgB,OAAS,EAAKA,EACjE,OAAOZ,GAAKA,EAAE,KAAK,YAAW,EAAG,SAASW,EAAW,aAAa,CAAC,EACnE,IAAIX,GAAKd,EAAM,cAAcE,EAAiB,CAAE,IAAKY,EAAE,KAAM,OAAQA,EAAG,MAAOT,EAAO,CAAC,EAAML,EAAM,cAAcsB,EAAY,KAAM,gCAAgC,CAAE,CAC9K,CAAC,ECPDM,EAAetC,EAA2BC,EAAI,IAAC,OAAQ,CACrD,EAAG,mDACL,CAAC,EAAG,OAAO,ECFXsC,EAAevC,EAA2BC,EAAI,IAAC,OAAQ,CACrD,EAAG,6GACL,CAAC,EAAG,QAAQ,ECGNK,GAAYC,EAAU,EAAG,CAC3B,KAAM,CACF,OAAQ,OACX,EACD,KAAM,CACF,WAAY,QACZ,YAAa,OAChB,EACD,KAAM,CACF,WAAY,GACf,EACD,UAAW,CACP,QAAS,OACT,WAAY,QACf,EACD,GAAI,CACA,YAAa,OAChB,CACL,CAAC,EACKiC,GAAa3B,EAAS,SAAoB,CAAE,OAAAC,EAAQ,MAAAC,CAAK,EAAK,CAChE,KAAM,CAAE,QAAAN,CAAS,EAAGH,GAAW,EACzBY,EAAUC,EAAU,WAACJ,CAAK,EAC1B,CAAE,cAAAC,CAAa,EAAKC,EAAM,OAACF,CAAK,EAChC,CAAE,yBAAA0B,CAAwB,EAAKzB,EAC/B0B,EAAcD,EAAyB,KAAKE,GAAK,QAASA,GAAKA,EAAE,MAAQ7B,EAAO,GAAG,EACnF,CAAC8B,EAAcC,CAAe,EAAIC,WAAS,EAAK,EAChD,CAAE,UAAAzB,EAAW,QAAAD,CAAO,EAAKF,EACzB,CAAE,KAAAW,EAAM,QAAAkB,EAAS,YAAAC,CAAa,EAAGlC,EACvC,OAAQJ,EAAM,cAAcuC,EAAM,CAAE,QAAS,WAAY,IAAKpB,EAAM,UAAWpB,EAAQ,IAAM,EACzFC,EAAM,cAAcwC,EAAa,KAC7BxC,EAAM,cAAcsB,EAAY,CAAE,QAAS,IAAM,EAC7CtB,EAAM,cAAcyC,EAAM,CAAE,KAAM,GAAGrC,EAAO,QAAQ,UAAW,OAAQ,SAAU,IAAK,UAAU,EAAIA,EAAO,IAAI,CAAC,EACpHJ,EAAM,cAAc,MAAO,CAAE,UAAWD,EAAQ,SAAW,EACvDC,EAAM,cAAc6B,EAAY,CAAE,UAAW9B,EAAQ,GAAI,EACzDC,EAAM,cAAcsB,EAAY,KAAMe,EAAQ,KAAK,IAAI,CAAC,CAAC,EAC7DrC,EAAM,cAAcsB,EAAY,CAAE,UAAWvB,EAAQ,IAAM,EAAE,cAAc,EAC3EC,EAAM,cAAcsB,EAAY,KAAMgB,CAAW,CAAC,EACtDtC,EAAM,cAAc0C,EAAa,KAC7B1C,EAAM,cAAc2C,EAAQ,CAAE,QAAS,YAAa,SAAUX,GAAeE,EAAc,UAAWF,EAAchC,EAAM,cAAc4B,EAAW,IAAI,EAAI5B,EAAM,cAAc4C,EAAS,IAAI,EAAG,QAAS,IAAM,CAClMjC,EACAD,EAAQ,UAAUN,CAAM,EAEnBS,8BAA4BL,CAAO,EACxCA,EAAQ,iBAAiBJ,CAAM,EAG/BI,EAAQ,OAAO,0BAA0B,EAE7C2B,EAAgB,EAAI,CACvB,GAAIH,EAAc,YAAc,SAAS,CAAC,CAAC,CAC5D,CAAC,EC1DM,SAASa,IAAkB,CAC9B,KAAM,CAACrB,EAASsB,CAAU,EAAIV,WAAU,EAClC,CAACW,EAAOC,CAAQ,EAAIZ,WAAU,EACpCa,mBAAU,IAAM,EAEX,SAAY,CACT,GAAI,CACA,MAAMC,EAAM,MAAM,MAAM,+CAA+C,EACvE,GAAI,CAACA,EAAI,GAAI,CACT,MAAMC,EAAM,MAAMD,EAAI,KAAM,EAC5B,MAAM,IAAI,MAAM,QAAQA,EAAI,MAAM,sBAAsBC,CAAG,EAAE,CACjF,CACgB,MAAMC,EAAQ,MAAMF,EAAI,KAAM,EAC9BJ,EAAWM,EAAM,OAAO,CACxC,OACmBC,EAAG,CACN,QAAQ,MAAMA,CAAC,EACfL,EAASK,CAAC,CAC1B,CACA,GAAY,CACP,EAAE,EAAE,EACE,CAAE,QAAA7B,EAAS,MAAAuB,CAAO,CAC7B,CCVA,MAAMO,GAAwB5D,OAAK,IAAKC,EAAA,IAAC,OAAO,qCAAyB,6CAAC,EACpEC,GAAYC,EAAY,EAAC0D,IAAU,CACrC,WAAY,CACR,MAAOA,EAAM,QAAQ,SAAS,YACjC,EACD,WAAY,CACR,aAAc,EACd,gBAAiBA,EAAM,QAAQ,WAAW,KAC1C,QAAS,MACT,QAAS,OACT,aAAc,QACjB,EACD,mBAAoB,CAChB,OAAQ,WACR,QAAS,MACZ,EACD,GAAI,CACA,YAAa,OAChB,EACD,EAAG,CACC,OAAQ,KACX,CACL,EAAE,EACIC,GAAoBrD,EAAS,SAAU,CAAE,MAAAE,GAAU,CACrD,KAAM,CAAE,QAAAN,CAAS,EAAGH,GAAW,EACzB,CAAE,QAAA4B,EAAS,MAAAuB,CAAO,EAAGF,GAAiB,EACtCrC,EAAUC,EAAU,WAACJ,CAAK,EAC1B,CAAE,UAAAM,CAAS,EAAKH,EAChB,CAAE,cAAAF,CAAa,EAAKC,EAAOF,CAAK,EACtC,OAAQL,EAAM,cAAc,MAAO,KAC/BW,GAAcX,EAAM,cAAcA,EAAM,SAAU,KAC9C,CAACyD,cAAezD,EAAM,cAAc,MAAO,CAAE,UAAWD,EAAQ,UAAY,EACxEC,EAAM,cAAcX,EAAkB,CAAE,UAAWU,EAAQ,GAAI,EAC/DC,EAAM,cAAcsB,EAAY,KAC5B,qBACAtB,EAAM,cAAc,OAAQ,KAAM,cAAc,EAChD,6IAA6I,CAAC,EACtJA,EAAM,cAAc2C,EAAQ,CAAE,UAAW5C,EAAQ,mBAAoB,QAAS,YAAa,QAAS,IAAM,CAClGS,EAAQ,YAAYU,GAAW,CAC3BoC,GACA,CACI,MAAAjD,EACA,QAAAa,CACH,CACzB,CAAqB,CACrB,CAAmB,EAAE,mBAAmB,CAAC,EACjClB,EAAM,cAAc0D,EAAW,CAAE,MAAO,iBAAkB,MAAOrD,EAAM,WAAY,SAAUsD,GAAS,CAC9FtD,EAAM,cAAcsD,EAAM,OAAO,KAAK,CACtD,EAAe,UAAW,GAAM,UAAW,CAC3B,MAAO,CACH,aAAe3D,EAAM,cAAc4D,EAAgB,CAAE,SAAU,KAAO,EAClE5D,EAAM,cAAciB,EAAY,CAAE,QAAS,IAAM,CACzCZ,EAAM,gBAAiB,CACvD,CAA+B,EACHL,EAAM,cAAc6D,EAAW,IAAI,CAAC,CAAC,CAChD,CACjB,EAAe,EACP7D,EAAM,cAAc8D,EAAW,CAAE,gBAAiB,EAAM,EACpD9D,EAAM,cAAc+D,EAAkB,CAAE,WAAY/D,EAAM,cAAcgE,EAAgB,CAAE,UAAWjE,EAAQ,UAAY,EAAG,EACxHC,EAAM,cAAcsB,EAAY,CAAE,QAAS,IAAI,EAAI,mBAAmB,CAAC,EAC3EtB,EAAM,cAAc,MAAO,CAAE,UAAWD,EAAQ,CAAG,EAC/CC,EAAM,cAAcuB,EAAsB,CAAE,cAAejB,EAAe,MAAOD,CAAO,EAAC,CAAC,EAClGL,EAAM,cAAc8D,EAAW,CAAE,gBAAiB,EAAM,EACpD9D,EAAM,cAAc+D,EAAkB,CAAE,WAAY/D,EAAM,cAAcgE,EAAgB,CAAE,UAAWjE,EAAQ,UAAY,EAAG,EACxHC,EAAM,cAAcsB,EAAY,CAAE,QAAS,IAAI,EAAI,mBAAmB,CAAC,EAC3EyB,EAAS/C,EAAM,cAAcsB,EAAY,CAAE,MAAO,OAAS,EAAE,GAAGyB,CAAK,EAAE,EAAKvB,EAAWA,EAClF,OAAOpB,GACA,EAAEqD,cAAcrD,EAAO,SAC3BA,EAAO,KACF,YAAW,EACX,SAASC,EAAM,WAAW,aAAa,CACnD,EACI,IAAID,GAAWJ,EAAM,cAAc8B,GAAY,CAAE,IAAK1B,EAAO,KAAM,OAAQA,EAAQ,MAAOC,EAAO,CAAE,EAAML,EAAM,cAAciE,EAAe,gBAAE,IAAI,CAAE,CAAC,CACtK,CAAC","names":["InfoOutlinedIcon","createSvgIcon","_jsx","LockIcon","DeletePluginDialog","lazy","__vitePreload","useStyles","makeStyles","LockedPlugin","classes","React","Tooltip","InstalledPlugin","observer","plugin","model","pluginManager","getEnv","session","getSession","jbrowse","adminMode","isSessionPlugin","isSessionWithSessionPlugins","p","_a","ListItem","IconButton","onClose","name","pluginMetadata","CloseIcon","Typography","InstalledPluginsList","plugins","filterText","externalPlugins","List","CheckIcon","PersonIcon","PluginCard","runtimePluginDefinitions","isInstalled","d","tempDisabled","setTempDisabled","useState","authors","description","Card","CardContent","Link","CardActions","Button","AddIcon","useFetchPlugins","setPlugins","error","setError","useEffect","res","err","array","e","AddCustomPluginDialog","theme","PluginStoreWidget","isElectron","TextField","event","InputAdornment","ClearIcon","Accordion","AccordionSummary","ExpandMoreIcon","LoadingEllipses"],"ignoreList":[0,1,2,3,4,5,6,7,8],"sources":["../../node_modules/@mui/icons-material/esm/InfoOutlined.js","../../node_modules/@mui/icons-material/esm/Lock.js","../../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/InstalledPlugin.js","../../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/InstalledPluginsList.js","../../node_modules/@mui/icons-material/esm/Check.js","../../node_modules/@mui/icons-material/esm/Person.js","../../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/PluginCard.js","../../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/util.js","../../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/PluginStoreWidget.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'InfoOutlined');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import React, { lazy } from 'react';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { isSessionWithSessionPlugins } from '@jbrowse/core/util/types';\nimport CloseIcon from '@mui/icons-material/Close';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { IconButton, ListItem, Tooltip, Typography } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst DeletePluginDialog = lazy(() => import('./DeletePluginDialog'));\nconst useStyles = makeStyles()(() => ({\n    lockedPluginTooltip: {\n        marginRight: '0.5rem',\n    },\n}));\nfunction LockedPlugin() {\n    const { classes } = useStyles();\n    return (React.createElement(Tooltip, { className: classes.lockedPluginTooltip, title: \"This plugin was installed by an administrator, you cannot remove it.\" },\n        React.createElement(LockIcon, null)));\n}\nconst InstalledPlugin = observer(function ({ plugin, model, }) {\n    const { pluginManager } = getEnv(model);\n    const session = getSession(model);\n    const { jbrowse, adminMode } = session;\n    const isSessionPlugin = isSessionWithSessionPlugins(session)\n        ? session.sessionPlugins.some(p => { var _a; return ((_a = pluginManager.pluginMetadata[plugin.name]) === null || _a === void 0 ? void 0 : _a.url) === p.url; })\n        : false;\n    return (React.createElement(ListItem, { key: plugin.name },\n        adminMode || isSessionPlugin ? (React.createElement(IconButton, { \"data-testid\": `removePlugin-${plugin.name}`, onClick: () => {\n                session.queueDialog(onClose => [\n                    DeletePluginDialog,\n                    {\n                        plugin: plugin.name,\n                        onClose: (name) => {\n                            if (name) {\n                                const pluginMetadata = pluginManager.pluginMetadata[plugin.name];\n                                if (adminMode) {\n                                    jbrowse.removePlugin(pluginMetadata);\n                                }\n                                else if (isSessionWithSessionPlugins(session)) {\n                                    session.removeSessionPlugin(pluginMetadata);\n                                }\n                            }\n                            onClose();\n                        },\n                    },\n                ]);\n            } },\n            React.createElement(CloseIcon, null))) : (React.createElement(LockedPlugin, null)),\n        React.createElement(Typography, null, plugin.name)));\n});\nexport default InstalledPlugin;\n","import React from 'react';\nimport { List, Typography } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport InstalledPlugin from './InstalledPlugin';\nconst InstalledPluginsList = observer(function InstalledPluginsList({ pluginManager, model, }) {\n    const { plugins } = pluginManager;\n    const { filterText } = model;\n    const externalPlugins = plugins.filter(p => { var _a; return !((_a = pluginManager.pluginMetadata[p.name]) === null || _a === void 0 ? void 0 : _a.isCore); });\n    return (React.createElement(List, null, externalPlugins.length > 0 ? (externalPlugins\n        .filter(p => p.name.toLowerCase().includes(filterText.toLowerCase()))\n        .map(p => React.createElement(InstalledPlugin, { key: p.name, plugin: p, model: model }))) : (React.createElement(Typography, null, \"No plugins currently installed\"))));\n});\nexport default InstalledPluginsList;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","import React, { useState } from 'react';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { isSessionWithSessionPlugins } from '@jbrowse/core/util/types';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Button, Card, CardActions, CardContent, Link, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    card: {\n        margin: '0.5em',\n    },\n    icon: {\n        marginLeft: '0.5em',\n        marginRight: '0.5em',\n    },\n    bold: {\n        fontWeight: 600,\n    },\n    dataField: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    mr: {\n        marginRight: '0.5em',\n    },\n});\nconst PluginCard = observer(function PluginCard({ plugin, model, }) {\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const { pluginManager } = getEnv(model);\n    const { runtimePluginDefinitions } = pluginManager;\n    const isInstalled = runtimePluginDefinitions.some(d => 'url' in d && d.url === plugin.url);\n    const [tempDisabled, setTempDisabled] = useState(false);\n    const { adminMode, jbrowse } = session;\n    const { name, authors, description } = plugin;\n    return (React.createElement(Card, { variant: \"outlined\", key: name, className: classes.card },\n        React.createElement(CardContent, null,\n            React.createElement(Typography, { variant: \"h5\" },\n                React.createElement(Link, { href: `${plugin.location}#readme`, target: \"_blank\", rel: \"noopener\" }, plugin.name)),\n            React.createElement(\"div\", { className: classes.dataField },\n                React.createElement(PersonIcon, { className: classes.mr }),\n                React.createElement(Typography, null, authors.join(', '))),\n            React.createElement(Typography, { className: classes.bold }, \"Description:\"),\n            React.createElement(Typography, null, description)),\n        React.createElement(CardActions, null,\n            React.createElement(Button, { variant: \"contained\", disabled: isInstalled || tempDisabled, startIcon: isInstalled ? React.createElement(CheckIcon, null) : React.createElement(AddIcon, null), onClick: () => {\n                    if (adminMode) {\n                        jbrowse.addPlugin(plugin);\n                    }\n                    else if (isSessionWithSessionPlugins(session)) {\n                        session.addSessionPlugin(plugin);\n                    }\n                    else {\n                        session.notify('No way to install plugin');\n                    }\n                    setTempDisabled(true);\n                } }, isInstalled ? 'Installed' : 'Install'))));\n});\nexport default PluginCard;\n","import { useEffect, useState } from 'react';\nexport function useFetchPlugins() {\n    const [plugins, setPlugins] = useState();\n    const [error, setError] = useState();\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const res = await fetch('https://jbrowse.org/plugin-store/plugins.json');\n                if (!res.ok) {\n                    const err = await res.text();\n                    throw new Error(`HTTP ${res.status} fetching plugins: ${err}`);\n                }\n                const array = await res.json();\n                setPlugins(array.plugins);\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, []);\n    return { plugins, error };\n}\n","import React, { lazy } from 'react';\nimport { LoadingEllipses } from '@jbrowse/core/ui';\nimport { getSession, isElectron } from '@jbrowse/core/util';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { Accordion, AccordionSummary, Button, IconButton, InputAdornment, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { getEnv } from 'mobx-state-tree';\nimport { makeStyles } from 'tss-react/mui';\nimport InstalledPluginsList from './InstalledPluginsList';\nimport PluginCard from './PluginCard';\nimport { useFetchPlugins } from './util';\nconst AddCustomPluginDialog = lazy(() => import('./AddCustomPluginDialog'));\nconst useStyles = makeStyles()(theme => ({\n    expandIcon: {\n        color: theme.palette.tertiary.contrastText,\n    },\n    adminBadge: {\n        borderRadius: 3,\n        backgroundColor: theme.palette.quaternary.main,\n        padding: '1em',\n        display: 'flex',\n        alignContent: 'center',\n    },\n    customPluginButton: {\n        margin: '1em auto',\n        display: 'flex',\n    },\n    mr: {\n        marginRight: '0.3em',\n    },\n    m: {\n        margin: '1em',\n    },\n}));\nconst PluginStoreWidget = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const { plugins, error } = useFetchPlugins();\n    const session = getSession(model);\n    const { adminMode } = session;\n    const { pluginManager } = getEnv(model);\n    return (React.createElement(\"div\", null,\n        adminMode && (React.createElement(React.Fragment, null,\n            !isElectron && (React.createElement(\"div\", { className: classes.adminBadge },\n                React.createElement(InfoOutlinedIcon, { className: classes.mr }),\n                React.createElement(Typography, null,\n                    \"You are using the \",\n                    React.createElement(\"code\", null, \"admin-server\"),\n                    \". Any changes you make will be saved to your configuration file. You also have the ability to add custom plugins that are not in the store.\"))),\n            React.createElement(Button, { className: classes.customPluginButton, variant: \"contained\", onClick: () => {\n                    session.queueDialog(onClose => [\n                        AddCustomPluginDialog,\n                        {\n                            model,\n                            onClose,\n                        },\n                    ]);\n                } }, \"Add custom plugin\"))),\n        React.createElement(TextField, { label: \"Filter plugins\", value: model.filterText, onChange: event => {\n                model.setFilterText(event.target.value);\n            }, fullWidth: true, slotProps: {\n                input: {\n                    endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                        React.createElement(IconButton, { onClick: () => {\n                                model.clearFilterText();\n                            } },\n                            React.createElement(ClearIcon, null)))),\n                },\n            } }),\n        React.createElement(Accordion, { defaultExpanded: true },\n            React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.expandIcon }) },\n                React.createElement(Typography, { variant: \"h5\" }, \"Installed plugins\")),\n            React.createElement(\"div\", { className: classes.m },\n                React.createElement(InstalledPluginsList, { pluginManager: pluginManager, model: model }))),\n        React.createElement(Accordion, { defaultExpanded: true },\n            React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.expandIcon }) },\n                React.createElement(Typography, { variant: \"h5\" }, \"Available plugins\")),\n            error ? (React.createElement(Typography, { color: \"error\" }, `${error}`)) : plugins ? (plugins\n                .filter(plugin => {\n                return (!(isElectron && plugin.cjsUrl) &&\n                    plugin.name\n                        .toLowerCase()\n                        .includes(model.filterText.toLowerCase()));\n            })\n                .map(plugin => (React.createElement(PluginCard, { key: plugin.name, plugin: plugin, model: model })))) : (React.createElement(LoadingEllipses, null)))));\n});\nexport default PluginStoreWidget;\n"],"file":"assets/PluginStoreWidget-C2oClnAO.js"}
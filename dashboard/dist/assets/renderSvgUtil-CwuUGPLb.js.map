{"version":3,"mappings":";sDAEA,SAASA,EAAMC,EAAI,CAEf,MAAO,YADQ,OAAO,KAAS,IACHA,EAAK,MAAM,EAC3C,CACO,eAAeC,EAAUC,EAAMC,EAAMC,EAAI,CAE5C,MAAMC,EADOC,EAAiB,kBAACJ,CAAI,EAChB,cAAc,aAC3BK,EAASL,EAAK,OACpB,GAAIC,EAAK,gBAAiB,CACtB,MAAMK,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQH,EAAQ,EACvBG,EAAO,OAASD,EAAS,EACzB,MAAME,EAAMD,EAAO,WAAW,IAAI,EAClC,OAAKC,GAGLA,EAAI,MAAM,EAAG,CAAC,EACdL,EAAGF,EAAMO,EAAKJ,EAAOE,CAAM,EACnBG,EAAM,cAAc,QAAS,CAAE,MAAOL,EAAO,OAAQE,EAAQ,UAAWC,EAAO,UAAU,WAAW,CAAC,CAAE,GAJ3G,MAKZ,KACS,CACD,MAAMG,EAAM,MAAMC,EAAA,WAAO,0BAAY,EAAC,KAAAC,KAAA,6CAChCJ,EAAM,IAAIE,EAAI,QAAQN,EAAOE,CAAM,EACzCH,EAAGF,EAAMO,EAAKJ,EAAOE,CAAM,EAC3B,MAAMO,EAASf,EAAMG,EAAK,EAAE,EAC5B,OAAQQ,EAAM,cAAcA,EAAM,SAAU,KACxCA,EAAM,cAAc,OAAQ,KACxBA,EAAM,cAAc,WAAY,CAAE,GAAII,CAAQ,EAC1CJ,EAAM,cAAc,OAAQ,CAAE,EAAG,EAAG,EAAG,EAAG,MAAOL,EAAO,OAAQE,CAAM,CAAE,CAAC,CAAC,EAClFG,EAAM,cAAc,IAAK,CAAE,wBAAyB,CAAE,OAAQD,EAAI,OAAQ,EAAC,SAAS,EAAI,SAAU,QAAQK,CAAM,GAAG,CAAE,CAAC,CAClI,CACA","names":["getId","id","renderSvg","self","opts","cb","width","getContainingView","height","canvas","ctx","React","C2S","__vitePreload","n","clipid"],"ignoreList":[0],"sources":["../../node_modules/@jbrowse/plugin-alignments/esm/shared/renderSvgUtil.js"],"sourcesContent":["import React from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\nfunction getId(id) {\n    const isJest = typeof jest === 'undefined';\n    return `arc-clip-${isJest ? id : 'jest'}`;\n}\nexport async function renderSvg(self, opts, cb) {\n    const view = getContainingView(self);\n    const width = view.dynamicBlocks.totalWidthPx;\n    const height = self.height;\n    if (opts.rasterizeLayers) {\n        const canvas = document.createElement('canvas');\n        canvas.width = width * 2;\n        canvas.height = height * 2;\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.scale(2, 2);\n        cb(self, ctx, width, height);\n        return (React.createElement(\"image\", { width: width, height: height, xlinkHref: canvas.toDataURL('image/png') }));\n    }\n    else {\n        const C2S = await import('canvas2svg');\n        const ctx = new C2S.default(width, height);\n        cb(self, ctx, width, height);\n        const clipid = getId(self.id);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: clipid },\n                    React.createElement(\"rect\", { x: 0, y: 0, width: width, height: height }))),\n            React.createElement(\"g\", { dangerouslySetInnerHTML: { __html: ctx.getSvg().innerHTML }, clipPath: `url(#${clipid})` })));\n    }\n}\n"],"file":"assets/renderSvgUtil-CwuUGPLb.js"}
{"version":3,"file":"getMaximumModificationAtEachPosition-5C7BDqsP.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/shared/getMaximumModificationAtEachPosition.js"],"sourcesContent":["import { getNextRefPos, parseCigar } from '../MismatchParser';\nimport { getModPositions, getModProbabilities } from '../ModificationParser';\nimport { getTagAlt } from '../util';\nexport function getMaxProbModAtEachPosition(feature, cigarOps) {\n    const fstrand = feature.get('strand');\n    const seq = feature.get('seq');\n    const mm = getTagAlt(feature, 'MM', 'Mm') || '';\n    const ops = cigarOps || parseCigar(feature.get('CIGAR'));\n    if (seq) {\n        const modifications = getModPositions(mm, seq, fstrand);\n        const probabilities = getModProbabilities(feature);\n        const maxProbModForPosition = [];\n        let probIndex = 0;\n        for (const { type, positions } of modifications) {\n            for (const { ref, idx } of getNextRefPos(ops, positions)) {\n                const prob = (probabilities === null || probabilities === void 0 ? void 0 : probabilities[probIndex + (fstrand === -1 ? positions.length - 1 - idx : idx)]) || 0;\n                if (!maxProbModForPosition[ref]) {\n                    maxProbModForPosition[ref] = {\n                        type,\n                        prob,\n                        allProbs: [prob],\n                    };\n                }\n                else {\n                    const old = maxProbModForPosition[ref];\n                    maxProbModForPosition[ref] = {\n                        allProbs: [...old.allProbs, prob],\n                        prob: Math.max(old.prob, prob),\n                        type: old.prob > prob ? old.type : type,\n                    };\n                }\n            }\n            probIndex += positions.length;\n        }\n        return maxProbModForPosition;\n    }\n    return undefined;\n}\n"],"names":["getMaxProbModAtEachPosition","feature","cigarOps","fstrand","seq","mm","getTagAlt","ops","parseCigar","modifications","getModPositions","probabilities","getModProbabilities","maxProbModForPosition","probIndex","type","positions","ref","idx","getNextRefPos","prob","old"],"mappings":"yEAGO,SAASA,EAA4BC,EAASC,EAAU,CAC3D,MAAMC,EAAUF,EAAQ,IAAI,QAAQ,EAC9BG,EAAMH,EAAQ,IAAI,KAAK,EACvBI,EAAKC,EAAUL,EAAS,KAAM,IAAI,GAAK,GACvCM,EAAML,GAAYM,EAAWP,EAAQ,IAAI,OAAO,CAAC,EACvD,GAAIG,EAAK,CACL,MAAMK,EAAgBC,EAAgBL,EAAID,EAAKD,CAAO,EAChDQ,EAAgBC,EAAoBX,CAAO,EAC3CY,EAAwB,CAAE,EAChC,IAAIC,EAAY,EAChB,SAAW,CAAE,KAAAC,EAAM,UAAAC,CAAS,IAAMP,EAAe,CAC7C,SAAW,CAAE,IAAAQ,EAAK,IAAAC,CAAG,IAAMC,EAAcZ,EAAKS,CAAS,EAAG,CACtD,MAAMI,GAAQT,GAAkB,KAAmC,OAASA,EAAcG,GAAaX,IAAY,GAAKa,EAAU,OAAS,EAAIE,EAAMA,EAAI,IAAM,EAC/J,GAAI,CAACL,EAAsBI,CAAG,EAC1BJ,EAAsBI,CAAG,EAAI,CACzB,KAAAF,EACA,KAAAK,EACA,SAAU,CAACA,CAAI,CAClB,MAEA,CACD,MAAMC,EAAMR,EAAsBI,CAAG,EACrCJ,EAAsBI,CAAG,EAAI,CACzB,SAAU,CAAC,GAAGI,EAAI,SAAUD,CAAI,EAChC,KAAM,KAAK,IAAIC,EAAI,KAAMD,CAAI,EAC7B,KAAMC,EAAI,KAAOD,EAAOC,EAAI,KAAON,CACtC,CACrB,CACA,CACYD,GAAaE,EAAU,MACnC,CACQ,OAAOH,CACf,CAEA","x_google_ignoreList":[0]}
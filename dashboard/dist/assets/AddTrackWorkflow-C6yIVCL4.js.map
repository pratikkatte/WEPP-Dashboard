{"version":3,"file":"AddTrackWorkflow-C6yIVCL4.js","sources":["../node_modules/@jbrowse/plugin-wiggle/esm/MultiWiggleAddTrackWorkflow/AddTrackWorkflow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getSession, isElectron, isSessionModelWithWidgets, isSessionWithAddTracks, } from '@jbrowse/core/util';\nimport { storeBlobLocation } from '@jbrowse/core/util/tracks';\nimport { Button, Paper, TextField } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    paper: {\n        margin: theme.spacing(),\n        padding: theme.spacing(),\n    },\n    submit: {\n        marginTop: 25,\n        marginBottom: 100,\n        display: 'block',\n    },\n}));\nfunction makeFileLocation(file) {\n    const { webUtils } = window.require('electron');\n    return isElectron\n        ? {\n            localPath: webUtils.getPathForFile(file),\n            locationType: 'LocalPathLocation',\n        }\n        : storeBlobLocation({ blob: file });\n}\nexport default function MultiWiggleWidget({ model }) {\n    const { classes } = useStyles();\n    const [val, setVal] = useState('');\n    const [trackName, setTrackName] = useState(`MultiWiggle${+Date.now()}`);\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(\"ul\", null,\n            React.createElement(\"li\", null, \"Enter list of URLs for bigwig files in the textbox\"),\n            React.createElement(\"li\", null, \"Or, use the button below the text box to select files from your computer\")),\n        React.createElement(TextField, { multiline: true, fullWidth: true, rows: 10, value: val, placeholder: \"Paste list of URLs here, or use file selector below\", variant: \"outlined\", onChange: event => {\n                setVal(event.target.value);\n            } }),\n        React.createElement(Button, { variant: \"outlined\", component: \"label\" },\n            \"Choose Files from your computer\",\n            React.createElement(\"input\", { type: \"file\", hidden: true, multiple: true, onChange: ({ target }) => {\n                    const res = [...(target.files || [])].map(file => ({\n                        type: 'BigWigAdapter',\n                        bigWigLocation: makeFileLocation(file),\n                        source: file.name,\n                    }));\n                    setVal(JSON.stringify(res, null, 2));\n                } })),\n        React.createElement(TextField, { value: trackName, helperText: \"Track name\", onChange: event => {\n                setTrackName(event.target.value);\n            } }),\n        React.createElement(Button, { variant: \"contained\", className: classes.submit, onClick: () => {\n                var _a;\n                const session = getSession(model);\n                try {\n                    const trackId = [\n                        `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n                        session.adminMode ? '' : '-sessionTrack',\n                    ].join('');\n                    let bigWigs;\n                    try {\n                        bigWigs = JSON.parse(val);\n                    }\n                    catch (e) {\n                        bigWigs = val\n                            .split(/\\n|\\r\\n|\\r/)\n                            .map(f => f.trim())\n                            .filter(f => !!f);\n                    }\n                    const obj = typeof bigWigs[0] === 'string'\n                        ? { bigWigs }\n                        : { subadapters: bigWigs };\n                    if (isSessionWithAddTracks(session)) {\n                        session.addTrackConf({\n                            trackId,\n                            type: 'MultiQuantitativeTrack',\n                            name: trackName,\n                            assemblyNames: [model.assembly],\n                            adapter: {\n                                type: 'MultiWiggleAdapter',\n                                ...obj,\n                            },\n                        });\n                        (_a = model.view) === null || _a === void 0 ? void 0 : _a.showTrack(trackId);\n                    }\n                    model.clearData();\n                    if (isSessionModelWithWidgets(session)) {\n                        session.hideWidget(model);\n                    }\n                }\n                catch (e) {\n                    console.error(e);\n                    session.notifyError(`${e}`, e);\n                }\n            } }, \"Submit\"),\n        React.createElement(\"p\", null, \"Additional notes: \"),\n        React.createElement(\"ul\", null,\n            React.createElement(\"li\", null,\n                \"The list of bigwig files in the text box can be a list of URLs, or a list of elements like\",\n                ' ',\n                React.createElement(\"code\", null, `[{\"type\":\"BigWigAdapter\",\"bigWigLocation\":{\"uri\":\"http://host/file.bw\"}, \"color\":\"green\",\"source\":\"name for subtrack\"}]`),\n                ' ',\n                \"to apply e.g. the color attribute to the view\"),\n            React.createElement(\"li\", null, \"Adding local files will update the textbox with JSON contents that are ready to submit with the \\\"Submit\\\" button\"))));\n}\n"],"names":["useStyles","makeStyles","theme","makeFileLocation","file","webUtils","isElectron","storeBlobLocation","MultiWiggleWidget","model","classes","val","setVal","useState","trackName","setTrackName","React","Paper","TextField","event","Button","target","res","_a","session","getSession","trackId","bigWigs","f","obj","isSessionWithAddTracks","isSessionModelWithWidgets","e"],"mappings":"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","x_google_ignoreList":[0]}
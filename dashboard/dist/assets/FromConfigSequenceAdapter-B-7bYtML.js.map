{"version":3,"file":"FromConfigSequenceAdapter-B-7bYtML.js","sources":["../../node_modules/@jbrowse/plugin-config/esm/FromConfigSequenceAdapter/FromConfigSequenceAdapter.js"],"sourcesContent":["import { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature';\nimport { firstValueFrom } from 'rxjs';\nimport { toArray } from 'rxjs/operators';\nimport FromConfigAdapter from '../FromConfigAdapter/FromConfigAdapter';\nexport default class FromConfigSequenceAdapter extends FromConfigAdapter {\n    getFeatures(region) {\n        return ObservableCreate(async (observer) => {\n            const feats = await firstValueFrom(super.getFeatures(region).pipe(toArray()));\n            const feat = feats[0];\n            observer.next(new SimpleFeature({\n                ...feat.toJSON(),\n                uniqueId: `${feat.id()}:${region.start}-${region.end}`,\n                end: region.end,\n                start: region.start,\n                seq: feat\n                    .get('seq')\n                    .slice(Math.max(region.start - feat.get('start'), 0), Math.max(region.end - feat.get('start'), 0)),\n            }));\n            observer.complete();\n        });\n    }\n    async getRegions() {\n        const regions = [];\n        for (const [refName, features] of this.features) {\n            let currentRegion;\n            for (const feature of features) {\n                if (currentRegion &&\n                    currentRegion.end >= feature.get('start') &&\n                    currentRegion.start <= feature.get('end')) {\n                    currentRegion.end = feature.get('end');\n                }\n                else {\n                    if (currentRegion) {\n                        regions.push(currentRegion);\n                    }\n                    currentRegion = {\n                        refName,\n                        start: feature.get('start'),\n                        end: feature.get('end'),\n                    };\n                }\n            }\n            if (currentRegion) {\n                regions.push(currentRegion);\n            }\n        }\n        return regions;\n    }\n    freeResources() { }\n}\n"],"names":["FromConfigSequenceAdapter","FromConfigAdapter","region","ObservableCreate","observer","feat","firstValueFrom","toArray","SimpleFeature","regions","refName","features","currentRegion","feature"],"mappings":"mNAKe,MAAMA,UAAkCC,CAAkB,CACrE,YAAYC,EAAQ,CAChB,OAAOC,EAAAA,iBAAiB,MAAOC,GAAa,CAExC,MAAMC,GADQ,MAAMC,EAAe,MAAM,YAAYJ,CAAM,EAAE,KAAKK,EAAO,CAAE,CAAC,GACzD,CAAC,EACpBH,EAAS,KAAK,IAAII,EAAc,CAC5B,GAAGH,EAAK,OAAQ,EAChB,SAAU,GAAGA,EAAK,IAAI,IAAIH,EAAO,KAAK,IAAIA,EAAO,GAAG,GACpD,IAAKA,EAAO,IACZ,MAAOA,EAAO,MACd,IAAKG,EACA,IAAI,KAAK,EACT,MAAM,KAAK,IAAIH,EAAO,MAAQG,EAAK,IAAI,OAAO,EAAG,CAAC,EAAG,KAAK,IAAIH,EAAO,IAAMG,EAAK,IAAI,OAAO,EAAG,CAAC,CAAC,CACrH,CAAa,CAAC,EACFD,EAAS,SAAU,CAC/B,CAAS,CACT,CACI,MAAM,YAAa,CACf,MAAMK,EAAU,CAAE,EAClB,SAAW,CAACC,EAASC,CAAQ,IAAK,KAAK,SAAU,CAC7C,IAAIC,EACJ,UAAWC,KAAWF,EACdC,GACAA,EAAc,KAAOC,EAAQ,IAAI,OAAO,GACxCD,EAAc,OAASC,EAAQ,IAAI,KAAK,EACxCD,EAAc,IAAMC,EAAQ,IAAI,KAAK,GAGjCD,GACAH,EAAQ,KAAKG,CAAa,EAE9BA,EAAgB,CACZ,QAAAF,EACA,MAAOG,EAAQ,IAAI,OAAO,EAC1B,IAAKA,EAAQ,IAAI,KAAK,CACzB,GAGLD,GACAH,EAAQ,KAAKG,CAAa,CAE1C,CACQ,OAAOH,CACf,CACI,eAAgB,CAAA,CACpB","x_google_ignoreList":[0]}
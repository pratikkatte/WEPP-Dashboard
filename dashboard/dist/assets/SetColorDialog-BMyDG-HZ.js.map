{"version":3,"file":"SetColorDialog-BMyDG-HZ.js","sources":["../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/DraggableDialog.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/SourcesGrid.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/SetColorDialog.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Dialog, DialogTitle, Divider, IconButton, Paper, ScopedCssBaseline, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport Draggable from 'react-draggable';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\nfunction PaperComponent(props) {\n    const ref = useRef(null);\n    return (React.createElement(Draggable, { nodeRef: ref, cancel: '[class*=\"MuiDialogContent-root\"]', onStart: arg => { var _a, _b; return (_b = (_a = arg.target) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('MuiDialogTitle'); } },\n        React.createElement(Paper, { ref: ref, ...props })));\n}\nconst DraggableDialog = observer(function DraggableDialog(props) {\n    const { classes } = useStyles();\n    const { title, children, onClose } = props;\n    return (React.createElement(Dialog, { ...props, PaperComponent: PaperComponent },\n        React.createElement(ScopedCssBaseline, null,\n            React.createElement(DialogTitle, { style: { cursor: 'move' } },\n                title,\n                onClose ? (React.createElement(IconButton, { className: classes.closeButton, onClick: () => {\n                        onClose();\n                    } },\n                    React.createElement(CloseIcon, null))) : null),\n            React.createElement(Divider, null),\n            children)));\n});\nexport default DraggableDialog;\n","import React, { useState } from 'react';\nimport { SanitizedHTML } from '@jbrowse/core/ui';\nimport ColorPicker, { ColorPopover } from '@jbrowse/core/ui/ColorPicker';\nimport { getStr, measureGridWidth } from '@jbrowse/core/util';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport { Button } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from 'tss-react/mui';\nimport { moveDown, moveUp } from './util';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\nfunction SourcesGrid({ rows, onChange, showTips, }) {\n    const { classes } = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selected, setSelected] = useState([]);\n    const { name: _name, color: _color, baseUri: _baseUri, ...rest } = rows[0];\n    const [widgetColor, setWidgetColor] = useState('blue');\n    const [currSort, setCurrSort] = useState({\n        idx: 0,\n        field: null,\n    });\n    return (React.createElement(\"div\", null,\n        React.createElement(Button, { disabled: !selected.length, onClick: event => {\n                setAnchorEl(event.currentTarget);\n            } }, \"Change color of selected items\"),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveUp([...rows], selected));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardArrowUpIcon, null),\n            showTips ? 'Move selected items up' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveDown([...rows], selected));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardArrowDownIcon, null),\n            showTips ? 'Move selected items down' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveUp([...rows], selected, rows.length));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardDoubleArrowUpIcon, null),\n            showTips ? 'Move selected items to top' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveDown([...rows], selected, rows.length));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardDoubleArrowDownIcon, null),\n            showTips ? 'Move selected items to bottom' : null),\n        React.createElement(ColorPopover, { anchorEl: anchorEl, color: widgetColor, onChange: c => {\n                setWidgetColor(c);\n                selected.forEach(id => {\n                    const elt = rows.find(f => f.name === id);\n                    if (elt) {\n                        elt.color = c;\n                    }\n                });\n                onChange([...rows]);\n            }, onClose: () => {\n                setAnchorEl(null);\n            } }),\n        React.createElement(\"div\", { style: { height: 400, width: '100%' } },\n            React.createElement(DataGrid, { getRowId: row => row.name, checkboxSelection: true, disableRowSelectionOnClick: true, onRowSelectionModelChange: arg => {\n                    setSelected(arg);\n                }, rows: rows, rowHeight: 25, columnHeaderHeight: 33, columns: [\n                    {\n                        field: 'color',\n                        headerName: 'Color',\n                        renderCell: ({ value, id }) => (React.createElement(ColorPicker, { color: value || 'blue', onChange: c => {\n                                const elt = rows.find(f => f.name === id);\n                                if (elt) {\n                                    elt.color = c;\n                                }\n                                onChange([...rows]);\n                            } })),\n                    },\n                    {\n                        field: 'name',\n                        headerName: 'Name',\n                        width: measureGridWidth(rows.map(r => r.name)),\n                    },\n                    ...Object.keys(rest).map(val => ({\n                        field: val,\n                        renderCell: ({ value }) => (React.createElement(\"div\", { className: classes.cell },\n                            React.createElement(SanitizedHTML, { html: getStr(value) }))),\n                        width: measureGridWidth(rows.map(r => `${r[val]}`)),\n                    })),\n                ], sortModel: [], onSortModelChange: args => {\n                    const sort = args[0];\n                    const idx = (currSort.idx + 1) % 2;\n                    const field = sort.field || currSort.field;\n                    setCurrSort({ idx, field });\n                    onChange(field\n                        ? [...rows].sort((a, b) => {\n                            const aa = getStr(a[field]);\n                            const bb = getStr(b[field]);\n                            return idx === 1\n                                ? aa.localeCompare(bb)\n                                : bb.localeCompare(aa);\n                        })\n                        : rows);\n                } }))));\n}\nexport default SourcesGrid;\n","import React, { useState } from 'react';\nimport { useLocalStorage } from '@jbrowse/core/util';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport DraggableDialog from './DraggableDialog';\nimport SourcesGrid from './SourcesGrid';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n});\nexport default function SetColorDialog({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { sources } = model;\n    const [currLayout, setCurrLayout] = useState(structuredClone(sources || []));\n    const [showTips, setShowTips] = useLocalStorage('multiwiggle-showTips', false);\n    return (React.createElement(DraggableDialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: 'Multi-wiggle color/arrangement editor' },\n        React.createElement(DialogContent, { className: classes.content },\n            React.createElement(Button, { variant: \"contained\", style: { float: 'right' }, onClick: () => {\n                    setShowTips(!showTips);\n                } }, showTips ? 'Hide tips' : 'Show tips'),\n            React.createElement(\"br\", null),\n            showTips ? (React.createElement(React.Fragment, null,\n                \"Helpful tips\",\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null, \"You can select rows in the table with the checkboxes\"),\n                    React.createElement(\"li\", null, \"Multi-select is enabled with shift-click and control-click\"),\n                    React.createElement(\"li\", null, \"The \\\"Move selected items up/down\\\" can re-arrange subtracks\"),\n                    React.createElement(\"li\", null, \"Sorting the data grid itself can also re-arrange subtracks\"),\n                    React.createElement(\"li\", null, \"Changes are applied when you hit Submit\"),\n                    React.createElement(\"li\", null, \"You can click and drag the dialog box to move it on the screen\"),\n                    React.createElement(\"li\", null, \"Columns in the table can be hidden using a vertical '...' menu on the right side of each column\")))) : null,\n            React.createElement(SourcesGrid, { rows: currLayout, onChange: setCurrLayout, showTips: showTips })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", type: \"submit\", color: \"inherit\", onClick: () => {\n                    model.clearLayout();\n                    setCurrLayout(model.sources || []);\n                } }, \"Clear custom settings\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                    setCurrLayout([...(model.sources || [])]);\n                } }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => {\n                    model.setLayout(currLayout);\n                    handleClose();\n                } }, \"Submit\"))));\n}\n"],"names":["useStyles","makeStyles","theme","PaperComponent","props","ref","useRef","React","Draggable","arg","_a","_b","Paper","DraggableDialog","observer","classes","title","children","onClose","Dialog","ScopedCssBaseline","DialogTitle","IconButton","CloseIcon","Divider","SourcesGrid","rows","onChange","showTips","anchorEl","setAnchorEl","useState","selected","setSelected","_name","_color","_baseUri","rest","widgetColor","setWidgetColor","currSort","setCurrSort","Button","event","moveUp","KeyboardArrowUpIcon","moveDown","KeyboardArrowDownIcon","KeyboardDoubleArrowUpIcon","KeyboardDoubleArrowDownIcon","ColorPopover","c","id","elt","f","DataGrid","row","value","ColorPicker","measureGridWidth","r","val","SanitizedHTML","getStr","args","sort","idx","field","a","b","aa","bb","SetColorDialog","model","handleClose","sources","currLayout","setCurrLayout","setShowTips","useLocalStorage","DialogContent","DialogActions"],"mappings":"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","x_google_ignoreList":[0,1,2]}
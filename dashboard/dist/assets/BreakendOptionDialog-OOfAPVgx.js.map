{"version":3,"file":"BreakendOptionDialog-OOfAPVgx.js","sources":["../src/plugins/DashboardFeatureWidget/launchBreakpointSplitView.tsx","../src/plugins/DashboardFeatureWidget/BreakendOptionDialog.tsx"],"sourcesContent":["import { getSession } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { ReducedFeature } from './getSAFeatures'\n\nexport function getBreakpointSplitView({\n  f1,\n  f2,\n  view,\n}: {\n  f1: ReducedFeature\n  f2: ReducedFeature\n  view: LinearGenomeViewModel\n}) {\n  const { assemblyName } = view.displayedRegions[0]\n  const { assemblyManager } = getSession(view)\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const topRegion = assembly.regions.find(f => f.refName === f1.refName)\n  const bottomRegion = assembly.regions.find(f => f.refName === f2.refName)\n\n  if (!topRegion || !bottomRegion) {\n    throw new Error(\n      `unable to find the refName for the top or bottom of the breakpoint view`,\n    )\n  }\n  const topMarkedRegion = [{ ...topRegion }, { ...topRegion }]\n  const bottomMarkedRegion = [{ ...bottomRegion }, { ...bottomRegion }]\n\n  const s = f1.strand === 1 ? f1.end : f1.start\n  const e = f2.strand === 1 ? f2.start : f2.end\n\n  topMarkedRegion[0].end = s\n  topMarkedRegion[1].start = s + 1\n  bottomMarkedRegion[0].end = e\n  bottomMarkedRegion[1].start = e + 1\n  const bpPerPx = 10\n  return {\n    type: 'BreakpointSplitView',\n    views: [\n      {\n        type: 'LinearGenomeView',\n        displayedRegions: topMarkedRegion,\n        hideHeader: true,\n        bpPerPx,\n        offsetPx: (topRegion.start + s) / bpPerPx,\n      },\n      {\n        type: 'LinearGenomeView',\n        displayedRegions: bottomMarkedRegion,\n        hideHeader: true,\n        bpPerPx,\n        offsetPx: (bottomRegion.start + e) / bpPerPx,\n      },\n    ],\n    displayName: `breakend split detail`,\n  }\n}","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport { getBreakpointSplitView } from './launchBreakpointSplitView'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { ReducedFeature } from './getSAFeatures'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\ninterface Track {\n  id: string\n  displays: { id: string; [key: string]: unknown }[]\n  [key: string]: unknown\n}\n\nfunction stripIds(arr: Track[]) {\n  return arr.map(({ id, displays, ...rest }) => ({\n    ...rest,\n    displays: displays.map(({ id, ...rest }) => rest),\n  }))\n}\n\nfunction Checkbox2({\n  checked,\n  label,\n  onChange,\n}: {\n  checked: boolean\n  label: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <FormControlLabel\n      className={classes.block}\n      control={<Checkbox checked={checked} onChange={onChange} />}\n      label={label}\n    />\n  )\n}\n\nconst BreakendOptionDialog = observer(function ({\n  model,\n  handleClose,\n  f1,\n  f2,\n}: {\n  model: AlignmentFeatureWidgetModel\n  handleClose: () => void\n  f1: ReducedFeature\n  f2: ReducedFeature\n  viewType: ViewType\n}) {\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirror, setMirror] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <Checkbox2\n          checked={copyTracks}\n          onChange={event => setCopyTracks(event.target.checked)}\n          label=\"Copy tracks into the new view\"\n        />\n        <Checkbox2\n          checked={mirror}\n          onChange={event => setMirror(event.target.checked)}\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = getBreakpointSplitView({ view, f1, f2 })\n              const [view1, view2] = viewSnapshot.views\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n              const viewTracks = getSnapshot(view.tracks) as Track[]\n\n              session.addView('BreakpointSplitView', {\n                ...viewSnapshot,\n                views: [\n                  {\n                    ...view1,\n                    tracks: stripIds(viewTracks),\n                    offsetPx: view1.offsetPx - view.width / 2 + 100,\n                  },\n                  {\n                    ...view2,\n                    tracks: stripIds(\n                      mirror ? [...viewTracks].reverse() : viewTracks,\n                    ),\n                    offsetPx: view2.offsetPx - view.width / 2 + 100,\n                  },\n                ],\n              })\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default BreakendOptionDialog"],"names":["getBreakpointSplitView","f1","f2","view","assemblyName","assemblyManager","getSession","assembly","topRegion","f","bottomRegion","topMarkedRegion","bottomMarkedRegion","s","e","bpPerPx","useStyles","makeStyles","stripIds","arr","id","displays","rest","Checkbox2","checked","label","onChange","classes","jsx","FormControlLabel","Checkbox","BreakendOptionDialog","observer","model","handleClose","copyTracks","setCopyTracks","useState","mirror","setMirror","Dialog","jsxs","DialogContent","event","DialogActions","Button","session","viewSnapshot","view1","view2","viewTracks","getSnapshot"],"mappings":"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"}
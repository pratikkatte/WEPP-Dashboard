{"version":3,"file":"AboutDialog-C3iRt7ng.js","sources":["../../node_modules/@jbrowse/product-core/esm/ui/FileInfoPanel.js","../../node_modules/@jbrowse/product-core/esm/ui/RefNameInfoDialog.js","../../node_modules/@jbrowse/product-core/esm/ui/AboutDialogContents.js","../../node_modules/@jbrowse/product-core/esm/ui/AboutDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nexport default function FileInfoPanel({ config, }) {\n    const [error, setError] = useState();\n    const [info, setInfo] = useState();\n    const session = getSession(config);\n    const { rpcManager } = session;\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const adapterConfig = readConfObject(config, 'adapter');\n                const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n                    adapterConfig,\n                });\n                setInfo(result);\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [config, rpcManager]);\n    const details = typeof info === 'string'\n        ? {\n            header: `<pre>${info\n                .replaceAll('<', '&lt;')\n                .replaceAll('>', '&gt;')}</pre>`,\n        }\n        : info || {};\n    return (React.createElement(BaseCard, { title: \"File info\" }, error ? (React.createElement(ErrorMessage, { error: error })) : info === undefined ? (React.createElement(LoadingEllipses, { message: \"Loading file data\" })) : (React.createElement(Attributes, { attributes: details }))));\n}\n","import React, { useEffect, useState } from 'react';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport { getConfAssemblyNames } from '@jbrowse/core/util/tracks';\nimport { Button, DialogContent } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst MAX_REF_NAMES = 10000;\nconst useStyles = makeStyles()(theme => ({\n    container: {\n        minWidth: 800,\n    },\n    refNames: {\n        maxHeight: 300,\n        overflow: 'auto',\n        flexGrow: 1,\n        background: theme.palette.background.default,\n    },\n}));\nconst RefNameInfoDialog = observer(function ({ config, onClose, }) {\n    const { classes } = useStyles();\n    const [error, setError] = useState();\n    const [refNames, setRefNames] = useState();\n    const [copied, setCopied] = useState(false);\n    const { rpcManager } = getSession(config);\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const map = await Promise.all([...new Set(getConfAssemblyNames(config))].map(async (assemblyName) => {\n                    const adapterConfig = readConfObject(config, 'adapter');\n                    return [\n                        assemblyName,\n                        (await rpcManager.call(config.trackId, 'CoreGetRefNames', {\n                            adapterConfig,\n                            regions: [\n                                {\n                                    assemblyName,\n                                },\n                            ],\n                        })),\n                    ];\n                }));\n                setRefNames(Object.fromEntries(map));\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [config, rpcManager]);\n    const names = refNames ? Object.entries(refNames) : [];\n    const result = names\n        .flatMap(([assemblyName, refNames]) => {\n        return [\n            `--- ${assemblyName} ---`,\n            ...refNames.slice(0, MAX_REF_NAMES),\n            refNames.length > MAX_REF_NAMES\n                ? `\\nToo many refNames to show in browser for ${assemblyName}, use \"Copy ref names\" button to copy to clipboard`\n                : '',\n        ];\n    })\n        .filter(f => !!f)\n        .join('\\n');\n    return (React.createElement(Dialog, { open: true, title: \"Reference sequence names used in track\", onClose: onClose, maxWidth: \"xl\" },\n        React.createElement(DialogContent, { className: classes.container }, error ? (React.createElement(ErrorMessage, { error: error })) : refNames === undefined ? (React.createElement(LoadingEllipses, { message: \"Loading refNames\" })) : (React.createElement(React.Fragment, null,\n            React.createElement(Button, { variant: \"contained\", onClick: () => {\n                    copy(names\n                        .flatMap(([assemblyName, refNames]) => [\n                        `--- ${assemblyName} ---`,\n                        ...refNames,\n                    ])\n                        .filter(f => !!f)\n                        .join('\\n'));\n                    setCopied(true);\n                    setTimeout(() => {\n                        setCopied(false);\n                    }, 1000);\n                } }, copied ? 'Copied to clipboard!' : 'Copy ref names'),\n            React.createElement(\"pre\", { className: classes.refNames }, result))))));\n});\nexport default RefNameInfoDialog;\n","import React, { useState } from 'react';\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { getConf, readConfObject } from '@jbrowse/core/configuration';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { Button } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport FileInfoPanel from './FileInfoPanel';\nimport RefNameInfoDialog from './RefNameInfoDialog';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n    button: {\n        float: 'right',\n    },\n});\nfunction removeAttr(obj, attr) {\n    for (const prop in obj) {\n        if (prop === attr) {\n            delete obj[prop];\n        }\n        else if (typeof obj[prop] === 'object') {\n            removeAttr(obj[prop], attr);\n        }\n    }\n    return obj;\n}\nconst AboutDialogContents = observer(function ({ config, }) {\n    const [copied, setCopied] = useState(false);\n    const conf = readConfObject(config);\n    const session = getSession(config);\n    const { classes } = useStyles();\n    const [showRefNames, setShowRefNames] = useState(false);\n    const hideUris = getConf(session, ['formatAbout', 'hideUris']) ||\n        readConfObject(config, ['formatAbout', 'hideUris']);\n    const { pluginManager } = getEnv(session);\n    const confPostExt = pluginManager.evaluateExtensionPoint('Core-customizeAbout', {\n        config: {\n            ...conf,\n            ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n            ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n        },\n    }, { session, config });\n    const ExtraPanel = pluginManager.evaluateExtensionPoint('Core-extraAboutPanel', null, { session, config });\n    return (React.createElement(\"div\", { className: classes.content },\n        React.createElement(BaseCard, { title: \"Configuration\" },\n            !hideUris ? (React.createElement(\"span\", { className: classes.button },\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                        setShowRefNames(true);\n                    } }, \"Show ref names\"),\n                React.createElement(Button, { variant: \"contained\", onClick: () => {\n                        const snap = removeAttr(structuredClone(conf), 'baseUri');\n                        copy(JSON.stringify(snap, null, 2));\n                        setCopied(true);\n                        setTimeout(() => {\n                            setCopied(false);\n                        }, 1000);\n                    } }, copied ? 'Copied to clipboard!' : 'Copy config'))) : null,\n            React.createElement(Attributes, { attributes: confPostExt, omit: ['displays', 'baseUri', 'refNames', 'formatAbout'], hideUris: hideUris })),\n        ExtraPanel ? (React.createElement(BaseCard, { title: ExtraPanel.name },\n            React.createElement(ExtraPanel.Component, { config: config }))) : null,\n        React.createElement(FileInfoPanel, { config: config }),\n        showRefNames ? (React.createElement(RefNameInfoDialog, { config: config, onClose: () => {\n                setShowRefNames(false);\n            } })) : null));\n});\nexport default AboutDialogContents;\n","import React from 'react';\nimport Dialog from '@jbrowse/core/ui/Dialog';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { getTrackName } from '@jbrowse/core/util/tracks';\nimport AboutContents from './AboutDialogContents';\nexport function AboutDialog({ config, handleClose, }) {\n    const session = getSession(config);\n    const trackName = getTrackName(config, session);\n    const { pluginManager } = getEnv(session);\n    const AboutComponent = pluginManager.evaluateExtensionPoint('Core-replaceAbout', AboutContents, { session, config });\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: trackName, maxWidth: \"xl\" },\n        React.createElement(AboutComponent, { config: config })));\n}\n"],"names":["FileInfoPanel","config","error","setError","useState","info","setInfo","session","getSession","rpcManager","useEffect","adapterConfig","readConfObject","result","e","details","React","BaseCard","ErrorMessage","LoadingEllipses","Attributes","MAX_REF_NAMES","useStyles","makeStyles","theme","RefNameInfoDialog","observer","onClose","classes","refNames","setRefNames","copied","setCopied","map","getConfAssemblyNames","assemblyName","names","f","Dialog","DialogContent","Button","copy","removeAttr","obj","attr","prop","AboutDialogContents","conf","showRefNames","setShowRefNames","hideUris","getConf","pluginManager","getEnv","confPostExt","ExtraPanel","snap","AboutDialog","handleClose","trackName","getTrackName","AboutComponent","AboutContents"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
{"version":3,"file":"NcbiSequenceReportAliasAdapter-CRzZJazk.js","sources":["../../node_modules/@jbrowse/plugin-config/esm/NcbiSequenceReportAliasAdapter/NcbiSequenceReportAliasAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class NcbiSequenceReportAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/sequence_report.tsv') {\n            return [];\n        }\n        const override = this.getConf('useUcscNameOverride');\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        return results\n            .split(/\\n|\\r\\n|\\r/)\n            .slice(1)\n            .filter(f => !!f.trim())\n            .map(row => row.split('\\t'))\n            .map(cols => ({\n            refName: cols[12],\n            aliases: [cols[9], cols[6]].filter((f) => !!f),\n            override,\n        }))\n            .filter(f => !!f.refName);\n    }\n    async freeResources() { }\n}\n"],"names":["NcbiSequenceReportAliasAdapter","BaseAdapter","loc","override","openLocation","f","row","cols"],"mappings":"iFAEe,MAAMA,UAAuCC,EAAAA,WAAY,CACpE,MAAM,mBAAoB,CACtB,MAAMC,EAAM,KAAK,QAAQ,UAAU,EACnC,GAAIA,EAAI,MAAQ,IAAMA,EAAI,MAAQ,kCAC9B,MAAO,CAAE,EAEb,MAAMC,EAAW,KAAK,QAAQ,qBAAqB,EAEnD,OADgB,MAAMC,EAAAA,aAAaF,EAAK,KAAK,aAAa,EAAE,SAAS,MAAM,GAEtE,MAAM,YAAY,EAClB,MAAM,CAAC,EACP,OAAOG,GAAK,CAAC,CAACA,EAAE,KAAM,CAAA,EACtB,IAAIC,GAAOA,EAAI,MAAM,GAAI,CAAC,EAC1B,IAAIC,IAAS,CACd,QAASA,EAAK,EAAE,EAChB,QAAS,CAACA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EAAE,OAAQF,GAAM,CAAC,CAACA,CAAC,EAC7C,SAAAF,CACZ,EAAU,EACG,OAAOE,GAAK,CAAC,CAACA,EAAE,OAAO,CACpC,CACI,MAAM,eAAgB,CAAA,CAC1B","x_google_ignoreList":[0]}
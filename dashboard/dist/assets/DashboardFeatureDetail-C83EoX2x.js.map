{"version":3,"mappings":";iTAAA,IAAIA,EAAS,UAAW,CAGxB,SAASC,EAAYC,EAAKC,EAAM,CAC9B,OAAOA,GAAQ,MAAQD,aAAeC,CACxC,CAEA,IAAIC,EACJ,GAAI,CACFA,EAAY,GACb,MAAU,CAGTA,EAAY,UAAW,CAAE,CAC3B,CAEA,IAAIC,EACJ,GAAI,CACFA,EAAY,GACb,MAAU,CACTA,EAAY,UAAW,CAAE,CAC3B,CAEA,IAAIC,EACJ,GAAI,CACFA,EAAgB,OACjB,MAAU,CACTA,EAAgB,UAAW,CAAE,CAC/B,CAuBA,SAASN,EAAMO,EAAQC,EAAUC,EAAOC,EAAWC,EAAsB,CACnE,OAAOH,GAAa,WACtBC,EAAQD,EAAS,MACjBE,EAAYF,EAAS,UACrBG,EAAuBH,EAAS,qBAChCA,EAAWA,EAAS,UAItB,IAAII,EAAa,CAAE,EACfC,EAAc,CAAE,EAEhBC,EAAY,OAAO,OAAU,IAE7B,OAAON,EAAY,MACrBA,EAAW,IAET,OAAOC,EAAS,MAClBA,EAAQ,KAGV,SAASM,EAAOR,EAAQE,EAAO,CAE7B,GAAIF,IAAW,KACb,OAAO,KAET,GAAIE,IAAU,EACZ,OAAOF,EAET,IAAIS,EACAC,EACJ,GAAI,OAAOV,GAAU,SACnB,OAAOA,EAGT,GAAIN,EAAYM,EAAQH,CAAS,EAC/BY,EAAQ,IAAIZ,UACHH,EAAYM,EAAQF,CAAS,EACtCW,EAAQ,IAAIX,UACHJ,EAAYM,EAAQD,CAAa,EAC1CU,EAAQ,IAAIV,EAAc,SAAUY,EAASC,EAAQ,CACnDZ,EAAO,KAAK,SAASa,EAAO,CAC1BF,EAAQH,EAAOK,EAAOX,EAAQ,CAAC,CAAC,CACjC,EAAE,SAASY,EAAK,CACfF,EAAOJ,EAAOM,EAAKZ,EAAQ,CAAC,CAAC,CACvC,CAAS,CACT,CAAO,UACQT,EAAM,UAAUO,CAAM,EAC/BS,EAAQ,CAAE,UACDhB,EAAM,WAAWO,CAAM,EAChCS,EAAQ,IAAI,OAAOT,EAAO,OAAQe,EAAiBf,CAAM,CAAC,EACtDA,EAAO,YAAWS,EAAM,UAAYT,EAAO,mBACtCP,EAAM,SAASO,CAAM,EAC9BS,EAAQ,IAAI,KAAKT,EAAO,QAAO,CAAE,MAC5B,IAAIO,GAAa,OAAO,SAASP,CAAM,EAC5C,OAAI,OAAO,YAETS,EAAQ,OAAO,YAAYT,EAAO,MAAM,EAGxCS,EAAQ,IAAI,OAAOT,EAAO,MAAM,EAElCA,EAAO,KAAKS,CAAK,EACVA,EACEf,EAAYM,EAAQ,KAAK,EAClCS,EAAQ,OAAO,OAAOT,CAAM,EAExB,OAAOG,EAAa,KACtBO,EAAQ,OAAO,eAAeV,CAAM,EACpCS,EAAQ,OAAO,OAAOC,CAAK,IAG3BD,EAAQ,OAAO,OAAON,CAAS,EAC/BO,EAAQP,GAIZ,GAAIF,EAAU,CACZ,IAAIe,EAAQX,EAAW,QAAQL,CAAM,EAErC,GAAIgB,GAAS,GACX,OAAOV,EAAYU,CAAK,EAE1BX,EAAW,KAAKL,CAAM,EACtBM,EAAY,KAAKG,CAAK,CAC5B,CAEQf,EAAYM,EAAQH,CAAS,GAC/BG,EAAO,QAAQ,SAASa,EAAOI,EAAK,CAClC,IAAIC,EAAWV,EAAOS,EAAKf,EAAQ,CAAC,EAChCiB,EAAaX,EAAOK,EAAOX,EAAQ,CAAC,EACxCO,EAAM,IAAIS,EAAUC,CAAU,CACtC,CAAO,EAECzB,EAAYM,EAAQF,CAAS,GAC/BE,EAAO,QAAQ,SAASa,EAAO,CAC7B,IAAIO,EAAaZ,EAAOK,EAAOX,EAAQ,CAAC,EACxCO,EAAM,IAAIW,CAAU,CAC5B,CAAO,EAGH,QAASC,KAAKrB,EAAQ,CACpB,IAAIsB,EACAZ,IACFY,EAAQ,OAAO,yBAAyBZ,EAAOW,CAAC,GAG9C,EAAAC,GAASA,EAAM,KAAO,QAG1Bb,EAAMY,CAAC,EAAIb,EAAOR,EAAOqB,CAAC,EAAGnB,EAAQ,CAAC,EAC5C,CAEI,GAAI,OAAO,sBAET,QADIqB,EAAU,OAAO,sBAAsBvB,CAAM,EACxCqB,EAAI,EAAGA,EAAIE,EAAQ,OAAQF,IAAK,CAGvC,IAAIG,EAASD,EAAQF,CAAC,EAClBI,EAAa,OAAO,yBAAyBzB,EAAQwB,CAAM,EAC3DC,GAAc,CAACA,EAAW,YAAc,CAACrB,IAG7CK,EAAMe,CAAM,EAAIhB,EAAOR,EAAOwB,CAAM,EAAGtB,EAAQ,CAAC,EAC3CuB,EAAW,YACd,OAAO,eAAehB,EAAOe,EAAQ,CACnC,WAAY,EACxB,CAAW,EAEX,CAGI,GAAIpB,EAEF,QADIsB,EAAmB,OAAO,oBAAoB1B,CAAM,EAC/CqB,EAAI,EAAGA,EAAIK,EAAiB,OAAQL,IAAK,CAChD,IAAIM,EAAeD,EAAiBL,CAAC,EACjCI,EAAa,OAAO,yBAAyBzB,EAAQ2B,CAAY,EACjEF,GAAcA,EAAW,aAG7BhB,EAAMkB,CAAY,EAAInB,EAAOR,EAAO2B,CAAY,EAAGzB,EAAQ,CAAC,EAC5D,OAAO,eAAeO,EAAOkB,EAAc,CACzC,WAAY,EACtB,CAAS,EACT,CAGI,OAAOlB,CACX,CAEE,OAAOD,EAAOR,EAAQE,CAAK,CAC7B,CASAT,EAAM,eAAiB,SAAwBO,EAAQ,CACrD,GAAIA,IAAW,KACb,OAAO,KAET,IAAI4B,EAAI,UAAY,CAAE,EACtB,OAAAA,EAAE,UAAY5B,EACP,IAAI4B,CACZ,EAID,SAASC,EAAWC,EAAG,CACrB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAC,CACzC,CACArC,EAAM,WAAaoC,EAEnB,SAASE,EAASD,EAAG,CACnB,OAAO,OAAOA,GAAM,UAAYD,EAAWC,CAAC,IAAM,eACpD,CACArC,EAAM,SAAWsC,EAEjB,SAASC,EAAUF,EAAG,CACpB,OAAO,OAAOA,GAAM,UAAYD,EAAWC,CAAC,IAAM,gBACpD,CACArC,EAAM,UAAYuC,EAElB,SAASC,EAAWH,EAAG,CACrB,OAAO,OAAOA,GAAM,UAAYD,EAAWC,CAAC,IAAM,iBACpD,CACArC,EAAM,WAAawC,EAEnB,SAASlB,EAAiBmB,EAAI,CAC5B,IAAIC,EAAQ,GACZ,OAAID,EAAG,SAAQC,GAAS,KACpBD,EAAG,aAAYC,GAAS,KACxBD,EAAG,YAAWC,GAAS,KACpBA,CACT,CACA,OAAA1C,EAAM,iBAAmBsB,EAElBtB,CACP,EAAI,EAE8B2C,EAAO,UACvCA,UAAiB3C,uDC5PH,SAAA4C,EACdC,EACAC,EAIA,OACA,QAAOC,EAAAD,EAAK,OAAL,YAAAC,EAAYF,KAAQC,EAAKD,CAAG,CACrC,CAEsB,eAAAG,EAASC,EAAmBC,EAA0B,CACpE,MAAAC,EAAUC,aAAWF,CAAK,EAC1B,CAAE,KAAAG,GAASH,EACb,IACF,GAAIG,EACI,MAAAA,EAAK,eAAeJ,CAAS,MAE7B,WAAI,MAAM,2CAA2C,QAEtDK,EAAG,CACV,QAAQ,MAAMA,CAAC,EACPH,EAAA,OAAO,GAAGG,CAAC,EAAE,EAEzB,CC1BO,MAAMC,EAAO,CAChB,GAAI,oEACJ,GAAI,uCACJ,GAAI,0CACJ,GAAI,yCACJ,GAAI,sEACJ,GAAI,kBACJ,GAAI,iCACJ,GAAI,mFACJ,GAAI,qBACJ,GAAI,sCACJ,GAAI,4BACJ,GAAI,gDACJ,GAAI,sBACJ,GAAI,6EACJ,GAAI,iEACJ,GAAI,iCACJ,GAAI,uCACJ,GAAI,iBACJ,GAAI,0BACJ,GAAI,+CACJ,GAAI,+CACJ,GAAI,+CACJ,GAAI,yBACJ,GAAI,8CACJ,GAAI,8BACJ,GAAI,kBACJ,GAAI,wBACJ,GAAI,UACJ,GAAI,qCACJ,GAAI,yDACJ,GAAI,+CACJ,GAAI,yGACJ,GAAI,kCACJ,GAAI,oCACJ,GAAI,2CACJ,GAAI,6EACJ,GAAI,iCACJ,GAAI,qBACJ,GAAI,gDACJ,GAAI,2DACJ,GAAI,wBACJ,GAAI,0CACJ,GAAI,UACJ,GAAI,mCACJ,GAAI,yDACJ,GAAI,gBACJ,GAAI,kEACJ,GAAI,+DACJ,GAAI,mEACJ,GAAI,oDACJ,GAAI,aACJ,GAAI,+CACJ,GAAI,yEACJ,GAAI,+CACJ,GAAI,qDACJ,GAAI,uCACJ,GAAI,+CACJ,GAAI,yCACJ,GAAI,oBACJ,GAAI,oFACJ,GAAI,2EACN,ECtDF,SAAwBC,GAAyB,CAC/C,IAAAX,EACA,MAAAK,CACF,EAGG,CACD,cACG,MACC,WAAAO,MAACC,GAAW,SAAyC,8CACpDD,EAAA,UACE,SACEZ,EAAA,MAAM,GAAG,EACT,OAAac,GAAA,CAAC,CAACA,CAAE,EACjB,IAAI,CAACA,EAAIpC,IAAU,CACZ,MAACqC,EAAOC,EAASC,EAAUC,CAAO,EAAIJ,EAAG,MAAM,GAAG,EAClDK,EAAWC,EAA8BF,CAAO,EAChDG,EAAQ,KAAK,MAAMF,EAAW,CAAC,EAC/BG,EAAQ,CAACN,EACTO,EAAM,CAACP,EAAUG,EACjBK,EAAKF,EAAQD,EACbI,EAAKF,EAAMF,EACXjB,EAAY,GAAGW,CAAK,IAAI,KAAK,IAAI,EAAGS,CAAE,CAAC,IAAIC,CAAE,GAC7CC,EAAeJ,EAAM,eAAe,OAAO,EAC3CK,EAAaJ,EAAI,eAAe,OAAO,EACvCK,EAAgB,GAAGb,CAAK,IAAIW,CAAY,IAAIC,CAAU,KAAKV,CAAQ,MAAME,CAAQ,MACvF,aACG,KACC,UAAAP,EAAA,IAACiB,EAAA,CACC,QAAS,MAAMC,GAAS,CACtBA,EAAM,eAAe,EAGrB3B,EAASC,EAAWC,CAAK,CAC3B,EAEC,SAAAuB,CAAA,CATI,MAAGxB,CAAS,IAAI1B,CAAK,EAW9B,EAEH,CACL,IACF,CAEJ,CCjCgB,SAAAqB,GAAOgC,EAAkB/B,EAAa,CAC9C,MAAAU,EAAOqB,EAAQ,IAAI,MAAM,EAC/B,OAAOrB,IAAS,OAAYA,EAAKV,CAAG,EAAI+B,EAAQ,IAAI/B,CAAG,CACzD,CCIA,eAAsBgC,GAAc,CAClC,KAAAxB,EACA,QAAAuB,CACF,EAGG,CACD,KAAM,CAAE,gBAAAE,CAAA,EAAoB1B,EAAA,WAAWC,CAAI,EACrC0B,EAAQH,EAAQ,IAAI,OAAO,EAC3BI,EAAaJ,EAAQ,IAAI,QAAQ,EACjCjB,EAAMf,GAAOgC,EAAS,IAAI,GAAgB,GAC1CK,EAAWL,EAAQ,IAAI,MAAM,EAC7BM,EAAUC,EAAuBJ,EAAO,CAAC,EAKzCK,EAAW,MAAMN,EAAgB,gBAAgBzB,EAAK,cAAc,CAAC,CAAC,EAC5E,GAAI,CAAC+B,EACG,UAAI,MAAM,oBAAoB,EAGhC,MAAAC,EAAWC,GAA2B3B,EAAIiB,EAAQ,KAAMI,EAAYC,EAAU,EAAI,EAElFnC,EAAO8B,EAAQ,OAAO,EAC5B9B,EAAK,QAAUoC,EACfpC,EAAK,OAAS,EAEdA,EAAK,KAAO,CACV,QAASmC,EACT,MAAOC,EACP,IAAKA,EAAUK,GAAqCR,CAAK,CAC3D,EACA,MAAMS,EAAW,CAAC1C,EAAM,GAAGuC,CAAQ,EAE1B,OAAAG,EAAA,QAAQ,CAACC,EAAGC,IAAQ,CAC3BD,EAAE,SAAUL,GAAA,YAAAA,EAAU,oBAAoBK,EAAE,WAAYA,EAAE,QAC1DA,EAAE,UAAYC,EACdD,EAAE,KAAK,UAAYC,EACnBD,EAAE,KAAK,SAAW,GAAGA,EAAE,QAAQ,QAChC,EACDD,EAAS,KAAK,CAACG,EAAGC,IAAMD,EAAE,QAAUC,EAAE,OAAO,EACtCJ,CACT,CCpDA,MAAMK,GAAuBC,OAAK,IAAMC,GAAA,WAAO,oCAAwB,2CAAC,EAElEC,GAAYC,IAAa,CAC7B,OAAQ,CACN,OAAQ,UAEZ,CAAC,EACD,SAAwBC,GAA+B,CACrD,MAAAhD,EACA,QAAA0B,EACA,SAAAuB,CACF,EAIG,CACK,MAAE,QAAAC,CAAQ,EAAIJ,GAAU,EACxB7C,EAAUC,aAAWF,CAAK,EAC1B,CAAE,KAAAG,GAASH,EACX,CAACmD,EAAKC,CAAM,EAAIC,WAA2B,EAC3C,CAACC,EAAOC,CAAQ,EAAIF,WAAkB,EAC5CG,YAAU,IAAM,EAEZ,SAAY,CACR,IACI,MAAAC,EAAQ,MAAM9B,GAAc,CAChC,KAAAxB,EACA,QAAS,IAAIuD,gBAAchC,CAAO,EACnC,EACD0B,EAAOK,CAAK,QACLrD,EAAG,CACVmD,EAASnD,CAAC,EACV,QAAQ,MAAMA,CAAC,EACjB,GACC,GACF,CAACsB,EAASvB,CAAI,CAAC,EAElB,MAAMwD,EAAM,CAAC,EACb,GAAIR,EACF,QAASzE,EAAI,EAAGA,EAAIyE,EAAI,OAAS,EAAGzE,IAC9BiF,EAAA,KAAK,CAACR,EAAIzE,CAAC,EAAGyE,EAAIzE,EAAI,CAAC,CAAC,CAAU,EAGnC,OAAAiF,EAAI,OACTC,EAAA,KAAC,MACC,WAAArD,MAACC,GAAW,SAEZ,uDACC8C,EAAQ/C,MAACsD,gBAAa,OAAAP,CAAA,CAAc,EAAK,WACzC,KACE,UAAAK,EAAI,IAAI,CAACG,EAAKzF,IAAU,CACjB,MAAC0F,EAAIC,CAAE,EAAIF,EACjB,OACGvD,EAAA,UACC,SAACA,MAAA0D,GAAA,CAAQ,MAAM,0BACb,SAAAL,EAAA,KAACpC,EAAA,CACC,KAAK,IACL,UAAW0B,EAAQ,OACnB,QAAkBzB,GAAA,CAChBA,EAAM,eAAe,EACrBxB,EAAQ,YAA2BiE,GAAA,CACjCvB,GACA,CAAE,YAAAuB,EAAa,GAAAH,EAAI,GAAAC,EAAI,MAAAhE,EAAO,SAAAiD,CAAS,EACxC,CACH,EAEC,UAAGc,EAAA,QAAQ,IAAEI,WAASJ,EAAG,SAAW,EAAIA,EAAG,IAAMA,EAAG,KAAK,EAAG,IAAI,MAC1DC,EAAG,QAAQ,IACjBG,WAASH,EAAG,SAAW,EAAIA,EAAG,MAAQA,EAAG,GAAG,KAEjD,GAjBO,GAAG,KAAK,UAAUF,CAAG,CAAC,IAAIzF,CAAK,EAkBxC,EAEH,CACH,IACF,EACE,IACN,CCnFA,SAAwB+F,GAAeC,EAIpC,CACD,KAAM,CAAE,MAAArE,EAAO,IAAAL,EAAK,QAAA+B,CAAY,EAAA2C,EAC1BpE,EAAUC,aAAWF,CAAK,EAC1B,CAAE,cAAAsE,CAAA,EAAkBC,EAAA,OAAOtE,CAAO,EACpC,IAAAgD,EAEA,IACSA,EAAAqB,EAAc,YAAY,qBAAqB,OAChD,EAIZ,OACGV,OAAAY,WAAA,CAAU,GAAGH,EAAO,MAAM,2BACzB,UAAC9D,MAAAD,GAAA,CAAyB,MAAAN,EAAc,IAAAL,CAAU,GACjDsD,EACC1C,EAAA,IAACyC,GAAA,CACC,SAAAC,EACA,MAAAjD,EACA,QAAA0B,CAAA,GAEA,MACN,CAEJ,CChBA,SAAwB+C,GAAqBJ,EAAkC,CAC7E,KAAM,CAAE,MAAAK,EAAO,iBAAAC,EAAkB,YAAAC,CAAY,EAAIP,GAAS,CAAC,EAGrDQ,EACJ,OAAOH,GAAU,UAAYA,EAAM,OAAS,EACxCA,EAAM,MAAM,GAAG,EAAE,IAAKI,GAAOA,EAAG,MAAM,EAAE,OAAO,OAAO,EACtD,CAAC,EAGP,IAAIC,EAAoC,CAAC,EACrC,IACFA,EAAU,OAAO,aACd,MAAM,QAAQ,OAAO,OAAOJ,GAAoB,EAAE,CAAC,EAChD,OAAO,OAAOA,GAAoB,EAAE,EAAE,KAAK,EAC3C,IAED,OACEK,GACCA,GACA,OAAOA,EAAK,WAAc,UAC1B,OAAOA,EAAK,UAAa,UAE5B,IAAKA,GAAS,CAACA,EAAK,UAAWA,EAAK,SAAS,MAAM,GAAG,CAAC,CAAC,CAC7D,OACY,CACZD,EAAU,CAAC,EAIJ,SAAAE,EAAQC,EAA2B1C,EAAqB,CAC/D,MAAM2C,EACJD,GAAOA,EAAI,OAAS1C,GAAO0C,EAAI1C,CAAG,IAAM,OACpC,OAAO0C,EAAI1C,CAAG,CAAC,EACf,GACN,OAAO,OAAO2C,GAAQ,UAAY,CAAC,MAAMA,CAAG,GAAKA,IAAQ,GACrDA,EAAI,QAAQ,CAAC,EACb,GAIJ,OAAA5E,EAAA,IAACiE,EAAA,UACC,MAAOI,EAAc,+BAAiC,sBAEtD,SAAArE,EAAA,IAAC,OAAI,MAAO,CAAE,UAAW,QAAS,UAAW,MAC1C,WAAAsE,EAAO,OAAS,GAAMD,GAAe,OAAO,KAAKG,CAAO,EAAE,OAAS,SACjE,QACC,WAACxE,EAAA,aACC,gBAAC,KACC,WAACA,MAAA,MAAG,MAAO,CAAE,QAAS,WAAY,UAAW,SAAU,WAAY,MAAO,EAAG,SAE7E,WACAA,MAAC,KAAG,OAAO,CAAE,QAAS,WAAY,UAAW,SAAU,WAAY,MAAO,EAAG,SAE7E,YACAA,MAAC,KAAG,OAAO,CAAE,QAAS,WAAY,UAAW,SAAU,WAAY,MAAO,EAAG,SAE7E,qBACAA,MAAC,KAAG,OAAO,CAAE,QAAS,WAAY,UAAW,SAAU,WAAY,QAAU,SAE7E,WACF,CACF,GACAA,MAAC,SACE,SACCqE,EAAA,OAAO,QAAQG,CAAO,EAAE,IAAI,CAAC,CAACzG,EAAKJ,CAAK,WACrC,KAAa,OAAO,CAAE,gBAAiB,UAAW,aAAc,gBAC/D,YAAAqC,EAAA,IAAC,KAAG,OAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,QACrD,SAAArC,GAASA,EAAM,CAAC,GAAM,GAC1B,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MAAO,EAC7D,SAAQ0E,EAAA/G,EAAO,CAAC,EACnB,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MAAO,EAC7D,SAAQ0E,EAAA/G,EAAO,CAAC,EACnB,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MACrD,WAAArC,GAASA,EAAM,CAAC,GAAM,EAC1B,KAZOI,CAaT,CACD,EAEDuG,EAAO,IAAKG,GAAS,CACb,MAAA9G,EAAQ6G,EAAQC,CAAI,EACtB,OAAC9G,EAEH0F,EAAA,KAAC,MAAc,MAAO,CAAE,gBAAiB,UAAW,aAAc,gBAChE,YAAArD,EAAA,IAAC,KAAG,OAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,QACrD,SAAArC,GAASA,EAAM,CAAC,GAAM,GAC1B,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MAAO,EAC7D,SAAQ0E,EAAA/G,EAAO,CAAC,EACnB,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MAAO,EAC7D,SAAQ0E,EAAA/G,EAAO,CAAC,EACnB,EACCqC,EAAA,UAAG,MAAO,CAAE,QAAS,MAAO,UAAW,SAAU,MAAO,MACrD,WAAArC,GAASA,EAAM,CAAC,GAAM,EAC1B,KAZO8G,CAaT,EAfiB,IAejB,CAEH,CAEL,GACF,GAEAzE,MAAC,MAAI,mCAAsB,CAE/B,GACF,CAEJ,CC3HA,SAAwB6E,GAAWf,EAAO,CAElC,MAAC,gBAAAgB,EAAiB,GAAAC,CAAA,EAAOjB,EAC/B,OACG9D,MAAAiE,WAAA,CAAS,MAAM,sBAChB,SAACjE,MAAA,OAAI,MAAO,CAAE,UAAW,QAAS,UAAW,QAC7C,SAACA,EAAA,UAAG,MAAO,CAAE,cAAe,OAAQ,QAAS,GAC1C,WAAA+E,GAAMA,EAAG,OAAO,EAAKA,EAAG,IAAKC,GAC3BhF,MAAA,MAAmB,MAAO,CAAE,gBAAiB,UAAW,aAAc,iBAAkB,QAAS,KAChG,WAAAA,EAAA,IAAC,OAAK,OAAO,CAAE,WAAY,MAAW,WAAA8E,EAAgBE,CAAS,EAAE,CAD1D,EAAAA,CAET,CACD,QACE,OAAK,OAAO,CAAE,WAAY,MAAO,EAAG,SAAa,iBAGtD,EACA,GACA,CAEJ,CC3BA,SAAwBC,GAAenB,EAAO,CAEpC,MAAC,sBAAAoB,GAA0BpB,EAEjC,OACK9D,MAAAiE,WAAA,CAAS,MAAM,uBACZ,SAACjE,MAAA,OAAI,MAAO,CAAE,UAAW,QAAS,UAAW,QACzC,SAACA,EAAA,UAAG,MAAO,CAAE,cAAe,OAAQ,QAAS,KACxC,SAAAkF,GAAyBA,EAAsB,OAAO,EAAKA,EAAsB,IAAI,CAACC,EAAMrH,IACzFkC,MAAC,KAAe,OAAO,CAAE,gBAAiB,UAAW,aAAc,iBAAkB,QAAS,KAAM,EAChG,SAACA,MAAA,QAAK,MAAO,CAAE,WAAY,MAAO,EAAI,SAAKmF,CAAA,IADtCrH,CAET,CACH,EACDkC,EAAA,IAAC,OAAK,OAAO,CAAE,WAAY,MAAO,EAAG,SAAkB,sBAE3D,EACJ,GACJ,CAER,CChBA,MAAMuC,GAAYC,IAAa,CAC7B,QAAS,CACP,aAAc,EACd,WAAY,EACZ,cAAe,EAEnB,CAAC,EAEK4C,GAAY,CAChB,cACA,6BACA,gBACA,gBACA,sBACA,sBACA,gBACA,iBACA,wBACA,4CACA,mCACA,yBACF,EAEA,SAAwBC,GAAevB,EAAuC,CACtE,MAAE,QAAAnB,CAAQ,EAAIJ,GAAU,EACxB,CAAE,QAAApB,GAAY2C,EACd,CAAE,MAAA7E,GAAUkC,EAElB,OACGkC,OAAAY,WAAA,CAAU,GAAGH,EAAO,MAAM,QACzB,UAAA9D,EAAA,IAACsF,GAAY,MAAK,OAAO,MAAOrG,EAAO,QACtCsG,GACE,UAAAH,GAAU,IAAI,CAACI,EAAMvD,IAAQ,CACtB,MAAA2C,EAAM3F,EAAS,GAAKgD,EACpBlE,EAAM,GAAGyH,CAAI,IAAIZ,CAAG,GAExB,OAAA5E,EAAA,IAACyF,GAAA,CAEC,QACEzF,EAAA,IAAC0F,GAAA,CACC,UAAW/C,EAAQ,QACnB,QAAS,EAAQiC,EACjB,KAAAY,EACA,SAAQ,GACV,EAEF,MAAOA,CAAA,EATFzH,CAUP,EAEH,CACH,IACF,CAEJ,CCpDA,SAAwB4H,GAAS,CAC/B,UAAAnG,EACA,MAAAC,CACF,EAGG,CAEC,OAAAO,EAAA,IAACiB,EAAA,CACC,QAAkBC,GAAA,CAChBA,EAAM,eAAe,EAErB3B,EAASC,EAAWC,CAAK,CAC3B,EACA,KAAK,IAEJ,SAAAD,CAAA,CACH,CAEJ,CCpBwB,SAAAoG,GAAU,CAAE,MAAAjI,GAA6B,CAC/D,KAAM,CAACkI,EAAMC,CAAO,EAAIhD,WAAS,EAAK,EAChC,CAACiD,EAAQC,CAAS,EAAIlD,WAAS,EAAK,EACpCmD,EAAU,OAAOtI,CAAK,EACrB,OAAAsI,EAAQ,OAAS,IAEpB5C,OAAA6C,WAAA,WAAAlG,EAAA,IAAC,UACC,KAAK,SACL,QAAS,IAAM,CACbmG,GAAKF,CAAO,EACZD,EAAU,EAAI,EACd,WAAW,IAAMA,EAAU,EAAK,EAAG,GAAG,CACxC,EAEC,WAAS,sBAAwB,OACpC,EACChG,EAAA,cAAO,KAAK,SAAS,QAAS,IAAM8F,EAAQlB,GAAO,CAACA,CAAG,EACrD,SAAAiB,EAAO,YAAc,YACxB,EACA7F,MAAC,MAAK,UAAA6F,EAAOI,EAAU,GAAGA,EAAQ,MAAM,EAAG,GAAG,CAAC,KAAM,GACvD,GAECjG,MAAA,OAAK,SAAQiG,CAAA,EAElB,CCTA,MAAMG,EAAO,CAAC,UAAW,QAAS,KAAM,IAAI,EAEtCC,GAA2BC,GAAS,SAAUxC,EAEjD,CACK,MAAE,MAAArE,GAAUqE,EACZzE,EAAO9C,GAAMkD,EAAM,WAAW,EAE9B8G,EAAa9G,EAAM,WACnB+G,EAAiB/G,EAAM,eACvBgH,EAAkBhH,EAAM,sBAExB2E,EAAmB3E,EAAM,iBAE3B8G,EAAW,SAAS,UAAU,GAC3BH,EAAA,KAAK,OAAQ,kBAAmB,QAAS,KAAM,QAAS,gBAAiB,aAAc,MAAM,EAG9F,MAAAlG,EAAKf,EAAO,KAAME,CAAI,EAEtBqH,EAAKvH,EAAO,KAAME,CAAI,EAExB,IAAA0F,EAAK5F,EAAO,KAAME,CAAI,EAEpB,MAAAsH,EAAY5B,GAAA,YAAAA,EAAI,MAAM,KAG1B,OAAA1B,EAAA,KAACuD,GAAM,eAAY,wBACjB,UAAA5G,EAAA,IAAC6G,EAAA,gBACE,GAAG/C,EACJ,KAAAsC,EAEA,aAAc,CAAE,GAAGtG,EAAM,KAAAA,CAAW,EACpC,QAAST,EACT,UAAW,CAAC1B,EAAOI,IACjBA,IAAQ,wBACNiC,MAAC2F,GAAS,OAAAlG,EAAc,UAAW9B,CAAiB,GAEpDqC,MAAC4F,IAAU,MAAAjI,CAAc,GAG/B,EAEE4I,EAAW,SAAS,UAAU,oBAG5B,SAAC,MAFHvG,MAAC6E,GAAW,iBAAiB2B,EAAgB,GAAIG,CAAW,GAK7DJ,EAAW,SAAS,UAAU,QAC5BtB,GAAe,uBAAuBwB,CAAiB,GAEtDzG,MAAAkG,WAAA,IAIJlG,MAAC8G,IAAsB,MAAOJ,EAAI,iBAAAtC,EAAoC,YAAamC,EAAW,SAAS,UAAU,EAAE,EAElHrG,QAAM2D,GAAe,OAAApE,EAAc,IAAKS,EAAI,QAASb,CAAM,GAAK,KAChEA,EAAK,QAAU,OAAYW,MAAC+G,IAAM,QAAS1H,EAAO,GAAGyE,CAAA,CAAO,EAAK,MACpE,CAEJ,CAAC","names":["clone","_instanceof","obj","type","nativeMap","nativeSet","nativePromise","parent","circular","depth","prototype","includeNonEnumerable","allParents","allChildren","useBuffer","_clone","child","proto","resolve","reject","value","err","__getRegExpFlags","index","key","keyChild","valueChild","entryChild","i","attrs","symbols","symbol","descriptor","allPropertyNames","propertyName","c","__objToStr","o","__isDate","__isArray","__isRegExp","re","flags","module","getTag","tag","feat","_a","navToLoc","locString","model","session","getSession","view","e","tags","SuppAlignmentsLocStrings","jsx","Typography","SA","saRef","saStart","saStrand","saCigar","saLength","MismatchParser.getLengthOnRef","extra","start","end","sp","ep","displayStart","displayEnd","displayString","Link","event","feature","getSAFeatures","assemblyManager","cigar","origStrand","readName","clipPos","MismatchParser.getClip","assembly","suppAlns","MismatchParser.featurizeSA","MismatchParser.getLengthSansClipping","features","f","idx","a","b","BreakendOptionDialog","lazy","__vitePreload","useStyles","makeStyles","LaunchBreakpointSplitViewPanel","viewType","classes","res","setRes","useState","error","setError","useEffect","feats","SimpleFeature","ret","jsxs","ErrorMessage","arg","f1","f2","Tooltip","handleClose","toLocale","SuppAlignments","props","pluginManager","getEnv","BaseCard","UnaccountedMutations","UM_ID","unseen_mutations","is_sequence","um_ids","id","mapping","item","safeNum","arr","val","Haplotypes","haplotype_names","RG","haplotype","UncertainNodes","uncertain_nodes_names","node","flagNames","AlignmentFlags","SimpleField","FormGroup","name","FormControlLabel","Checkbox","PairLink","Formatter","show","setShow","copied","setCopied","display","Fragment","copy","omit","AlignmentsFeatureDetails","observer","display_id","all_group_name","uncertain_nodes","UM","RG_arrays","Paper","FeatureDetails","UnnaccountedMutations","Flags"],"ignoreList":[0],"sources":["../../node_modules/clone/clone.js","../../src/plugins/DashboardFeatureWidget/util.ts","../../src/plugins/DashboardFeatureWidget/taginfo.ts","../../src/plugins/DashboardFeatureWidget/SuppAlignmentsLocStrings.tsx","../../src/plugins/util.ts","../../src/plugins/DashboardFeatureWidget/getSAFeatures.ts","../../src/plugins/DashboardFeatureWidget/LaunchBreakpointSplitViewPanel.tsx","../../src/plugins/DashboardFeatureWidget/SuppAlignments.tsx","../../src/plugins/DashboardFeatureWidget/UnaccountedMutationsTable.tsx","../../src/plugins/DashboardFeatureWidget/haplotypes.tsx","../../src/plugins/DashboardFeatureWidget/uncertainnodes.tsx","../../src/plugins/DashboardFeatureWidget/Flags.tsx","../../src/plugins/DashboardFeatureWidget/PairLink.tsx","../../src/plugins/DashboardFeatureWidget/Formatter.tsx","../../src/plugins/DashboardFeatureWidget/DashboardFeatureDetail.tsx"],"sourcesContent":["var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","import { getSession } from '@jbrowse/core/util'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\nexport function getTag(\n  tag: string,\n  feat: {\n    tags?: Record<string, unknown>\n    [key: string]: unknown\n  },\n) {\n  return feat.tags?.[tag] || feat[tag]\n}\n\nexport async function navToLoc(locString: string, model: IAnyStateTreeNode) {\n  const session = getSession(model)\n  const { view } = model\n  try {\n    if (view) {\n      await view.navToLocString(locString)\n    } else {\n      throw new Error('No view associated with this view anymore')\n    }\n  } catch (e) {\n    console.error(e)\n    session.notify(`${e}`)\n  }\n}","export const tags = {\n    AM: 'The smallest template-independent mapping quality in the template',\n    AS: 'Alignment score generated by aligner',\n    BC: 'Barcode sequence identifying the sample',\n    BQ: 'Offset to base alignment quality (BAQ)',\n    BZ: 'Phred quality of the unique molecular barcode bases in the {OX} tag',\n    CB: 'Cell identifier',\n    CC: 'Reference name of the next hit',\n    CM: 'Edit distance between the color sequence and the color reference (see also {NM})',\n    CO: 'Free-text comments',\n    CP: 'Leftmost coordinate of the next hit',\n    CQ: 'Color read base qualities',\n    CR: 'Cellular barcode sequence bases (uncorrected)',\n    CS: 'Color read sequence',\n    CT: 'Complete read annotation tag, used for consensus annotation dummy features',\n    CY: 'Phred quality of the cellular barcode sequence in the {CR} tag',\n    E2: 'The 2nd most likely base calls',\n    FI: 'The index of segment in the template',\n    FS: 'Segment suffix',\n    FZ: 'Flow signal intensities',\n    GC: 'Reserved for backwards compatibility reasons',\n    GQ: 'Reserved for backwards compatibility reasons',\n    GS: 'Reserved for backwards compatibility reasons',\n    H0: 'Number of perfect hits',\n    H1: 'Number of 1-difference hits (see also {NM})',\n    H2: 'Number of 2-difference hits',\n    HI: 'Query hit index',\n    IH: 'Query hit total count',\n    LB: 'Library',\n    MC: 'CIGAR string for mate/next segment',\n    MD: 'String encoding mismatched and deleted reference bases',\n    MF: 'Reserved for backwards compatibility reasons',\n    MI: 'Molecular identifier; a string that uniquely identifies the molecule from which the record was derived',\n    ML: 'Base modification probabilities',\n    MM: 'Base modifications / methylation ',\n    MQ: 'Mapping quality of the mate/next segment',\n    NH: 'Number of reported alignments that contain the query in the current record',\n    NM: 'Edit distance to the reference',\n    OA: 'Original alignment',\n    OC: 'Original CIGAR (deprecated; use {OA} instead)',\n    OP: 'Original mapping position (deprecated; use {OA} instead)',\n    OQ: 'Original base quality',\n    OX: 'Original unique molecular barcode bases',\n    PG: 'Program',\n    PQ: 'Phred likelihood of the template',\n    PT: 'Read annotations for parts of the padded read sequence',\n    PU: 'Platform unit',\n    Q2: 'Phred quality of the mate/next segment sequence in the {R2} tag',\n    QT: 'Phred quality of the sample barcode sequence in the {BC} tag',\n    QX: 'Quality score of the unique molecular identifier in the {RX} tag',\n    R2: 'Sequence of the mate/next segment in the template',\n    RG: 'Read group',\n    RT: 'Reserved for backwards compatibility reasons',\n    RX: 'Sequence bases of the (possibly corrected) unique molecular identifier',\n    S2: 'Reserved for backwards compatibility reasons',\n    SA: 'Other canonical alignments in a chimeric alignment',\n    SM: 'Template-independent mapping quality',\n    SQ: 'Reserved for backwards compatibility reasons',\n    TC: 'The number of segments in the template',\n    TS: 'Transcript strand',\n    U2: 'Phred probability of the 2nd call being wrong conditional on the best being wrong',\n    UQ: 'Phred likelihood of the segment, conditional on the mapping being correct',\n  }","import React from 'react'\nimport { Typography, Link } from '@mui/material'\n// locals\n// import { getLengthOnRef } from '../MismatchParser'\nimport {MismatchParser} from '@jbrowse/plugin-alignments'\nimport { navToLoc } from './util'\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\n\nexport default function SuppAlignmentsLocStrings({\n  tag,\n  model,\n}: {\n  tag: string\n  model: AlignmentFeatureWidgetModel\n}) {\n  return (\n    <div>\n      <Typography>List of supplementary alignment locations</Typography>\n      <ul>\n        {tag\n          .split(';')\n          .filter(SA => !!SA)\n          .map((SA, index) => {\n            const [saRef, saStart, saStrand, saCigar] = SA.split(',')\n            const saLength = MismatchParser.getLengthOnRef(saCigar)\n            const extra = Math.floor(saLength / 5)\n            const start = +saStart\n            const end = +saStart + saLength\n            const sp = start - extra\n            const ep = end + extra\n            const locString = `${saRef}:${Math.max(1, sp)}-${ep}`\n            const displayStart = start.toLocaleString('en-US')\n            const displayEnd = end.toLocaleString('en-US')\n            const displayString = `${saRef}:${displayStart}-${displayEnd} (${saStrand}) [${saLength}bp]`\n            return (\n              <li key={`${locString}-${index}`}>\n                <Link\n                  onClick={async event => {\n                    event.preventDefault()\n\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    navToLoc(locString, model)\n                  }}\n                >\n                  {displayString}\n                </Link>\n              </li>\n            )\n          })}\n      </ul>\n    </div>\n  )\n}","import { autorun } from 'mobx'\nimport { addDisposer, isAlive } from 'mobx-state-tree'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { AugmentedRegion, Feature } from '@jbrowse/core/util'\nimport type { IAutorunOptions } from 'mobx'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// use fallback alt tag, used in situations where upper case/lower case tags\n// exist e.g. Mm/MM for base modifications\nexport function getTagAlt(feature: Feature, tag: string, alt: string) {\n  const tags = feature.get('tags')\n  return tags[tag] ?? tags[alt]\n}\n\n// get tag from BAM or CRAM feature, where CRAM uses feature.get('tags') and\n// BAM does not\nexport function getTag(feature: Feature, tag: string) {\n  const tags = feature.get('tags')\n  return tags !== undefined ? tags[tag] : feature.get(tag)\n}\n\n// orientation definitions from igv.js, see also\n// https://software.broadinstitute.org/software/igv/interpreting_pair_orientations\nexport const orientationTypes = {\n  fr: {\n    F1R2: 'LR',\n    F2R1: 'LR',\n\n    F1F2: 'LL',\n    F2F1: 'LL',\n\n    R1R2: 'RR',\n    R2R1: 'RR',\n\n    R1F2: 'RL',\n    R2F1: 'RL',\n  } as Record<string, string>,\n\n  rf: {\n    R1F2: 'LR',\n    R2F1: 'LR',\n\n    R1R2: 'LL',\n    R2R1: 'LL',\n\n    F1F2: 'RR',\n    F2F1: 'RR',\n\n    F1R2: 'RL',\n    F2R1: 'RL',\n  } as Record<string, string>,\n\n  ff: {\n    F2F1: 'LR',\n    R1R2: 'LR',\n\n    F2R1: 'LL',\n    R1F2: 'LL',\n\n    R2F1: 'RR',\n    F1R2: 'RR',\n\n    R2R1: 'RL',\n    F1F2: 'RL',\n  } as Record<string, string>,\n}\n\nexport const pairMap = {\n  LR: 'color_pair_lr',\n  LL: 'color_pair_ll',\n  RR: 'color_pair_rr',\n  RL: 'color_pair_rl',\n} as const\n\nexport function getColorWGBS(strand: number, base: string) {\n  if (strand === 1) {\n    if (base === 'C') {\n      return '#f00'\n    }\n    if (base === 'T') {\n      return '#00f'\n    }\n  } else if (strand === -1) {\n    if (base === 'G') {\n      return '#f00'\n    }\n    if (base === 'A') {\n      return '#00f'\n    }\n  }\n  return '#888'\n}\n\nexport async function fetchSequence(\n  region: AugmentedRegion,\n  adapter: BaseFeatureDataAdapter,\n) {\n  const { start, end, originalRefName, refName } = region\n\n  const feats = await firstValueFrom(\n    adapter\n      .getFeatures({\n        ...region,\n        refName: originalRefName || refName,\n        end,\n        start,\n      })\n      .pipe(toArray()),\n  )\n  return feats[0]?.get('seq')\n}\n\ninterface ModificationData {\n  color: string\n  name: string\n}\n\n// adapted from IGV\n// https://github.com/igvteam/igv/blob/af07c3b1be8806cfd77343ee04982aeff17d2beb/src/main/resources/org/broad/igv/prefs/preferences.tab#L230-L242\nexport const modificationData = {\n  m: { color: 'rgb(255,0,0)', name: '5mC' },\n  h: { color: 'rgb(255,0,255)', name: '5hmC' },\n  o: { color: 'rgb(111, 78, 129)', name: '8oxoG' },\n  f: { color: 'rgb(246, 200, 95)', name: '5fC' },\n  c: { color: 'rgb(157, 216, 102)', name: '5cac' },\n  g: { color: 'rgb(255, 160, 86)', name: '5hmu' },\n  e: { color: 'rgb(141, 221, 208)', name: '5fU' },\n  b: { color: 'rgb(0,100,47)', name: '5caU' },\n  a: { color: 'rgb(51,0,111)', name: '6mA' },\n  17082: { color: 'rgb(51,153,255)', name: 'pseU' },\n  17596: { color: 'rgb(102,153,0)', name: 'inosine' },\n  21839: { color: 'rgb(153,0,153)', name: '4mC' },\n} as Record<string, ModificationData>\n\ntype DisplayModel = IAnyStateTreeNode & { setError: (arg: unknown) => void }\n\nexport function createAutorun(\n  self: DisplayModel,\n  cb: () => Promise<void>,\n  opts?: IAutorunOptions,\n) {\n  addDisposer(\n    self,\n    autorun(async () => {\n      try {\n        await cb()\n      } catch (e) {\n        if (isAlive(self)) {\n          self.setError(e)\n        }\n      }\n    }, opts),\n  )\n}\n\nexport function randomColor(str: string) {\n  let sum = 0\n\n  for (let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i)\n  }\n  return `hsl(${sum * 10}, 20%, 50%)`\n}\n\nexport function getColorForModification(str: string) {\n  return modificationData[str]?.color || randomColor(str)\n}","import { Feature, getSession } from '@jbrowse/core/util'\n\n// locals\nimport {MismatchParser} from '@jbrowse/plugin-alignments'\n\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { getTag } from '../util'\n\nexport interface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  strand: number\n  seqLength: number\n  syntenyId?: number\n  uniqueId: string\n  mate: {\n    refName: string\n    start: number\n    end: number\n    syntenyId?: number\n    uniqueId?: string\n  }\n}\n\nexport async function getSAFeatures({\n  view,\n  feature,\n}: {\n  view: LinearGenomeViewModel\n  feature: Feature\n}) {\n  const { assemblyManager } = getSession(view)\n  const cigar = feature.get('CIGAR') as string\n  const origStrand = feature.get('strand') as number\n  const SA = (getTag(feature, 'SA') as string) || ''\n  const readName = feature.get('name') as string\n  const clipPos = MismatchParser.getClip(cigar, 1)\n\n  // get the canonical refname for the read because if the\n  // read.get('refName') is chr1 and the actual fasta refName is 1 then no\n  // tracks can be opened on the top panel of the linear read vs ref\n  const assembly = await assemblyManager.waitForAssembly(view.assemblyNames[0])\n  if (!assembly) {\n    throw new Error('assembly not found')\n  }\n\n  const suppAlns = MismatchParser.featurizeSA(SA, feature.id(), origStrand, readName, true)\n\n  const feat = feature.toJSON()\n  feat.clipPos = clipPos\n  feat.strand = 1\n\n  feat.mate = {\n    refName: readName,\n    start: clipPos,\n    end: clipPos + MismatchParser.getLengthSansClipping(cigar),\n  }\n  const features = [feat, ...suppAlns] as ReducedFeature[]\n\n  features.forEach((f, idx) => {\n    f.refName = assembly?.getCanonicalRefName(f.refName) || f.refName\n    f.syntenyId = idx\n    f.mate.syntenyId = idx\n    f.mate.uniqueId = `${f.uniqueId}_mate`\n  })\n  features.sort((a, b) => a.clipPos - b.clipPos)\n  return features\n}","import React, { lazy, useEffect, useState } from 'react'\nimport { Typography, Link, Tooltip } from '@mui/material'\nimport {\n  SimpleFeature,\n  SimpleFeatureSerialized,\n  getSession,\n  toLocale,\n} from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport { ReducedFeature, getSAFeatures } from './getSAFeatures'\n\n// lazies\nconst BreakendOptionDialog = lazy(() => import('./BreakendOptionDialog'))\n\nconst useStyles = makeStyles()({\n  cursor: {\n    cursor: 'pointer',\n  },\n})\nexport default function LaunchBreakpointSplitViewPanel({\n  model,\n  feature,\n  viewType,\n}: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n  viewType: ViewType\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { view } = model\n  const [res, setRes] = useState<ReducedFeature[]>()\n  const [error, setError] = useState<unknown>()\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const feats = await getSAFeatures({\n          view,\n          feature: new SimpleFeature(feature),\n        })\n        setRes(feats)\n      } catch (e) {\n        setError(e)\n        console.error(e)\n      }\n    })()\n  }, [feature, view])\n\n  const ret = [] as [ReducedFeature, ReducedFeature][]\n  if (res) {\n    for (let i = 0; i < res.length - 1; i++) {\n      ret.push([res[i], res[i + 1]] as const)\n    }\n  }\n  return ret.length ? (\n    <div>\n      <Typography>\n        Launch split views with breakend source and target\n      </Typography>\n      {error ? <ErrorMessage error={error} /> : null}\n      <ul>\n        {ret.map((arg, index) => {\n          const [f1, f2] = arg\n          return (\n            <li key={`${JSON.stringify(arg)}-${index}`}>\n              <Tooltip title=\"Top panel->Bottom panel\">\n                <Link\n                  href=\"#\"\n                  className={classes.cursor}\n                  onClick={event => {\n                    event.preventDefault()\n                    session.queueDialog(handleClose => [\n                      BreakendOptionDialog,\n                      { handleClose, f1, f2, model, viewType },\n                    ])\n                  }}\n                >\n                  {f1.refName}:{toLocale(f1.strand === 1 ? f1.end : f1.start)}{' '}\n                  -&gt; {f2.refName}:\n                  {toLocale(f2.strand === 1 ? f2.start : f2.end)}\n                </Link>\n              </Tooltip>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  ) : null\n}","import React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { SimpleFeatureSerialized, getEnv, getSession } from '@jbrowse/core/util'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport SuppAlignmentsLocStrings from './SuppAlignmentsLocStrings'\nimport LaunchBreakpointSplitViewPanel from './LaunchBreakpointSplitViewPanel'\n\n\nexport default function SuppAlignments(props: {\n  tag: string\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, tag, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let viewType: ViewType | undefined\n\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  return (\n    <BaseCard {...props} title=\"Supplementary alignments\">\n      <SuppAlignmentsLocStrings model={model} tag={tag} />\n      {viewType ? (\n        <LaunchBreakpointSplitViewPanel\n          viewType={viewType}\n          model={model}\n          feature={feature}\n        />\n      ) : null}\n    </BaseCard>\n  )\n}","import React from 'react'\nimport { jsx } from 'react/jsx-runtime'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      [elemName: string]: any;\n    }\n  }\n}\n\ntype UnaccountedItem = {\n  unseenKey: string\n  mutation: string\n}\n\ninterface UnaccountedMutationsProps {\n  UM_ID?: string\n  unseen_mutations?: { [key: string]: UnaccountedItem[] } | null\n  is_sequence?: boolean\n}\n\nexport default function UnaccountedMutations(props: UnaccountedMutationsProps) {\n  const { UM_ID, unseen_mutations, is_sequence } = props || {}\n\n  // Defensive: handle UM_ID\n  const um_ids: string[] =\n    typeof UM_ID === 'string' && UM_ID.length > 0\n      ? UM_ID.split(',').map((id) => id.trim()).filter(Boolean)\n      : []\n\n  // Defensive: unseen_mutations might not be an object or may have bad values\n  let mapping: Record<string, string[]> = {}\n  try {\n    mapping = Object.fromEntries(\n      (Array.isArray(Object.values(unseen_mutations || {}))\n        ? Object.values(unseen_mutations || {}).flat()\n        : []\n      )\n        .filter(\n          (item: any): item is UnaccountedItem =>\n            item &&\n            typeof item.unseenKey === 'string' &&\n            typeof item.mutation === 'string'\n        )\n        .map((item) => [item.unseenKey, item.mutation.split(':')])\n    )\n  } catch (err) {\n    mapping = {}\n  }\n\n  // Helper to safely access array index and number conversion\n  function safeNum(arr: string[] | undefined, idx: number): string {\n    const val =\n      arr && arr.length > idx && arr[idx] !== undefined\n        ? Number(arr[idx])\n        : ''\n    return typeof val === 'number' && !isNaN(val) && val !== ''\n      ? val.toFixed(3)\n      : ''\n  }\n\n  return (\n    <BaseCard\n      title={is_sequence ? 'Possible Unaccounted Alleles' : 'Unaccounted Alleles'}\n    >\n      <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n        {um_ids.length > 0 || (is_sequence && Object.keys(mapping).length > 0) ? (\n          <table>\n            <thead>\n              <tr>\n                <th style={{ padding: '5px 10px', textAlign: 'center', fontWeight: 'bold' }}>\n                  Allele\n                </th>\n                <th style={{ padding: '5px 10px', textAlign: 'center', fontWeight: 'bold' }}>\n                  Residue\n                </th>\n                <th style={{ padding: '5px 10px', textAlign: 'center', fontWeight: 'bold' }}>\n                  Allele Frequency\n                </th>\n                <th style={{ padding: '5px 10px', textAlign: 'center', fontWeight: 'bold' }}>\n                  Depth\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {is_sequence ? (\n                Object.entries(mapping).map(([key, value]) => (\n                  <tr key={key} style={{ backgroundColor: '#f9f9f9', borderBottom: '1px solid #ddd' }}>\n                    <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                      {(value && value[0]) || ''}\n                    </td>\n                    <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                      {safeNum(value, 1)}\n                    </td>\n                    <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                      {safeNum(value, 2)}\n                    </td>\n                    <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                      {(value && value[3]) || ''}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                um_ids.map((item) => {\n                  const value = mapping[item]\n                  if (!value) return null;\n                  return (\n                    <tr key={item} style={{ backgroundColor: '#f9f9f9', borderBottom: '1px solid #ddd' }}>\n                      <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                        {(value && value[0]) || ''}\n                      </td>\n                      <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                        {safeNum(value, 1)}\n                      </td>\n                      <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                        {safeNum(value, 2)}\n                      </td>\n                      <td style={{ padding: '8px', textAlign: 'center', color: '#555' }}>\n                        {(value && value[3]) || ''}\n                      </td>\n                    </tr>\n                  )\n                })\n              )}\n            </tbody>\n          </table>\n        ) : (\n          <div>No unaccounted alleles</div>\n        )}\n      </div>\n    </BaseCard>\n  )\n}\n","import React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { SimpleFeatureSerialized, getEnv, getSession } from '@jbrowse/core/util'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport SuppAlignmentsLocStrings from './SuppAlignmentsLocStrings'\nimport LaunchBreakpointSplitViewPanel from './LaunchBreakpointSplitViewPanel'\n\n\nexport default function Haplotypes(props) {\n\n  const {haplotype_names, RG } = props\n  return (\n    <BaseCard title=\"Possible Haplotypes\">\n    <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n    <ul style={{ listStyleType: 'none', padding: '0' }}>\n      {RG && RG.length>0 ? (RG.map((haplotype) => (\n        <li key={haplotype} style={{ backgroundColor: '#f9f9f9', borderBottom: '1px solid #ddd', padding: '8px' }}>\n          <span style={{ fontWeight: 'bold' }}>{haplotype_names[haplotype]}</span>\n        </li>\n      ))) : (\n        <span style={{ fontWeight: 'bold' }}>No Haplotypes</span>\n      )\n    }\n    </ul>\n    </div>\n    </BaseCard>\n  )\n}","import React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\n\nexport default function UncertainNodes(props) {\n\n    const {uncertain_nodes_names } = props\n\n    return (\n        <BaseCard title=\"Uncertain Haplotypes\">\n            <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n                <ul style={{ listStyleType: 'none', padding: '0' }}>\n                    {uncertain_nodes_names && uncertain_nodes_names.length>0 ? (uncertain_nodes_names.map((node, index) => (\n                        <li key={index} style={{ backgroundColor: '#f9f9f9', borderBottom: '1px solid #ddd', padding: '8px' }}>\n                            <span style={{ fontWeight: 'bold' }}>{node}</span>\n                        </li>\n                    ))) : (\n                    <span style={{ fontWeight: 'bold' }}>No Uncertain Nodes</span>\n                    )}\n                </ul>\n            </div>\n        </BaseCard>\n    )\n}","import React from 'react'\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport SimpleField from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField'\n\nconst useStyles = makeStyles()({\n  compact: {\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n})\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nexport default function AlignmentFlags(props: { feature: { flags: number } }) {\n  const { classes } = useStyles()\n  const { feature } = props\n  const { flags } = feature\n\n  return (\n    <BaseCard {...props} title=\"Flags\">\n      <SimpleField name=\"Flag\" value={flags} />\n      <FormGroup>\n        {flagNames.map((name, idx) => {\n          const val = flags & (1 << idx)\n          const key = `${name}_${val}`\n          return (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  className={classes.compact}\n                  checked={Boolean(val)}\n                  name={name}\n                  readOnly\n                />\n              }\n              label={name}\n            />\n          )\n        })}\n      </FormGroup>\n    </BaseCard>\n  )\n}","import React from 'react'\nimport { Link } from '@mui/material'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport { navToLoc } from './util'\n\nexport default function PairLink({\n  locString,\n  model,\n}: {\n  locString: string\n  model: AlignmentFeatureWidgetModel\n}) {\n  return (\n    <Link\n      onClick={event => {\n        event.preventDefault()\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        navToLoc(locString, model)\n      }}\n      href=\"#\"\n    >\n      {locString}\n    </Link>\n  )\n}\n","import React, { useState } from 'react'\nimport copy from 'copy-to-clipboard'\n\n// this 'show more...' used specifically as a formatter on alignments feature\n// details because long SEQ or CRAM files, even a single div full of a ton of\n// data from a long read, can slow down the rest of the app\nexport default function Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  return display.length > 100 ? (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          copy(display)\n          setCopied(true)\n          setTimeout(() => setCopied(false), 700)\n        }}\n      >\n        {copied ? 'Copied to clipboard' : 'Copy'}\n      </button>\n      <button type=\"button\" onClick={() => setShow(val => !val)}>\n        {show ? 'Show less' : 'Show more'}\n      </button>\n      <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n    </>\n  ) : (\n    <div>{display}</div>\n  )\n}","import React from 'react'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport clone from 'clone'\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\n\n// locals\nimport { getTag } from './util'\nimport { tags } from './taginfo'\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\n\n// local components\nimport SuppAlignments from './SuppAlignments'\nimport UnnaccountedMutations from './UnaccountedMutationsTable'\nimport Haplotypes from './haplotypes'\nimport UncertainNodes from './uncertainnodes'\nimport Flags from './Flags'\nimport PairLink from './PairLink'\nimport Formatter from './Formatter'\n\n\nconst omit = ['clipPos', 'flags', \"UM\", \"RG\"]\n\nconst AlignmentsFeatureDetails = observer(function (props: {\n  model: AlignmentFeatureWidgetModel\n}) {\n  const { model } = props\n  const feat = clone(model.featureData)\n\n  const display_id = model.display_id\n  const all_group_name = model.all_group_name\n  const uncertain_nodes = model.uncertain_nodes_names\n\n  const unseen_mutations = model.unseen_mutations\n  \n  if (display_id.includes(\"sequence\")) {\n    omit.push('qual', 'template_length', 'Score', 'MQ', 'CIGAR', 'length_on_ref', 'seq_length', 'Type')\n  }\n\n  const SA = getTag('SA', feat) as string\n\n  const UM = getTag('UM', feat) as string\n\n  let RG = getTag('RG', feat) as string\n\n  const RG_arrays = RG?.split(\",\")\n  \n  return (\n    <Paper data-testid=\"alignment-side-drawer\">\n      <FeatureDetails\n        {...props}\n        omit={omit}\n        // @ts-expect-error\n        descriptions={{ ...tags, tags: tags }}\n        feature={feat}\n        formatter={(value, key) =>\n          key === 'next_segment_position' ? (\n            <PairLink model={model} locString={value as string} />\n          ) : (\n            <Formatter value={value} />\n          )\n        }\n      />\n      \n      {!display_id.includes(\"sequence\") ? (\n        <Haplotypes haplotype_names={all_group_name} RG={RG_arrays} />\n      ): (\n        <>/</>\n      )\n      }\n      {display_id.includes(\"sequence\") ? (\n        <UncertainNodes uncertain_nodes_names={uncertain_nodes} />\n      ):(\n        <></>\n      )\n      }\n\n      <UnnaccountedMutations UM_ID={UM} unseen_mutations={unseen_mutations} is_sequence={display_id.includes(\"sequence\")}/>\n\n      {SA ? <SuppAlignments model={model} tag={SA} feature={feat} /> : null}\n      {feat.flags !== undefined ? <Flags feature={feat} {...props} /> : null}\n    </Paper>\n  )\n})\n\nexport default AlignmentsFeatureDetails"],"file":"assets/DashboardFeatureDetail-C83EoX2x.js"}
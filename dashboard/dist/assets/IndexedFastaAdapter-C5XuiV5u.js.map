{"version":3,"file":"IndexedFastaAdapter-C5XuiV5u.js","sources":["../../node_modules/@gmod/indexedfasta/esm/indexedFasta.js","../../node_modules/@jbrowse/plugin-sequence/esm/IndexedFastaAdapter/IndexedFastaAdapter.js"],"sourcesContent":["import { LocalFile } from 'generic-filehandle';\nimport { Buffer } from 'buffer';\nfunction _faiOffset(idx, pos) {\n    return (idx.offset +\n        idx.lineBytes * Math.floor(pos / idx.lineLength) +\n        (pos % idx.lineLength));\n}\nasync function readFAI(fai, opts) {\n    const text = await fai.readFile(opts);\n    if (!(text === null || text === void 0 ? void 0 : text.length)) {\n        throw new Error('No data read from FASTA index (FAI) file');\n    }\n    let idCounter = 0;\n    let currSeq;\n    const data = text\n        .toString('utf8')\n        .split(/\\r?\\n/)\n        .filter(line => /\\S/.test(line))\n        .map(line => line.split('\\t'))\n        .filter(row => row[0] !== '')\n        .map(row => {\n        if (!currSeq || currSeq.name !== row[0]) {\n            currSeq = { name: row[0], id: idCounter };\n            idCounter += 1;\n        }\n        return {\n            id: currSeq.id,\n            name: row[0],\n            length: +row[1],\n            start: 0,\n            end: +row[1],\n            offset: +row[2],\n            lineLength: +row[3],\n            lineBytes: +row[4],\n        };\n    });\n    return {\n        name: Object.fromEntries(data.map(entry => [entry.name, entry])),\n        id: Object.fromEntries(data.map(entry => [entry.id, entry])),\n    };\n}\nexport default class IndexedFasta {\n    constructor({ fasta, fai, path, faiPath, }) {\n        if (fasta) {\n            this.fasta = fasta;\n        }\n        else if (path) {\n            this.fasta = new LocalFile(path);\n        }\n        else {\n            throw new Error('Need to pass filehandle for fasta or path to localfile');\n        }\n        if (fai) {\n            this.fai = fai;\n        }\n        else if (faiPath) {\n            this.fai = new LocalFile(faiPath);\n        }\n        else if (path) {\n            this.fai = new LocalFile(`${path}.fai`);\n        }\n        else {\n            throw new Error('Need to pass filehandle for  or path to localfile');\n        }\n    }\n    async _getIndexes(opts) {\n        if (!this.indexes) {\n            this.indexes = readFAI(this.fai, opts);\n        }\n        return this.indexes;\n    }\n    /**\n     * @returns {array[string]} array of string sequence\n     * names that are present in the index, in which the\n     * array index indicates the sequence ID, and the value\n     * is the sequence name\n     */\n    async getSequenceNames(opts) {\n        return Object.keys((await this._getIndexes(opts)).name);\n    }\n    /**\n     * @returns {array[string]} array of string sequence\n     * names that are present in the index, in which the\n     * array index indicates the sequence ID, and the value\n     * is the sequence name\n     */\n    async getSequenceSizes(opts) {\n        const returnObject = {};\n        const idx = await this._getIndexes(opts);\n        for (const val of Object.values(idx.id)) {\n            returnObject[val.name] = val.length;\n        }\n        return returnObject;\n    }\n    /**\n     * @returns {array[string]} array of string sequence\n     * names that are present in the index, in which the\n     * array index indicates the sequence ID, and the value\n     * is the sequence name\n     */\n    async getSequenceSize(seqName, opts) {\n        var _a;\n        const idx = await this._getIndexes(opts);\n        return (_a = idx.name[seqName]) === null || _a === void 0 ? void 0 : _a.length;\n    }\n    /**\n     *\n     * @param {string} name\n     * @returns {Promise[boolean]} true if the file contains the given reference sequence name\n     */\n    async hasReferenceSequence(name, opts) {\n        return !!(await this._getIndexes(opts)).name[name];\n    }\n    /**\n     *\n     * @param {number} seqId\n     * @param {number} min\n     * @param {number} max\n     */\n    async getResiduesById(seqId, min, max, opts) {\n        const indexEntry = (await this._getIndexes(opts)).id[seqId];\n        if (!indexEntry) {\n            return undefined;\n        }\n        return this._fetchFromIndexEntry(indexEntry, min, max, opts);\n    }\n    /**\n     * @param {string} seqName\n     * @param {number} min\n     * @param {number} max\n     */\n    async getResiduesByName(seqName, min, max, opts) {\n        const indexEntry = (await this._getIndexes(opts)).name[seqName];\n        if (!indexEntry) {\n            return undefined;\n        }\n        return this._fetchFromIndexEntry(indexEntry, min, max, opts);\n    }\n    //alias for getResiduesByName\n    async getSequence(seqName, min, max, opts) {\n        return this.getResiduesByName(seqName, min, max, opts);\n    }\n    async _fetchFromIndexEntry(indexEntry, min = 0, max, opts) {\n        let end = max;\n        if (min < 0) {\n            throw new TypeError('regionStart cannot be less than 0');\n        }\n        if (end === undefined || end > indexEntry.length) {\n            end = indexEntry.length;\n        }\n        if (min >= end) {\n            return '';\n        }\n        const position = _faiOffset(indexEntry, min);\n        const readlen = _faiOffset(indexEntry, end) - position;\n        const residues = Buffer.allocUnsafe(readlen);\n        await this.fasta.read(residues, 0, readlen, position, opts);\n        return residues.toString('utf8').replace(/\\s+/g, '');\n    }\n}\n//# sourceMappingURL=indexedFasta.js.map","import AbortablePromiseCache from '@gmod/abortable-promise-cache';\nimport { IndexedFasta } from '@gmod/indexedfasta';\nimport { BaseSequenceAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { SimpleFeature, updateStatus2 } from '@jbrowse/core/util';\nimport QuickLRU from '@jbrowse/core/util/QuickLRU';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { checkStopToken } from '@jbrowse/core/util/stopToken';\nexport default class IndexedFastaAdapter extends BaseSequenceAdapter {\n    constructor() {\n        super(...arguments);\n        this.seqCache = new AbortablePromiseCache({\n            cache: new QuickLRU({ maxSize: 200 }),\n            fill: async (args) => {\n                const { refName, start, end, fasta } = args;\n                return fasta.getSequence(refName, start, end);\n            },\n        });\n    }\n    async getRefNames(_opts) {\n        const { fasta } = await this.setup();\n        return fasta.getSequenceNames();\n    }\n    async getRegions(_opts) {\n        const { fasta } = await this.setup();\n        const seqSizes = await fasta.getSequenceSizes();\n        return Object.keys(seqSizes).map(refName => ({\n            refName,\n            start: 0,\n            end: seqSizes[refName],\n        }));\n    }\n    async setupPre() {\n        const fastaLocation = this.getConf('fastaLocation');\n        const faiLocation = this.getConf('faiLocation');\n        return {\n            fasta: new IndexedFasta({\n                fasta: openLocation(fastaLocation, this.pluginManager),\n                fai: openLocation(faiLocation, this.pluginManager),\n            }),\n        };\n    }\n    async getHeader() {\n        const loc = this.getConf('metadataLocation');\n        return loc.uri === '' || loc.uri === '/path/to/fa.metadata.yaml'\n            ? null\n            : openLocation(loc, this.pluginManager).readFile('utf8');\n    }\n    async setup() {\n        if (!this.setupP) {\n            this.setupP = this.setupPre().catch((e) => {\n                this.setupP = undefined;\n                throw e;\n            });\n        }\n        return this.setupP;\n    }\n    getFeatures(region, opts) {\n        const { statusCallback = () => { }, stopToken } = opts || {};\n        const { refName, start, end } = region;\n        return ObservableCreate(async (observer) => {\n            await updateStatus2('Downloading sequence', statusCallback, stopToken, async () => {\n                const { fasta } = await this.setup();\n                const size = await fasta.getSequenceSize(refName);\n                const regionEnd = Math.min(size, end);\n                const chunks = [];\n                const chunkSize = 128000;\n                const s = start - (start % chunkSize);\n                const e = end + (chunkSize - (end % chunkSize));\n                for (let chunkStart = s; chunkStart < e; chunkStart += chunkSize) {\n                    const r = {\n                        refName,\n                        start: chunkStart,\n                        end: chunkStart + chunkSize,\n                    };\n                    checkStopToken(stopToken);\n                    chunks.push(await this.seqCache.get(JSON.stringify(r), { ...r, fasta }));\n                }\n                const seq = chunks\n                    .filter(f => !!f)\n                    .join('')\n                    .slice(start - s)\n                    .slice(0, end - start);\n                if (seq) {\n                    observer.next(new SimpleFeature({\n                        id: `${refName}-${start}-${regionEnd}`,\n                        data: {\n                            refName,\n                            start,\n                            end: regionEnd,\n                            seq,\n                        },\n                    }));\n                }\n            });\n            observer.complete();\n        });\n    }\n    freeResources() { }\n}\n"],"names":["_faiOffset","idx","pos","readFAI","fai","opts","text","idCounter","currSeq","data","line","row","entry","IndexedFasta","fasta","path","faiPath","LocalFile","returnObject","val","seqName","_a","name","seqId","min","max","indexEntry","end","position","readlen","residues","Buffer","IndexedFastaAdapter","BaseSequenceAdapter","AbortablePromiseCache","QuickLRU","args","refName","start","_opts","seqSizes","fastaLocation","faiLocation","openLocation","loc","region","statusCallback","stopToken","ObservableCreate","observer","updateStatus2","size","regionEnd","chunks","chunkSize","s","e","chunkStart","r","checkStopToken","seq","f","SimpleFeature"],"mappings":"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","x_google_ignoreList":[0,1]}
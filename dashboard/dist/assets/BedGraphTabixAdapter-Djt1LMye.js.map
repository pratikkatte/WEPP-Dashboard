{"version":3,"file":"BedGraphTabixAdapter-Djt1LMye.js","sources":["../../node_modules/@jbrowse/plugin-bed/esm/BedGraphTabixAdapter/BedGraphTabixAdapter.js"],"sourcesContent":["import { TabixIndexedFile } from '@gmod/tabix';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { SimpleFeature } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nexport default class BedGraphAdapter extends BaseFeatureDataAdapter {\n    async configurePre() {\n        const pm = this.pluginManager;\n        const bedGraphGzLocation = this.getConf('bedGraphGzLocation');\n        const location = this.getConf(['index', 'location']);\n        const indexType = this.getConf(['index', 'indexType']);\n        const filehandle = openLocation(bedGraphGzLocation, pm);\n        const isCSI = indexType === 'CSI';\n        const bedGraph = new TabixIndexedFile({\n            filehandle,\n            csiFilehandle: isCSI ? openLocation(location, pm) : undefined,\n            tbiFilehandle: !isCSI ? openLocation(location, pm) : undefined,\n            chunkCacheSize: 50 * 2 ** 20,\n        });\n        const columnNames = this.getConf('columnNames');\n        const header = await bedGraph.getHeader();\n        return {\n            columnNames,\n            bedGraph,\n            header,\n        };\n    }\n    async configure() {\n        if (!this.configured) {\n            this.configured = this.configurePre().catch((e) => {\n                this.configured = undefined;\n                throw e;\n            });\n        }\n        return this.configured;\n    }\n    async getNames() {\n        const { bedGraph, columnNames } = await this.configure();\n        if (columnNames.length) {\n            return columnNames;\n        }\n        const header = await bedGraph.getHeader();\n        const defs = header.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const defline = defs.at(-1);\n        return (defline === null || defline === void 0 ? void 0 : defline.includes('\\t'))\n            ? defline\n                .slice(1)\n                .split('\\t')\n                .map(f => f.trim())\n            : undefined;\n    }\n    async getRefNames(opts = {}) {\n        const { bedGraph } = await this.configure();\n        return bedGraph.getReferenceSequenceNames(opts);\n    }\n    async getHeader() {\n        const { bedGraph } = await this.configure();\n        return bedGraph.getHeader();\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            var _a;\n            const { bedGraph } = await this.configure();\n            const meta = await bedGraph.getMetadata();\n            const { columnNumbers } = meta;\n            const colRef = columnNumbers.ref - 1;\n            const colStart = columnNumbers.start - 1;\n            const colEnd = columnNumbers.end - 1;\n            const same = colStart === colEnd;\n            const names = ((_a = (await this.getNames())) === null || _a === void 0 ? void 0 : _a.slice(same ? 2 : 3)) || [];\n            await bedGraph.getLines(query.refName, query.start + (same ? -1 : 0), query.end, {\n                lineCallback: (line, fileOffset) => {\n                    const cols = line.split('\\t');\n                    const refName = cols[colRef];\n                    const start = +cols[colStart];\n                    const end = +(same ? start + 1 : cols[colEnd]);\n                    const rest = cols.slice(colEnd + 1);\n                    for (let j = 0; j < rest.length; j++) {\n                        const uniqueId = `${this.id}-${fileOffset}-${j}`;\n                        const score = Math.abs(+rest[j]);\n                        const source = names[j] || `col${j}`;\n                        if (score) {\n                            observer.next(new SimpleFeature({\n                                id: uniqueId,\n                                data: {\n                                    refName,\n                                    start,\n                                    end,\n                                    score,\n                                    source,\n                                },\n                            }));\n                        }\n                    }\n                },\n                ...opts,\n            });\n            observer.complete();\n        });\n    }\n    freeResources() { }\n}\n"],"names":["BedGraphAdapter","BaseFeatureDataAdapter","pm","bedGraphGzLocation","location","indexType","filehandle","openLocation","isCSI","bedGraph","TabixIndexedFile","columnNames","header","defline","f","opts","query","ObservableCreate","observer","_a","meta","columnNumbers","colRef","colStart","colEnd","same","names","line","fileOffset","cols","refName","start","end","rest","j","uniqueId","score","source","SimpleFeature"],"mappings":"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","x_google_ignoreList":[0]}
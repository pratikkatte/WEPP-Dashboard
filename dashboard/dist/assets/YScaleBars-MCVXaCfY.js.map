{"version":3,"file":"YScaleBars-MCVXaCfY.js","sources":["../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/RectBg.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ColorLegend.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ScoreLegend.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/YScaleBars.js"],"sourcesContent":["import React from 'react';\nimport { getFillProps } from '@jbrowse/core/util';\nconst RectBg = (props) => {\n    const { color = 'rgb(255,255,255,0.8)' } = props;\n    return React.createElement(\"rect\", { ...props, ...getFillProps(color) });\n};\nexport default RectBg;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport RectBg from './RectBg';\nconst ColorLegend = observer(function ({ model, rowHeight, labelWidth, exportSVG, }) {\n    const { needsCustomLegend, needsScalebar, needsFullHeightScalebar, rowHeightTooSmallForScalebar, renderColorBoxes, sources, } = model;\n    const svgFontSize = Math.min(rowHeight, 12);\n    const canDisplayLabel = rowHeight > 11;\n    const colorBoxWidth = renderColorBoxes ? 15 : 0;\n    const legendWidth = labelWidth + colorBoxWidth + 5;\n    const svgOffset = exportSVG ? 10 : 0;\n    const extraOffset = svgOffset || (needsScalebar && !rowHeightTooSmallForScalebar ? 50 : 0);\n    return sources ? (React.createElement(React.Fragment, null,\n        needsFullHeightScalebar ? (React.createElement(RectBg, { y: 0, x: extraOffset, width: legendWidth, height: (sources.length + 0.25) * rowHeight })) : null,\n        sources.map((source, idx) => {\n            const boxHeight = Math.min(20, rowHeight);\n            return (React.createElement(React.Fragment, { key: `${source.name}-${idx}` },\n                needsFullHeightScalebar ? null : (React.createElement(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: legendWidth, height: boxHeight })),\n                source.color ? (React.createElement(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: colorBoxWidth, height: needsCustomLegend ? rowHeight : boxHeight, color: source.color })) : null,\n                canDisplayLabel ? (React.createElement(\"text\", { y: idx * rowHeight + 13, x: extraOffset + colorBoxWidth + 2, fontSize: svgFontSize }, source.name)) : null));\n        }))) : null;\n});\nexport default ColorLegend;\n","import React from 'react';\nimport { getContainingView, measureText } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport RectBg from './RectBg';\nconst ScoreLegend = observer(({ model }) => {\n    const { ticks, scaleType } = model;\n    const { width } = getContainingView(model);\n    const legend = `[${ticks === null || ticks === void 0 ? void 0 : ticks.values[0]}-${ticks === null || ticks === void 0 ? void 0 : ticks.values[1]}]${scaleType === 'log' ? ' (log scale)' : ''}`;\n    const len = measureText(legend, 14);\n    const padding = 25;\n    const xpos = width - len - padding;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RectBg, { y: 0, x: xpos, width: len + 6, height: 16 }),\n        React.createElement(\"text\", { y: 13, x: xpos }, legend)));\n});\nexport default ScoreLegend;\n","import React from 'react';\nimport { getContainingView, measureText } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport ColorLegend from './ColorLegend';\nimport ScoreLegend from './ScoreLegend';\nimport { getOffset } from './util';\nimport YScaleBar from '../../shared/YScaleBar';\nconst Wrapper = observer(function ({ children, model, exportSVG, }) {\n    const { height } = model;\n    return exportSVG ? (children) : (React.createElement(\"svg\", { style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none',\n            height,\n            width: getContainingView(model).width,\n        } }, children));\n});\nexport const YScaleBars = observer(function (props) {\n    const { model, orientation, exportSVG } = props;\n    const { stats, needsCustomLegend, needsFullHeightScalebar, rowHeightTooSmallForScalebar, rowHeight, sources, ticks, } = model;\n    const svgFontSize = Math.min(rowHeight, 12);\n    const canDisplayLabel = rowHeight > 11;\n    const { width: viewWidth } = getContainingView(model);\n    const minWidth = 20;\n    const ready = stats && sources;\n    if (!ready) {\n        return null;\n    }\n    const labelWidth = Math.max(...sources\n        .map(s => measureText(s.name, svgFontSize))\n        .map(width => (canDisplayLabel ? width : minWidth)));\n    return (React.createElement(Wrapper, { ...props }, needsFullHeightScalebar ? (React.createElement(React.Fragment, null,\n        React.createElement(\"g\", { transform: `translate(${!exportSVG ? getOffset(model) : 0},0)` },\n            React.createElement(YScaleBar, { model: model, orientation: orientation })),\n        React.createElement(\"g\", { transform: `translate(${viewWidth - labelWidth - 100},0)` },\n            React.createElement(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: 12, labelWidth: labelWidth })))) : (React.createElement(React.Fragment, null,\n        React.createElement(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: model.rowHeight, labelWidth: labelWidth }),\n        rowHeightTooSmallForScalebar || needsCustomLegend ? (React.createElement(ScoreLegend, { ...props })) : (sources.map((_source, idx) => (React.createElement(\"g\", { transform: `translate(0 ${rowHeight * idx})`, key: `${JSON.stringify(ticks)}-${idx}` },\n            React.createElement(YScaleBar, { model: model, orientation: orientation })))))))));\n});\nexport default YScaleBars;\n"],"names":["RectBg","props","color","React","getFillProps","ColorLegend","observer","model","rowHeight","labelWidth","exportSVG","needsCustomLegend","needsScalebar","needsFullHeightScalebar","rowHeightTooSmallForScalebar","renderColorBoxes","sources","svgFontSize","canDisplayLabel","colorBoxWidth","legendWidth","extraOffset","source","idx","boxHeight","ScoreLegend","ticks","scaleType","width","getContainingView","legend","len","measureText","xpos","Wrapper","children","height","YScaleBars","orientation","stats","viewWidth","minWidth","s","getOffset","YScaleBar","_source"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
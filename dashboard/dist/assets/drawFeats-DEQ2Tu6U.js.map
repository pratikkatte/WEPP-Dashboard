{"version":3,"file":"drawFeats-DEQ2Tu6U.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/util.js","../../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawLongReadChains.js","../../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawPairChains.js","../../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawFeats.js"],"sourcesContent":["export function fillRectCtx(x, y, width, height, ctx, fillColor) {\n    if (width < 0) {\n        x += width;\n        width = -width;\n    }\n    if (height < 0) {\n        y += height;\n        height = -height;\n    }\n    if (fillColor) {\n        ctx.fillStyle = fillColor;\n    }\n    ctx.fillRect(x, y, width, height);\n}\nexport function strokeRectCtx(x, y, width, height, ctx, strokeColor) {\n    if (width < 0) {\n        x += width;\n        width = -width;\n    }\n    if (height < 0) {\n        y += height;\n        height = -height;\n    }\n    if (strokeColor) {\n        ctx.strokeStyle = strokeColor;\n    }\n    ctx.strokeRect(x, y, width, height);\n}\n","import { getConf } from '@jbrowse/core/configuration';\nimport { max, min } from '@jbrowse/core/util';\nimport { fillRectCtx, strokeRectCtx } from './util';\nimport { fillColor, strokeColor } from '../shared/color';\nexport function drawLongReadChains({ ctx, self, chainData, view, asm, }) {\n    var _a, _b, _c, _d, _e;\n    const distances = [];\n    const minXs = [];\n    const { chains } = chainData;\n    const { height } = self;\n    const featureHeight = getConf(self, 'featureHeight');\n    for (const chain of chains) {\n        let minX = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        for (const elt of chain) {\n            const refName = asm.getCanonicalRefName(elt.refName) || elt.refName;\n            const rs = (_a = view.bpToPx({ refName, coord: elt.start })) === null || _a === void 0 ? void 0 : _a.offsetPx;\n            const re = (_b = view.bpToPx({ refName, coord: elt.end })) === null || _b === void 0 ? void 0 : _b.offsetPx;\n            if (rs !== undefined && re !== undefined) {\n                minX = Math.min(minX, rs);\n                maxX = Math.max(maxX, re);\n            }\n        }\n        const distance = Math.abs(maxX - minX);\n        distances.push(distance);\n        minXs.push(minX);\n    }\n    const maxD = Math.log(max(distances));\n    const minD = Math.max(Math.log(min(distances)) - 1, 0);\n    const scaler = (height - 20) / (maxD - minD);\n    const halfHeight = featureHeight / 2 - 0.5;\n    for (let i = 0; i < chains.length; i++) {\n        const chain = chains[i];\n        const w = distances[i];\n        const top = (Math.log(w) - minD) * scaler;\n        const min = minXs[i];\n        fillRectCtx(min - view.offsetPx, top + halfHeight, w, 1, ctx, 'black');\n        const c1 = chain[0];\n        let primaryStrand;\n        if (!(c1.flags & 2048)) {\n            primaryStrand = c1.strand;\n        }\n        else {\n            const res = (_c = c1.SA) === null || _c === void 0 ? void 0 : _c.split(';')[0].split(',')[2];\n            primaryStrand = res === '-' ? -1 : 1;\n        }\n        for (const v0 of chain) {\n            const ra = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const rs = (_d = view.bpToPx({ refName: ra, coord: v0.start })) === null || _d === void 0 ? void 0 : _d.offsetPx;\n            const re = (_e = view.bpToPx({ refName: ra, coord: v0.end })) === null || _e === void 0 ? void 0 : _e.offsetPx;\n            if (rs !== undefined && re !== undefined) {\n                const w = Math.max(re - rs, 2);\n                const l = rs - view.offsetPx;\n                const effectiveStrand = v0.strand * primaryStrand;\n                const c = effectiveStrand === -1 ? 'color_rev_strand' : 'color_fwd_strand';\n                strokeRectCtx(l, top, w, featureHeight, ctx, strokeColor[c]);\n                fillRectCtx(l, top, w, featureHeight, ctx, fillColor[c]);\n            }\n        }\n    }\n}\n","import { getConf } from '@jbrowse/core/configuration';\nimport { max, min } from '@jbrowse/core/util';\nimport { fillRectCtx, strokeRectCtx } from './util';\nimport { getPairedInsertSizeAndOrientationColor, getPairedInsertSizeColor, getPairedOrientationColor, } from '../shared/color';\nexport function drawPairChains({ ctx, self, chainData, view, asm, }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const coords = [];\n    const featureHeight = getConf(self, 'featureHeight');\n    const type = ((_a = self.colorBy) === null || _a === void 0 ? void 0 : _a.type) || 'insertSizeAndOrientation';\n    const { chains, stats } = chainData;\n    for (const chain of chains) {\n        if (chain.length > 1) {\n            const v0 = chain[0];\n            const v1 = chain[1];\n            const ra1 = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const ra2 = asm.getCanonicalRefName(v1.refName) || v1.refName;\n            const r1s = (_b = view.bpToPx({ refName: ra1, coord: v0.start })) === null || _b === void 0 ? void 0 : _b.offsetPx;\n            const r1e = (_c = view.bpToPx({ refName: ra1, coord: v0.end })) === null || _c === void 0 ? void 0 : _c.offsetPx;\n            const r2s = (_d = view.bpToPx({ refName: ra2, coord: v1.start })) === null || _d === void 0 ? void 0 : _d.offsetPx;\n            const r2e = (_e = view.bpToPx({ refName: ra2, coord: v1.end })) === null || _e === void 0 ? void 0 : _e.offsetPx;\n            let distance = 0;\n            if (r1s !== undefined &&\n                r1e !== undefined &&\n                r2s !== undefined &&\n                r2e !== undefined) {\n                if (v0.refName === v1.refName) {\n                    const s = Math.min(v0.start, v1.start);\n                    const e = Math.max(v0.end, v1.end);\n                    distance = Math.abs(e - s);\n                }\n                coords.push({\n                    r1s,\n                    r1e,\n                    r2s,\n                    r2e,\n                    v0,\n                    v1,\n                    distance,\n                });\n            }\n        }\n        else if (self.drawSingletons) {\n            const v0 = chain[0];\n            const ra1 = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const r1s = (_f = view.bpToPx({ refName: ra1, coord: v0.start })) === null || _f === void 0 ? void 0 : _f.offsetPx;\n            const r1e = (_g = view.bpToPx({ refName: ra1, coord: v0.end })) === null || _g === void 0 ? void 0 : _g.offsetPx;\n            if (r1s !== undefined && r1e !== undefined) {\n                const w1 = Math.max(r1e - r1s, 2);\n                fillRectCtx(r1s - view.offsetPx, 0, w1, featureHeight, ctx, '#f00');\n                strokeRectCtx(r1s - view.offsetPx, 0, w1, featureHeight, ctx, '#a00');\n            }\n        }\n    }\n    const maxD = Math.log(max(coords.map(c => c.distance)));\n    const minD = Math.max(Math.log(min(coords.map(c => c.distance))) - 1, 0);\n    const scaler = (self.height - 20) / (maxD - minD);\n    for (const { r1e, r1s, r2e, r2s, distance, v0, v1 } of coords) {\n        const w1 = Math.max(r1e - r1s, 2);\n        const w2 = Math.max(r2e - r2s, 2);\n        const [fill, stroke] = getPairedColor({ type, v0, v1, stats }) || [];\n        const top = (Math.log(distance) - minD) * scaler;\n        const halfHeight = featureHeight / 2 - 0.5;\n        const w = r2s - r1e;\n        fillRectCtx(r1e - view.offsetPx, top + halfHeight, w, 1, ctx, 'black');\n        strokeRectCtx(r1s - view.offsetPx, top, w1, featureHeight, ctx, stroke);\n        strokeRectCtx(r2s - view.offsetPx, top, w2, featureHeight, ctx, stroke);\n        fillRectCtx(r1s - view.offsetPx, top, w1, featureHeight, ctx, fill);\n        fillRectCtx(r2s - view.offsetPx, top, w2, featureHeight, ctx, fill);\n    }\n}\nexport function getPairedColor({ type, v0, v1, stats, }) {\n    if (type === 'insertSizeAndOrientation') {\n        return getPairedInsertSizeAndOrientationColor(v0, v1, stats);\n    }\n    if (type === 'orientation') {\n        return getPairedOrientationColor(v0);\n    }\n    if (type === 'insertSize') {\n        return getPairedInsertSizeColor(v0, v1, stats);\n    }\n    if (type === 'gradient') {\n        const s = Math.min(v0.start, v1.start);\n        const e = Math.max(v0.end, v1.end);\n        return [\n            `hsl(${Math.log10(Math.abs(e - s)) * 10},50%,50%)`,\n            `hsl(${Math.log10(Math.abs(e - s)) * 10},50%,30%)`,\n        ];\n    }\n    return undefined;\n}\n","import { getContainingView, getSession } from '@jbrowse/core/util';\nimport { drawLongReadChains } from './drawLongReadChains';\nimport { drawPairChains } from './drawPairChains';\nimport { hasPairedReads } from '../shared/util';\nexport function drawFeats(self, ctx) {\n    const { chainData } = self;\n    if (!chainData) {\n        return;\n    }\n    const { assemblyManager } = getSession(self);\n    const view = getContainingView(self);\n    const assemblyName = view.assemblyNames[0];\n    const asm = assemblyManager.get(assemblyName);\n    if (!asm) {\n        return;\n    }\n    const hasPaired = hasPairedReads(chainData);\n    if (hasPaired) {\n        drawPairChains({ self, view, asm, ctx, chainData });\n    }\n    else {\n        drawLongReadChains({ self, view, asm, ctx, chainData });\n    }\n}\n"],"names":["fillRectCtx","x","y","width","height","ctx","fillColor","strokeRectCtx","strokeColor","drawLongReadChains","self","chainData","view","asm","_a","_b","_c","_d","_e","distances","minXs","chains","featureHeight","getConf","chain","minX","maxX","elt","refName","rs","re","distance","maxD","max","minD","min","scaler","halfHeight","i","w","top","c1","primaryStrand","v0","ra","l","c","drawPairChains","_f","_g","coords","type","stats","v1","ra1","ra2","r1s","r1e","r2s","r2e","s","e","w1","w2","fill","stroke","getPairedColor","getPairedInsertSizeAndOrientationColor","getPairedOrientationColor","getPairedInsertSizeColor","drawFeats","assemblyManager","getSession","getContainingView","assemblyName","hasPairedReads"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
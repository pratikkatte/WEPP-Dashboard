{"version":3,"file":"AddConnectionWidget-CgvKofiH.js","sources":["../../node_modules/@jbrowse/plugin-data-management/esm/AddConnectionWidget/components/ConfigureConnection.js","../../node_modules/@mui/icons-material/esm/OpenInNew.js","../../node_modules/@jbrowse/plugin-data-management/esm/AddConnectionWidget/components/ConnectionTypeSelect.js","../../node_modules/@jbrowse/plugin-data-management/esm/AddConnectionWidget/components/AddConnectionWidget.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { LoadingEllipses } from '@jbrowse/core/ui';\nimport { ConfigurationEditor } from '@jbrowse/plugin-config';\nimport { observer } from 'mobx-react';\nconst ConfigureConnection = observer(function ({ connectionType, model, session, }) {\n    const ConfigEditorComponent = connectionType.configEditorComponent || ConfigurationEditor;\n    return (React.createElement(Suspense, { fallback: React.createElement(LoadingEllipses, null) },\n        React.createElement(ConfigEditorComponent, { model: { target: model }, session: session })));\n});\nexport default ConfigureConnection;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","import React, { useEffect } from 'react';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { IconButton, MenuItem, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst ConnectionTypeSelect = observer(function ConnectionTypeSelect({ connectionTypeChoices, connectionType, setConnectionType, }) {\n    const firstChoice = connectionTypeChoices[0];\n    useEffect(() => {\n        if (!connectionType) {\n            setConnectionType(firstChoice);\n        }\n    }, [connectionType, firstChoice, setConnectionType]);\n    return (React.createElement(\"form\", { autoComplete: \"off\" }, connectionType ? (React.createElement(TextField, { value: connectionType.name, label: \"connectionType\", helperText: connectionType.description ? (React.createElement(React.Fragment, null,\n            connectionType.description,\n            connectionType.url ? (React.createElement(IconButton, { href: connectionType.url, rel: \"noopener noreferrer\", target: \"_blank\" },\n                React.createElement(OpenInNewIcon, null))) : null)) : null, select: true, fullWidth: true, onChange: event => {\n            setConnectionType(connectionTypeChoices.find(c => c.name === event.target.value));\n        }, variant: \"outlined\" }, connectionTypeChoices.map(c => (React.createElement(MenuItem, { key: c.name, value: c.name }, c.displayName || c.name))))) : null));\n});\nexport default ConnectionTypeSelect;\n","import React, { useMemo, useState } from 'react';\nimport { getEnv, getSession, isSessionModelWithWidgets, } from '@jbrowse/core/util';\nimport { isSessionWithConnections } from '@jbrowse/product-core';\nimport { Button, Step, StepContent, StepLabel, Stepper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport ConfigureConnection from './ConfigureConnection';\nimport ConnectionTypeSelect from './ConnectionTypeSelect';\nconst useStyles = makeStyles()(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    stepper: {\n        backgroundColor: theme.palette.background.default,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n}));\nconst steps = ['Select a Connection Type', 'Configure Connection'];\nconst AddConnectionWidget = observer(function ({ model }) {\n    const [connectionType, setConnectionType] = useState();\n    const [connectionId, setConnectionId] = useState();\n    const [activeStep, setActiveStep] = useState(0);\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    const configModel = useMemo(() => connectionType === null || connectionType === void 0 ? void 0 : connectionType.configSchema.create({ connectionId }, getEnv(model)), [connectionId, connectionType, model]);\n    return (React.createElement(\"div\", { className: classes.root },\n        React.createElement(Stepper, { className: classes.stepper, activeStep: activeStep, orientation: \"vertical\" }, steps.map(label => (React.createElement(Step, { key: label },\n            React.createElement(StepLabel, null, label),\n            React.createElement(StepContent, null,\n                activeStep === 0 ? (React.createElement(ConnectionTypeSelect, { connectionTypeChoices: pluginManager.getConnectionElements(), connectionType: connectionType, setConnectionType: c => {\n                        setConnectionType(c);\n                        if (!c) {\n                            return;\n                        }\n                        setConnectionId(`${c.name}-${Date.now()}`);\n                    } })) : connectionType && configModel ? (React.createElement(ConfigureConnection, { connectionType: connectionType, model: configModel, session: session })) : null,\n                React.createElement(\"div\", { className: classes.actionsContainer },\n                    React.createElement(Button, { disabled: activeStep === 0, onClick: () => {\n                            setActiveStep(activeStep - 1);\n                        }, className: classes.button }, \"Back\"),\n                    React.createElement(Button, { disabled: !((activeStep === 0 && connectionType) ||\n                            (activeStep === 1 && configModel)), variant: \"contained\", color: \"primary\", onClick: () => {\n                            if (activeStep === steps.length - 1) {\n                                if (configModel && isSessionWithConnections(session)) {\n                                    const conf = session.addConnectionConf(configModel);\n                                    session.makeConnection(conf);\n                                }\n                                else {\n                                    session.notify('No config model to add');\n                                }\n                                if (isSessionModelWithWidgets(session)) {\n                                    session.hideWidget(model);\n                                }\n                            }\n                            else {\n                                setActiveStep(activeStep + 1);\n                            }\n                        }, className: classes.button, \"data-testid\": \"addConnectionNext\" }, activeStep === steps.length - 1 ? 'Connect' : 'Next')))))))));\n});\nexport default AddConnectionWidget;\n"],"names":["ConfigureConnection","observer","connectionType","model","session","ConfigEditorComponent","ConfigurationEditor","React","Suspense","LoadingEllipses","OpenInNewIcon","createSvgIcon","_jsx","ConnectionTypeSelect","connectionTypeChoices","setConnectionType","firstChoice","useEffect","TextField","IconButton","event","c","MenuItem","useStyles","makeStyles","theme","steps","AddConnectionWidget","useState","connectionId","setConnectionId","activeStep","setActiveStep","classes","getSession","pluginManager","getEnv","configModel","useMemo","Stepper","label","Step","StepLabel","StepContent","Button","isSessionWithConnections","conf","isSessionModelWithWidgets"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
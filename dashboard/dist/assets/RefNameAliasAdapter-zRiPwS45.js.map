{"version":3,"file":"RefNameAliasAdapter-zRiPwS45.js","sources":["../node_modules/@jbrowse/plugin-config/esm/RefNameAliasAdapter/RefNameAliasAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class RefNameAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n            return [];\n        }\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        const refColumn = this.getConf('refNameColumn');\n        return results\n            .trim()\n            .split(/\\n|\\r\\n|\\r/)\n            .filter(f => !!f && !f.startsWith('#'))\n            .map(row => {\n            const aliases = row.split('\\t');\n            const [refName] = aliases.splice(refColumn, 1);\n            return {\n                refName: refName,\n                aliases: aliases.filter(f => !!f.trim()),\n            };\n        });\n    }\n    async freeResources() { }\n}\n"],"names":["RefNameAliasAdapter","BaseAdapter","loc","results","openLocation","refColumn","f","row","aliases","refName"],"mappings":"oFAEe,MAAMA,UAA4BC,EAAAA,WAAY,CACzD,MAAM,mBAAoB,CACtB,MAAMC,EAAM,KAAK,QAAQ,UAAU,EACnC,GAAIA,EAAI,MAAQ,IAAMA,EAAI,MAAQ,0BAC9B,MAAO,CAAE,EAEb,MAAMC,EAAU,MAAMC,EAAAA,aAAaF,EAAK,KAAK,aAAa,EAAE,SAAS,MAAM,EACrEG,EAAY,KAAK,QAAQ,eAAe,EAC9C,OAAOF,EACF,KAAI,EACJ,MAAM,YAAY,EAClB,OAAOG,GAAK,CAAC,CAACA,GAAK,CAACA,EAAE,WAAW,GAAG,CAAC,EACrC,IAAIC,GAAO,CACZ,MAAMC,EAAUD,EAAI,MAAM,GAAI,EACxB,CAACE,CAAO,EAAID,EAAQ,OAAOH,EAAW,CAAC,EAC7C,MAAO,CACH,QAASI,EACT,QAASD,EAAQ,OAAOF,GAAK,CAAC,CAACA,EAAE,MAAM,CAC1C,CACb,CAAS,CACT,CACI,MAAM,eAAgB,CAAA,CAC1B","x_google_ignoreList":[0]}
{"version":3,"file":"BamAdapter-s5x0ODag.js","sources":["../node_modules/@jbrowse/plugin-alignments/esm/BamAdapter/BamSlightlyLazyFeature.js","../node_modules/@jbrowse/plugin-alignments/esm/BamAdapter/BamAdapter.js"],"sourcesContent":["import { getMismatches } from '../MismatchParser';\nimport { cacheGetter } from '../shared/util';\nexport default class BamSlightlyLazyFeature {\n    constructor(record, adapter, ref) {\n        this.record = record;\n        this.adapter = adapter;\n        this.ref = ref;\n    }\n    id() {\n        return `${this.adapter.id}-${this.record.id}`;\n    }\n    get mismatches() {\n        return getMismatches(this.record.CIGAR, this.record.tags.MD, this.record.seq, this.ref, this.record.qual);\n    }\n    get qual() {\n        var _a;\n        return (_a = this.record.qual) === null || _a === void 0 ? void 0 : _a.join(' ');\n    }\n    get(field) {\n        return field === 'mismatches'\n            ? this.mismatches\n            : field === 'qual'\n                ? this.qual\n                : this.fields[field];\n    }\n    parent() {\n        return undefined;\n    }\n    children() {\n        return undefined;\n    }\n    get fields() {\n        const r = this.record;\n        const a = this.adapter;\n        const p = r.isPaired();\n        return {\n            start: r.start,\n            name: r.name,\n            end: r.end,\n            score: r.score,\n            strand: r.strand,\n            template_length: r.template_length,\n            flags: r.flags,\n            tags: r.tags,\n            refName: a.refIdToName(r.ref_id),\n            CIGAR: r.CIGAR,\n            seq: r.seq,\n            type: 'match',\n            pair_orientation: r.pair_orientation,\n            next_ref: p ? a.refIdToName(r.next_refid) : undefined,\n            next_pos: p ? r.next_pos : undefined,\n            next_segment_position: p\n                ? `${a.refIdToName(r.next_refid)}:${r.next_pos + 1}`\n                : undefined,\n            uniqueId: this.id(),\n        };\n    }\n    toJSON() {\n        return {\n            ...this.fields,\n            qual: this.qual,\n        };\n    }\n}\ncacheGetter(BamSlightlyLazyFeature, 'fields');\ncacheGetter(BamSlightlyLazyFeature, 'mismatches');\n","import { BamFile } from '@gmod/bam';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { bytesForRegions, updateStatus } from '@jbrowse/core/util';\nimport QuickLRU from '@jbrowse/core/util/QuickLRU';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { checkStopToken } from '@jbrowse/core/util/stopToken';\nimport { firstValueFrom } from 'rxjs';\nimport { toArray } from 'rxjs/operators';\nimport BamSlightlyLazyFeature from './BamSlightlyLazyFeature';\nimport { filterReadFlag, filterTagValue } from '../shared/util';\nexport default class BamAdapter extends BaseFeatureDataAdapter {\n    constructor() {\n        super(...arguments);\n        this.ultraLongFeatureCache = new QuickLRU({\n            maxSize: 500,\n        });\n    }\n    async configurePre() {\n        const bamLocation = this.getConf('bamLocation');\n        const location = this.getConf(['index', 'location']);\n        const indexType = this.getConf(['index', 'indexType']);\n        const pm = this.pluginManager;\n        const csi = indexType === 'CSI';\n        const bam = new BamFile({\n            bamFilehandle: openLocation(bamLocation, pm),\n            csiFilehandle: csi ? openLocation(location, pm) : undefined,\n            baiFilehandle: !csi ? openLocation(location, pm) : undefined,\n            yieldThreadTime: Number.POSITIVE_INFINITY,\n        });\n        const adapterConfig = this.getConf('sequenceAdapter');\n        if (adapterConfig && this.getSubAdapter) {\n            const { dataAdapter } = await this.getSubAdapter(adapterConfig);\n            return {\n                bam,\n                sequenceAdapter: dataAdapter,\n            };\n        }\n        return { bam };\n    }\n    async configure() {\n        if (!this.configureP) {\n            this.configureP = this.configurePre().catch((e) => {\n                this.configureP = undefined;\n                throw e;\n            });\n        }\n        return this.configureP;\n    }\n    async getHeader(_opts) {\n        const { bam } = await this.configure();\n        return bam.getHeaderText();\n    }\n    async setupPre(opts) {\n        const { statusCallback = () => { } } = opts || {};\n        const { bam } = await this.configure();\n        this.samHeader = await updateStatus('Downloading index', statusCallback, async () => {\n            const samHeader = await bam.getHeader();\n            const idToName = [];\n            const nameToId = {};\n            samHeader === null || samHeader === void 0 ? void 0 : samHeader.filter(l => l.tag === 'SQ').forEach((sqLine, refId) => {\n                const SN = sqLine.data.find(item => item.tag === 'SN');\n                if (SN) {\n                    const refName = SN.value;\n                    nameToId[refName] = refId;\n                    idToName[refId] = refName;\n                }\n            });\n            return { idToName, nameToId };\n        });\n        return this.samHeader;\n    }\n    async setup(opts) {\n        if (!this.setupP) {\n            this.setupP = this.setupPre(opts).catch((e) => {\n                this.setupP = undefined;\n                throw e;\n            });\n        }\n        return this.setupP;\n    }\n    async getRefNames(opts) {\n        const { idToName } = await this.setup(opts);\n        return idToName;\n    }\n    async seqFetch(refName, start, end) {\n        const { sequenceAdapter } = await this.configure();\n        const refSeqStore = sequenceAdapter;\n        if (!refSeqStore) {\n            return undefined;\n        }\n        if (!refName) {\n            return undefined;\n        }\n        const features = refSeqStore.getFeatures({\n            refName,\n            start,\n            end,\n            assemblyName: '',\n        });\n        const seqChunks = await firstValueFrom(features.pipe(toArray()));\n        let sequence = '';\n        seqChunks\n            .sort((a, b) => a.get('start') - b.get('start'))\n            .forEach(chunk => {\n            const chunkStart = chunk.get('start');\n            const chunkEnd = chunk.get('end');\n            const trimStart = Math.max(start - chunkStart, 0);\n            const trimEnd = Math.min(end - chunkStart, chunkEnd - chunkStart);\n            const trimLength = trimEnd - trimStart;\n            const chunkSeq = chunk.get('seq') || chunk.get('residues');\n            sequence += chunkSeq.slice(trimStart, trimStart + trimLength);\n        });\n        if (sequence.length !== end - start) {\n            throw new Error(`sequence fetch failed: fetching ${refName}:${(start - 1).toLocaleString()}-${end.toLocaleString()} returned ${sequence.length.toLocaleString()} bases, but should have returned ${(end - start).toLocaleString()}`);\n        }\n        return sequence;\n    }\n    getFeatures(region, opts) {\n        const { refName, start, end, originalRefName } = region;\n        const { stopToken, filterBy, statusCallback = () => { } } = opts || {};\n        return ObservableCreate(async (observer) => {\n            const { bam } = await this.configure();\n            await this.setup(opts);\n            checkStopToken(stopToken);\n            const records = await updateStatus('Downloading alignments', statusCallback, () => bam.getRecordsForRange(refName, start, end));\n            checkStopToken(stopToken);\n            await updateStatus('Processing alignments', statusCallback, async () => {\n                const { flagInclude = 0, flagExclude = 0, tagFilter, readName, } = filterBy || {};\n                for (const record of records) {\n                    let ref;\n                    if (!record.tags.MD) {\n                        ref = await this.seqFetch(originalRefName || refName, record.start, record.end);\n                    }\n                    if (filterReadFlag(record.flags, flagInclude, flagExclude)) {\n                        continue;\n                    }\n                    if (tagFilter &&\n                        filterTagValue(record.tags[tagFilter.tag], tagFilter.value)) {\n                        continue;\n                    }\n                    if (readName && record.name !== readName) {\n                        continue;\n                    }\n                    const ret = this.ultraLongFeatureCache.get(`${record.id}`);\n                    if (!ret) {\n                        const elt = new BamSlightlyLazyFeature(record, this, ref);\n                        this.ultraLongFeatureCache.set(`${record.id}`, elt);\n                        observer.next(elt);\n                    }\n                    else {\n                        observer.next(ret);\n                    }\n                }\n                observer.complete();\n            });\n        });\n    }\n    async getMultiRegionFeatureDensityStats(regions, opts) {\n        const { bam } = await this.configure();\n        if (bam.index) {\n            const bytes = await bytesForRegions(regions, bam);\n            const fetchSizeLimit = this.getConf('fetchSizeLimit');\n            return { bytes, fetchSizeLimit };\n        }\n        return super.getMultiRegionFeatureDensityStats(regions, opts);\n    }\n    freeResources() { }\n    refIdToName(refId) {\n        var _a;\n        return (_a = this.samHeader) === null || _a === void 0 ? void 0 : _a.idToName[refId];\n    }\n}\n"],"names":["BamSlightlyLazyFeature","record","adapter","ref","getMismatches","_a","field","r","a","p","cacheGetter","BamAdapter","BaseFeatureDataAdapter","QuickLRU","bamLocation","location","indexType","pm","csi","bam","BamFile","openLocation","adapterConfig","dataAdapter","_opts","opts","statusCallback","updateStatus","samHeader","idToName","nameToId","l","sqLine","refId","SN","item","refName","e","start","end","sequenceAdapter","refSeqStore","features","seqChunks","firstValueFrom","toArray","sequence","b","chunk","chunkStart","chunkEnd","trimStart","trimLength","chunkSeq","region","originalRefName","stopToken","filterBy","ObservableCreate","observer","checkStopToken","records","flagInclude","flagExclude","tagFilter","readName","filterReadFlag","filterTagValue","ret","elt","regions","bytes","bytesForRegions","fetchSizeLimit"],"mappings":"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","x_google_ignoreList":[0,1]}
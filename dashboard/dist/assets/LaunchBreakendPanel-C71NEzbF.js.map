{"version":3,"mappings":"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","names":["BreakendMultiLevelOptionDialog","lazy","__vitePreload","n","BreakendSingleLevelOptionDialog","LocStringList","locStrings","model","session","getSession","React","Typography","locString","index","Link","event","_a","view","e","LaunchBreakpointSplitViewPanel","feature","_b","simpleFeature","SimpleFeature","assemblyName","handleClose","BreakendPanel","props","pluginManager","getEnv","hasBreakpointSplitView","BaseCard"],"ignoreList":[0],"sources":["../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/LaunchBreakendPanel.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util';\nimport { Link, Typography } from '@mui/material';\nconst BreakendMultiLevelOptionDialog = lazy(() => import('./BreakendMultiLevelOptionDialog'));\nconst BreakendSingleLevelOptionDialog = lazy(() => import('./BreakendSingleLevelOptionDialog'));\nfunction LocStringList({ locStrings, model, }) {\n    const session = getSession(model);\n    return (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"Navigate to breakend endpoint in linear view:\"),\n        React.createElement(\"ul\", null, locStrings.map((locString, index) => (React.createElement(\"li\", { key: `${locString}-${index}` },\n            locString,\n            ' ',\n            React.createElement(Link, { href: \"#\", onClick: event => {\n                    var _a;\n                    event.preventDefault();\n                    const { view } = model;\n                    try {\n                        if (view) {\n                            (_a = view.navToLocString) === null || _a === void 0 ? void 0 : _a.call(view, locString);\n                        }\n                        else {\n                            throw new Error('No view associated with this feature detail panel anymore');\n                        }\n                    }\n                    catch (e) {\n                        console.error(e);\n                        session.notify(`${e}`);\n                    }\n                } }, \"(LGV)\")))))));\n}\nfunction LaunchBreakpointSplitViewPanel({ locStrings, model, feature, }) {\n    var _a, _b;\n    const session = getSession(model);\n    const simpleFeature = new SimpleFeature(feature);\n    const assemblyName = (_b = (_a = model.view) === null || _a === void 0 ? void 0 : _a.displayedRegions[0]) === null || _b === void 0 ? void 0 : _b.assemblyName;\n    return (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"Launch split view\"),\n        React.createElement(\"ul\", null, locStrings.map(locString => (React.createElement(\"li\", { key: JSON.stringify(locString) },\n            `${feature.refName}:${feature.start} // ${locString}`,\n            ' ',\n            React.createElement(Link, { href: \"#\", onClick: event => {\n                    event.preventDefault();\n                    session.queueDialog(handleClose => [\n                        BreakendMultiLevelOptionDialog,\n                        {\n                            handleClose,\n                            session,\n                            feature: simpleFeature,\n                            stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_multilevel`,\n                            view: model.view,\n                            assemblyName,\n                        },\n                    ]);\n                } }, \"(top/bottom)\"),\n            ' ',\n            React.createElement(Link, { href: \"#\", onClick: event => {\n                    event.preventDefault();\n                    session.queueDialog(handleClose => [\n                        BreakendSingleLevelOptionDialog,\n                        {\n                            handleClose,\n                            session,\n                            feature: simpleFeature,\n                            stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_singlelevel`,\n                            view: model.view,\n                            assemblyName,\n                        },\n                    ]);\n                } }, \"(single row)\")))))));\n}\nexport default function BreakendPanel(props) {\n    const { model, locStrings, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let hasBreakpointSplitView = false;\n    try {\n        hasBreakpointSplitView = !!pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n    }\n    return (React.createElement(BaseCard, { ...props, title: \"Breakends\" },\n        React.createElement(LocStringList, { model: model, locStrings: locStrings }),\n        hasBreakpointSplitView ? (React.createElement(LaunchBreakpointSplitViewPanel, { model: model, locStrings: locStrings, feature: feature })) : null));\n}\n"],"file":"assets/LaunchBreakendPanel-C71NEzbF.js"}
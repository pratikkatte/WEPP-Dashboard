{"version":3,"file":"SetColorDialog-DZkmmoAK.js","sources":["../node_modules/@jbrowse/plugin-variants/esm/shared/DraggableDialog.js","../node_modules/@jbrowse/plugin-variants/esm/shared/util.js","../node_modules/@jbrowse/plugin-variants/esm/shared/SourcesGrid.js","../node_modules/@jbrowse/plugin-variants/esm/shared/BulkEditPanel.js","../node_modules/@jbrowse/plugin-variants/esm/shared/RowPalettizer.js","../node_modules/@jbrowse/plugin-variants/esm/shared/SetColorDialog.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Dialog, DialogTitle, Divider, IconButton, Paper, ScopedCssBaseline, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport Draggable from 'react-draggable';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\nfunction PaperComponent(props) {\n    const ref = useRef(null);\n    return (React.createElement(Draggable, { nodeRef: ref, cancel: '[class*=\"MuiDialogContent-root\"]', onStart: arg => { var _a, _b; return (_b = (_a = arg.target) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.includes('MuiDialogTitle'); } },\n        React.createElement(Paper, { ref: ref, ...props })));\n}\nconst DraggableDialog = observer(function DraggableDialog(props) {\n    const { classes } = useStyles();\n    const { title, children, onClose } = props;\n    return (React.createElement(Dialog, { ...props, PaperComponent: PaperComponent },\n        React.createElement(ScopedCssBaseline, null,\n            React.createElement(DialogTitle, { style: { cursor: 'move' } },\n                title,\n                onClose ? (React.createElement(IconButton, { className: classes.closeButton, onClick: () => {\n                        onClose();\n                    } },\n                    React.createElement(CloseIcon, null))) : null),\n            React.createElement(Divider, null),\n            children)));\n});\nexport default DraggableDialog;\n","export function moveUp(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => a - b);\n    let lastIdx = 0;\n    for (const old of idxs) {\n        const idx = Math.max(lastIdx, old - by);\n        if (idx >= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx + 1;\n    }\n    return arr;\n}\nexport function moveDown(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => b - a);\n    let lastIdx = arr.length - 1;\n    for (const old of idxs) {\n        const idx = Math.min(lastIdx, old + by);\n        if (idx <= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx - 1;\n    }\n    return arr;\n}\n","import React, { useState } from 'react';\nimport { SanitizedHTML } from '@jbrowse/core/ui';\nimport ColorPicker, { ColorPopover } from '@jbrowse/core/ui/ColorPicker';\nimport { getStr, measureGridWidth } from '@jbrowse/core/util';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport { Button } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from 'tss-react/mui';\nimport { moveDown, moveUp } from './util';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\nfunction SourcesGrid({ rows, onChange, showTips, }) {\n    const { classes } = useStyles();\n    const [selected, setSelected] = useState([]);\n    const { name: _name, color: _color, baseUri: _baseUri, ...rest } = rows[0];\n    const [currSort, setCurrSort] = useState({\n        idx: 0,\n        field: null,\n    });\n    return (React.createElement(\"div\", null,\n        React.createElement(GridHeader, { selected: selected, rows: rows, showTips: showTips, onChange: onChange }),\n        React.createElement(\"div\", { style: { height: 400, width: '100%' } },\n            React.createElement(DataGrid, { getRowId: row => row.name, checkboxSelection: true, disableRowSelectionOnClick: true, onRowSelectionModelChange: arg => {\n                    setSelected(arg);\n                }, rows: rows, rowHeight: 25, columnHeaderHeight: 33, columns: [\n                    {\n                        field: 'color',\n                        headerName: 'Color',\n                        renderCell: params => {\n                            const { value, id } = params;\n                            return (React.createElement(ColorPicker, { color: value || 'blue', onChange: c => {\n                                    const elt = rows.find(f => f.name === id);\n                                    if (elt) {\n                                        elt.color = c;\n                                    }\n                                    onChange([...rows]);\n                                } }));\n                        },\n                    },\n                    {\n                        field: 'name',\n                        headerName: 'Name',\n                        width: measureGridWidth(rows.map(r => r.name)),\n                    },\n                    ...Object.keys(rest).map(val => ({\n                        field: val,\n                        renderCell: ({ value }) => (React.createElement(\"div\", { className: classes.cell },\n                            React.createElement(SanitizedHTML, { html: getStr(value) }))),\n                        width: measureGridWidth(rows.map(r => `${r[val]}`)),\n                    })),\n                ], sortModel: [], onSortModelChange: args => {\n                    const sort = args[0];\n                    const idx = (currSort.idx + 1) % 2;\n                    const field = sort.field || currSort.field;\n                    setCurrSort({ idx, field });\n                    onChange(field\n                        ? [...rows].sort((a, b) => {\n                            const aa = getStr(a[field]);\n                            const bb = getStr(b[field]);\n                            return idx === 1\n                                ? aa.localeCompare(bb)\n                                : bb.localeCompare(aa);\n                        })\n                        : rows);\n                } }))));\n}\nfunction GridHeader({ selected, onChange, rows, showTips, }) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [widgetColor, setWidgetColor] = useState('blue');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { disabled: !selected.length, onClick: event => {\n                setAnchorEl(event.currentTarget);\n            } }, \"Change color of selected items\"),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveUp([...rows], selected));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardArrowUpIcon, null),\n            showTips ? 'Move selected items up' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveDown([...rows], selected));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardArrowDownIcon, null),\n            showTips ? 'Move selected items down' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveUp([...rows], selected, rows.length));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardDoubleArrowUpIcon, null),\n            showTips ? 'Move selected items to top' : null),\n        React.createElement(Button, { onClick: () => {\n                onChange(moveDown([...rows], selected, rows.length));\n            }, disabled: !selected.length },\n            React.createElement(KeyboardDoubleArrowDownIcon, null),\n            showTips ? 'Move selected items to bottom' : null),\n        React.createElement(ColorPopover, { anchorEl: anchorEl, color: widgetColor, onChange: c => {\n                setWidgetColor(c);\n                selected.forEach(id => {\n                    const elt = rows.find(f => f.name === id);\n                    if (elt) {\n                        elt.color = c;\n                    }\n                });\n                onChange([...rows]);\n            }, onClose: () => {\n                setAnchorEl(null);\n            } })));\n}\nexport default SourcesGrid;\n","import React, { useState } from 'react';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n});\nexport default function BulkEditPanel({ setCurrLayout, currLayout, }) {\n    const { classes } = useStyles();\n    const [val, setVal] = useState('');\n    const [error, setError] = useState();\n    return (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"Paste CSV or TSV. If a header column is present. First line is a header. If a column called \\\"name\\\" is present, it uses that to connect to IDs in the table, otherwise it uses the first column no.\"),\n        React.createElement(TextField, { variant: \"outlined\", multiline: true, minRows: 5, placeholder: 'name,population\\nHG00098,GBR\\nHG00101,GBR\\nHG00459,CHS\\n...', maxRows: 10, fullWidth: true, value: val, onChange: event => {\n                setVal(event.target.value);\n            }, slotProps: {\n                input: {\n                    classes: {\n                        input: classes.textAreaFont,\n                    },\n                },\n            } }),\n        React.createElement(Button, { variant: \"contained\", onClick: () => {\n                const lines = val\n                    .split('\\n')\n                    .map(f => f.trim())\n                    .filter(f => !!f);\n                const fields = lines[0].split(/[,\\t]/gm);\n                if (fields.includes('name')) {\n                    setError('');\n                    const oldLayout = currLayout.map(record => [record.name, record]);\n                    const newData = Object.fromEntries(lines.slice(1).map(line => {\n                        const cols = line.split(/[,\\t]/gm);\n                        const newRecord = Object.fromEntries(cols.map((col, idx) => [fields[idx], col]));\n                        return [\n                            newRecord.name,\n                            { ...newRecord, ...oldLayout[newRecord.name] },\n                        ];\n                    }));\n                    setCurrLayout(currLayout.map(record => ({\n                        ...record,\n                        ...newData[record.name],\n                    })));\n                }\n                else {\n                    setError(new Error('No \"name\" column found on line 1'));\n                }\n            } }, \"Update rows\"),\n        React.createElement(Button, { variant: \"contained\", onClick: () => {\n                const lines = val\n                    .split('\\n')\n                    .map(f => f.trim())\n                    .filter(f => !!f);\n                const fields = lines[0].split(/[,\\t]/gm);\n                if (fields.includes('name')) {\n                    setError('');\n                    const oldLayout = currLayout.map(record => [record.name, record]);\n                    const newData = Object.fromEntries(lines.slice(1).map(line => {\n                        const cols = line.split(/[,\\t]/gm);\n                        const newRecord = Object.fromEntries(cols.map((col, idx) => [fields[idx], col]));\n                        return [\n                            newRecord.name,\n                            { ...newRecord, ...oldLayout[newRecord.name] },\n                        ];\n                    }));\n                    setCurrLayout(currLayout.map(record => ({\n                        ...newData[record.name],\n                    })));\n                }\n                else {\n                    setError(new Error('No \"name\" column found on line 1'));\n                }\n            } }, \"Replace rows\"),\n        error ? React.createElement(ErrorMessage, { error: error }) : null));\n}\n","import React from 'react';\nimport { set1 } from '@jbrowse/core/ui/colors';\nimport { Button } from '@mui/material';\nimport { randomColor } from '../util';\nexport default function RowPalettizer({ setCurrLayout, currLayout, }) {\n    var _a;\n    return (React.createElement(\"div\", null, Object.keys((_a = currLayout[0]) !== null && _a !== void 0 ? _a : [])\n        .filter(f => f !== 'name' && f !== 'color')\n        .map(r => {\n        return (React.createElement(Button, { key: r, onClick: () => {\n                const map = new Map();\n                for (const row of currLayout) {\n                    const val = map.get(row[r]);\n                    if (!val) {\n                        map.set(row[r], 1);\n                    }\n                    else {\n                        map.set(row[r], val + 1);\n                    }\n                }\n                const ret = Object.fromEntries([...map.entries()]\n                    .sort((a, b) => a[1] - b[1])\n                    .map((r, idx) => [r[0], set1[idx] || randomColor(r[0])]));\n                setCurrLayout(currLayout.map(row => ({\n                    ...row,\n                    color: ret[row[r]],\n                })));\n            } },\n            \"Palettize \",\n            r));\n    })));\n}\n","import React, { useState } from 'react';\nimport { useLocalStorage } from '@jbrowse/core/util';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport DraggableDialog from './DraggableDialog';\nimport SourcesGrid from './SourcesGrid';\nimport BulkEditPanel from './BulkEditPanel';\nimport RowPalettizer from './RowPalettizer';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n    fr: {\n        float: 'right',\n    },\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n});\nexport default function SetColorDialog({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { sources } = model;\n    const [showBulkEditor, setShowBulkEditor] = useState(false);\n    const [currLayout, setCurrLayout] = useState(sources || []);\n    const [showTips, setShowTips] = useLocalStorage('multivariant-showTips', false);\n    return (React.createElement(DraggableDialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: \"Multi-variant color/arrangement editor\" },\n        React.createElement(DialogContent, { className: classes.content },\n            React.createElement(\"div\", { className: classes.fr },\n                React.createElement(Button, { variant: \"contained\", onClick: () => {\n                        setShowTips(!showTips);\n                    } }, showTips ? 'Hide tips' : 'Show tips'),\n                React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                        setShowBulkEditor(!showBulkEditor);\n                    } }, showBulkEditor ? 'Hide bulk row editor' : 'Show Bulk row editor')),\n            React.createElement(\"br\", null),\n            showTips ? React.createElement(HelpfulTips, null) : null,\n            showBulkEditor ? (React.createElement(BulkEditPanel, { currLayout: currLayout, setCurrLayout: setCurrLayout })) : null,\n            React.createElement(RowPalettizer, { currLayout: currLayout, setCurrLayout: setCurrLayout }),\n            React.createElement(SourcesGrid, { rows: currLayout, onChange: setCurrLayout, showTips: showTips })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", type: \"submit\", color: \"inherit\", onClick: () => {\n                    model.clearLayout();\n                    setCurrLayout(model.sources || []);\n                } }, \"Clear custom settings\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                    setCurrLayout([...(model.sources || [])]);\n                } }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => {\n                    model.setLayout(currLayout);\n                    handleClose();\n                } }, \"Submit\"))));\n}\nfunction HelpfulTips() {\n    return (React.createElement(React.Fragment, null,\n        \"Helpful tips\",\n        React.createElement(\"ul\", null,\n            React.createElement(\"li\", null, \"You can select rows in the table with the checkboxes\"),\n            React.createElement(\"li\", null, \"Multi-select is enabled with shift-click and control-click\"),\n            React.createElement(\"li\", null, \"The \\\"Move selected items up/down\\\" can re-arrange subtracks\"),\n            React.createElement(\"li\", null, \"Sorting the data grid itself can also re-arrange subtracks\"),\n            React.createElement(\"li\", null, \"Changes are applied when you hit Submit\"),\n            React.createElement(\"li\", null, \"You can click and drag the dialog box to move it on the screen\"),\n            React.createElement(\"li\", null, \"Columns in the table can be hidden using a vertical '...' menu on the right side of each column\"))));\n}\n"],"names":["useStyles","makeStyles","theme","PaperComponent","props","ref","useRef","React","Draggable","arg","_a","_b","Paper","DraggableDialog","observer","classes","title","children","onClose","Dialog","ScopedCssBaseline","DialogTitle","IconButton","CloseIcon","Divider","moveUp","arr","sel","by","idxs","l","v","a","b","lastIdx","old","idx","moveDown","SourcesGrid","rows","onChange","showTips","selected","setSelected","useState","_name","_color","_baseUri","rest","currSort","setCurrSort","GridHeader","DataGrid","row","params","value","id","ColorPicker","c","elt","f","measureGridWidth","r","val","SanitizedHTML","getStr","args","sort","field","aa","bb","anchorEl","setAnchorEl","widgetColor","setWidgetColor","Button","event","KeyboardArrowUpIcon","KeyboardArrowDownIcon","KeyboardDoubleArrowUpIcon","KeyboardDoubleArrowDownIcon","ColorPopover","BulkEditPanel","setCurrLayout","currLayout","setVal","error","setError","Typography","TextField","lines","fields","oldLayout","record","newData","line","cols","newRecord","col","ErrorMessage","RowPalettizer","map","ret","set1","randomColor","SetColorDialog","model","handleClose","sources","showBulkEditor","setShowBulkEditor","setShowTips","useLocalStorage","DialogContent","HelpfulTips","DialogActions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}